/*!
 * imagesLoaded PACKAGED v4.1.1
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

/**
 * EvEmitter v1.0.3
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( typeof define == 'function' && define.amd ) {
    // AMD - RequireJS
    define( 'ev-emitter/ev-emitter',factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {



function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var i = 0;
  var listener = listeners[i];
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  while ( listener ) {
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
    // get next listener
    i += isOnce ? 0 : 1;
    listener = listeners[i];
  }

  return this;
};

return EvEmitter;

}));

/*!
 * imagesLoaded v4.1.1
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

( function( window, factory ) { 'use strict';
  // universal module definition

  /*global define: false, module: false, require: false */

  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( [
      'ev-emitter/ev-emitter'
    ], function( EvEmitter ) {
      return factory( window, EvEmitter );
    });
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('ev-emitter')
    );
  } else {
    // browser global
    window.imagesLoaded = factory(
      window,
      window.EvEmitter
    );
  }

})( window,

// --------------------------  factory -------------------------- //

function factory( window, EvEmitter ) {



var $ = window.jQuery;
var console = window.console;

// -------------------------- helpers -------------------------- //

// extend objects
function extend( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
}

// turn element or nodeList into an array
function makeArray( obj ) {
  var ary = [];
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    ary = obj;
  } else if ( typeof obj.length == 'number' ) {
    // convert nodeList to array
    for ( var i=0; i < obj.length; i++ ) {
      ary.push( obj[i] );
    }
  } else {
    // array of single index
    ary.push( obj );
  }
  return ary;
}

// -------------------------- imagesLoaded -------------------------- //

/**
 * @param {Array, Element, NodeList, String} elem
 * @param {Object or Function} options - if function, use as callback
 * @param {Function} onAlways - callback function
 */
function ImagesLoaded( elem, options, onAlways ) {
  // coerce ImagesLoaded() without new, to be new ImagesLoaded()
  if ( !( this instanceof ImagesLoaded ) ) {
    return new ImagesLoaded( elem, options, onAlways );
  }
  // use elem as selector string
  if ( typeof elem == 'string' ) {
    elem = document.querySelectorAll( elem );
  }

  this.elements = makeArray( elem );
  this.options = extend( {}, this.options );

  if ( typeof options == 'function' ) {
    onAlways = options;
  } else {
    extend( this.options, options );
  }

  if ( onAlways ) {
    this.on( 'always', onAlways );
  }

  this.getImages();

  if ( $ ) {
    // add jQuery Deferred object
    this.jqDeferred = new $.Deferred();
  }

  // HACK check async to allow time to bind listeners
  setTimeout( function() {
    this.check();
  }.bind( this ));
}

ImagesLoaded.prototype = Object.create( EvEmitter.prototype );

ImagesLoaded.prototype.options = {};

ImagesLoaded.prototype.getImages = function() {
  this.images = [];

  // filter & find items if we have an item selector
  this.elements.forEach( this.addElementImages, this );
};

/**
 * @param {Node} element
 */
ImagesLoaded.prototype.addElementImages = function( elem ) {
  // filter siblings
  if ( elem.nodeName == 'IMG' ) {
    this.addImage( elem );
  }
  // get background image on element
  if ( this.options.background === true ) {
    this.addElementBackgroundImages( elem );
  }

  // find children
  // no non-element nodes, #143
  var nodeType = elem.nodeType;
  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {
    return;
  }
  var childImgs = elem.querySelectorAll('img');
  // concat childElems to filterFound array
  for ( var i=0; i < childImgs.length; i++ ) {
    var img = childImgs[i];
    this.addImage( img );
  }

  // get child background images
  if ( typeof this.options.background == 'string' ) {
    var children = elem.querySelectorAll( this.options.background );
    for ( i=0; i < children.length; i++ ) {
      var child = children[i];
      this.addElementBackgroundImages( child );
    }
  }
};

var elementNodeTypes = {
  1: true,
  9: true,
  11: true
};

ImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    // Firefox returns null if in a hidden iframe https://bugzil.la/548397
    return;
  }
  // get url inside url("...")
  var reURL = /url\((['"])?(.*?)\1\)/gi;
  var matches = reURL.exec( style.backgroundImage );
  while ( matches !== null ) {
    var url = matches && matches[2];
    if ( url ) {
      this.addBackground( url, elem );
    }
    matches = reURL.exec( style.backgroundImage );
  }
};

/**
 * @param {Image} img
 */
ImagesLoaded.prototype.addImage = function( img ) {
  var loadingImage = new LoadingImage( img );
  this.images.push( loadingImage );
};

ImagesLoaded.prototype.addBackground = function( url, elem ) {
  var background = new Background( url, elem );
  this.images.push( background );
};

ImagesLoaded.prototype.check = function() {
  var _this = this;
  this.progressedCount = 0;
  this.hasAnyBroken = false;
  // complete if no images
  if ( !this.images.length ) {
    this.complete();
    return;
  }

  function onProgress( image, elem, message ) {
    // HACK - Chrome triggers event before object properties have changed. #83
    setTimeout( function() {
      _this.progress( image, elem, message );
    });
  }

  this.images.forEach( function( loadingImage ) {
    loadingImage.once( 'progress', onProgress );
    loadingImage.check();
  });
};

ImagesLoaded.prototype.progress = function( image, elem, message ) {
  this.progressedCount++;
  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
  // progress event
  this.emitEvent( 'progress', [ this, image, elem ] );
  if ( this.jqDeferred && this.jqDeferred.notify ) {
    this.jqDeferred.notify( this, image );
  }
  // check if completed
  if ( this.progressedCount == this.images.length ) {
    this.complete();
  }

  if ( this.options.debug && console ) {
    console.log( 'progress: ' + message, image, elem );
  }
};

ImagesLoaded.prototype.complete = function() {
  var eventName = this.hasAnyBroken ? 'fail' : 'done';
  this.isComplete = true;
  this.emitEvent( eventName, [ this ] );
  this.emitEvent( 'always', [ this ] );
  if ( this.jqDeferred ) {
    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
    this.jqDeferred[ jqMethod ]( this );
  }
};

// --------------------------  -------------------------- //

function LoadingImage( img ) {
  this.img = img;
}

LoadingImage.prototype = Object.create( EvEmitter.prototype );

LoadingImage.prototype.check = function() {
  // If complete is true and browser supports natural sizes,
  // try to check for image status manually.
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    // report based on naturalWidth
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    return;
  }

  // If none of the checks above matched, simulate loading on detached element.
  this.proxyImage = new Image();
  this.proxyImage.addEventListener( 'load', this );
  this.proxyImage.addEventListener( 'error', this );
  // bind to image as well for Firefox. #191
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.proxyImage.src = this.img.src;
};

LoadingImage.prototype.getIsImageComplete = function() {
  return this.img.complete && this.img.naturalWidth !== undefined;
};

LoadingImage.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.img, message ] );
};

// ----- events ----- //

// trigger specified handler for event type
LoadingImage.prototype.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

LoadingImage.prototype.onload = function() {
  this.confirm( true, 'onload' );
  this.unbindEvents();
};

LoadingImage.prototype.onerror = function() {
  this.confirm( false, 'onerror' );
  this.unbindEvents();
};

LoadingImage.prototype.unbindEvents = function() {
  this.proxyImage.removeEventListener( 'load', this );
  this.proxyImage.removeEventListener( 'error', this );
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

// -------------------------- Background -------------------------- //

function Background( url, element ) {
  this.url = url;
  this.element = element;
  this.img = new Image();
}

// inherit LoadingImage prototype
Background.prototype = Object.create( LoadingImage.prototype );

Background.prototype.check = function() {
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.img.src = this.url;
  // check if image is already complete
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    this.unbindEvents();
  }
};

Background.prototype.unbindEvents = function() {
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

Background.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.element, message ] );
};

// -------------------------- jQuery -------------------------- //

ImagesLoaded.makeJQueryPlugin = function( jQuery ) {
  jQuery = jQuery || window.jQuery;
  if ( !jQuery ) {
    return;
  }
  // set local variable
  $ = jQuery;
  // $().imagesLoaded()
  $.fn.imagesLoaded = function( options, callback ) {
    var instance = new ImagesLoaded( this, options, callback );
    return instance.jqDeferred.promise( $(this) );
  };
};
// try making plugin
ImagesLoaded.makeJQueryPlugin();

// --------------------------  -------------------------- //

return ImagesLoaded;

});

/*!
 * jQuery JavaScript Library v3.1.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-09-22T22:30Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;


// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( jQuery.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}





return jQuery;
} );
(function() {
  var MutationObserver, Util, WeakMap, getComputedStyle, getComputedStyleRX,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Util = (function() {
    function Util() {}

    Util.prototype.extend = function(custom, defaults) {
      var key, value;
      for (key in defaults) {
        value = defaults[key];
        if (custom[key] == null) {
          custom[key] = value;
        }
      }
      return custom;
    };

    Util.prototype.isMobile = function(agent) {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(agent);
    };

    Util.prototype.createEvent = function(event, bubble, cancel, detail) {
      var customEvent;
      if (bubble == null) {
        bubble = false;
      }
      if (cancel == null) {
        cancel = false;
      }
      if (detail == null) {
        detail = null;
      }
      if (document.createEvent != null) {
        customEvent = document.createEvent('CustomEvent');
        customEvent.initCustomEvent(event, bubble, cancel, detail);
      } else if (document.createEventObject != null) {
        customEvent = document.createEventObject();
        customEvent.eventType = event;
      } else {
        customEvent.eventName = event;
      }
      return customEvent;
    };

    Util.prototype.emitEvent = function(elem, event) {
      if (elem.dispatchEvent != null) {
        return elem.dispatchEvent(event);
      } else if (event in (elem != null)) {
        return elem[event]();
      } else if (("on" + event) in (elem != null)) {
        return elem["on" + event]();
      }
    };

    Util.prototype.addEvent = function(elem, event, fn) {
      if (elem.addEventListener != null) {
        return elem.addEventListener(event, fn, false);
      } else if (elem.attachEvent != null) {
        return elem.attachEvent("on" + event, fn);
      } else {
        return elem[event] = fn;
      }
    };

    Util.prototype.removeEvent = function(elem, event, fn) {
      if (elem.removeEventListener != null) {
        return elem.removeEventListener(event, fn, false);
      } else if (elem.detachEvent != null) {
        return elem.detachEvent("on" + event, fn);
      } else {
        return delete elem[event];
      }
    };

    Util.prototype.innerHeight = function() {
      if ('innerHeight' in window) {
        return window.innerHeight;
      } else {
        return document.documentElement.clientHeight;
      }
    };

    return Util;

  })();

  WeakMap = this.WeakMap || this.MozWeakMap || (WeakMap = (function() {
    function WeakMap() {
      this.keys = [];
      this.values = [];
    }

    WeakMap.prototype.get = function(key) {
      var i, item, j, len, ref;
      ref = this.keys;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        item = ref[i];
        if (item === key) {
          return this.values[i];
        }
      }
    };

    WeakMap.prototype.set = function(key, value) {
      var i, item, j, len, ref;
      ref = this.keys;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        item = ref[i];
        if (item === key) {
          this.values[i] = value;
          return;
        }
      }
      this.keys.push(key);
      return this.values.push(value);
    };

    return WeakMap;

  })());

  MutationObserver = this.MutationObserver || this.WebkitMutationObserver || this.MozMutationObserver || (MutationObserver = (function() {
    function MutationObserver() {
      if (typeof console !== "undefined" && console !== null) {
        console.warn('MutationObserver is not supported by your browser.');
      }
      if (typeof console !== "undefined" && console !== null) {
        console.warn('WOW.js cannot detect dom mutations, please call .sync() after loading new content.');
      }
    }

    MutationObserver.notSupported = true;

    MutationObserver.prototype.observe = function() {};

    return MutationObserver;

  })());

  getComputedStyle = this.getComputedStyle || function(el, pseudo) {
    this.getPropertyValue = function(prop) {
      var ref;
      if (prop === 'float') {
        prop = 'styleFloat';
      }
      if (getComputedStyleRX.test(prop)) {
        prop.replace(getComputedStyleRX, function(_, _char) {
          return _char.toUpperCase();
        });
      }
      return ((ref = el.currentStyle) != null ? ref[prop] : void 0) || null;
    };
    return this;
  };

  getComputedStyleRX = /(\-([a-z]){1})/g;

  this.WOW = (function() {
    WOW.prototype.defaults = {
      boxClass: 'wow',
      animateClass: 'animated',
      offset: 0,
      mobile: true,
      live: true,
      callback: null
    };

    function WOW(options) {
      if (options == null) {
        options = {};
      }
      this.scrollCallback = bind(this.scrollCallback, this);
      this.scrollHandler = bind(this.scrollHandler, this);
      this.resetAnimation = bind(this.resetAnimation, this);
      this.start = bind(this.start, this);
      this.scrolled = true;
      this.config = this.util().extend(options, this.defaults);
      this.animationNameCache = new WeakMap();
      this.wowEvent = this.util().createEvent(this.config.boxClass);
    }

    WOW.prototype.init = function() {
      var ref;
      this.element = window.document.documentElement;
      if ((ref = document.readyState) === "interactive" || ref === "complete") {
        this.start();
      } else {
        this.util().addEvent(document, 'DOMContentLoaded', this.start);
      }
      return this.finished = [];
    };

    WOW.prototype.start = function() {
      var box, j, len, ref;
      this.stopped = false;
      this.boxes = (function() {
        var j, len, ref, results;
        ref = this.element.querySelectorAll("." + this.config.boxClass);
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          box = ref[j];
          results.push(box);
        }
        return results;
      }).call(this);
      this.all = (function() {
        var j, len, ref, results;
        ref = this.boxes;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          box = ref[j];
          results.push(box);
        }
        return results;
      }).call(this);
      if (this.boxes.length) {
        if (this.disabled()) {
          this.resetStyle();
        } else {
          ref = this.boxes;
          for (j = 0, len = ref.length; j < len; j++) {
            box = ref[j];
            this.applyStyle(box, true);
          }
        }
      }
      if (!this.disabled()) {
        this.util().addEvent(window, 'scroll', this.scrollHandler);
        this.util().addEvent(window, 'resize', this.scrollHandler);
        this.interval = setInterval(this.scrollCallback, 50);
      }
      if (this.config.live) {
        return new MutationObserver((function(_this) {
          return function(records) {
            var k, len1, node, record, results;
            results = [];
            for (k = 0, len1 = records.length; k < len1; k++) {
              record = records[k];
              results.push((function() {
                var l, len2, ref1, results1;
                ref1 = record.addedNodes || [];
                results1 = [];
                for (l = 0, len2 = ref1.length; l < len2; l++) {
                  node = ref1[l];
                  results1.push(this.doSync(node));
                }
                return results1;
              }).call(_this));
            }
            return results;
          };
        })(this)).observe(document.body, {
          childList: true,
          subtree: true
        });
      }
    };

    WOW.prototype.stop = function() {
      this.stopped = true;
      this.util().removeEvent(window, 'scroll', this.scrollHandler);
      this.util().removeEvent(window, 'resize', this.scrollHandler);
      if (this.interval != null) {
        return clearInterval(this.interval);
      }
    };

    WOW.prototype.sync = function(element) {
      if (MutationObserver.notSupported) {
        return this.doSync(this.element);
      }
    };

    WOW.prototype.doSync = function(element) {
      var box, j, len, ref, results;
      if (element == null) {
        element = this.element;
      }
      if (element.nodeType !== 1) {
        return;
      }
      element = element.parentNode || element;
      ref = element.querySelectorAll("." + this.config.boxClass);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        box = ref[j];
        if (indexOf.call(this.all, box) < 0) {
          this.boxes.push(box);
          this.all.push(box);
          if (this.stopped || this.disabled()) {
            this.resetStyle();
          } else {
            this.applyStyle(box, true);
          }
          results.push(this.scrolled = true);
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    WOW.prototype.show = function(box) {
      this.applyStyle(box);
      box.className = box.className + " " + this.config.animateClass;
      if (this.config.callback != null) {
        this.config.callback(box);
      }
      this.util().emitEvent(box, this.wowEvent);
      this.util().addEvent(box, 'animationend', this.resetAnimation);
      this.util().addEvent(box, 'oanimationend', this.resetAnimation);
      this.util().addEvent(box, 'webkitAnimationEnd', this.resetAnimation);
      this.util().addEvent(box, 'MSAnimationEnd', this.resetAnimation);
      return box;
    };

    WOW.prototype.applyStyle = function(box, hidden) {
      var delay, duration, iteration;
      duration = box.getAttribute('data-wow-duration');
      delay = box.getAttribute('data-wow-delay');
      iteration = box.getAttribute('data-wow-iteration');
      return this.animate((function(_this) {
        return function() {
          return _this.customStyle(box, hidden, duration, delay, iteration);
        };
      })(this));
    };

    WOW.prototype.animate = (function() {
      if ('requestAnimationFrame' in window) {
        return function(callback) {
          return window.requestAnimationFrame(callback);
        };
      } else {
        return function(callback) {
          return callback();
        };
      }
    })();

    WOW.prototype.resetStyle = function() {
      var box, j, len, ref, results;
      ref = this.boxes;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        box = ref[j];
        results.push(box.style.visibility = 'visible');
      }
      return results;
    };

    WOW.prototype.resetAnimation = function(event) {
      var target;
      if (event.type.toLowerCase().indexOf('animationend') >= 0) {
        target = event.target || event.srcElement;
        return target.className = target.className.replace(this.config.animateClass, '').trim();
      }
    };

    WOW.prototype.customStyle = function(box, hidden, duration, delay, iteration) {
      if (hidden) {
        this.cacheAnimationName(box);
      }
      box.style.visibility = hidden ? 'hidden' : 'visible';
      if (duration) {
        this.vendorSet(box.style, {
          animationDuration: duration
        });
      }
      if (delay) {
        this.vendorSet(box.style, {
          animationDelay: delay
        });
      }
      if (iteration) {
        this.vendorSet(box.style, {
          animationIterationCount: iteration
        });
      }
      this.vendorSet(box.style, {
        animationName: hidden ? 'none' : this.cachedAnimationName(box)
      });
      return box;
    };

    WOW.prototype.vendors = ["moz", "webkit"];

    WOW.prototype.vendorSet = function(elem, properties) {
      var name, results, value, vendor;
      results = [];
      for (name in properties) {
        value = properties[name];
        elem["" + name] = value;
        results.push((function() {
          var j, len, ref, results1;
          ref = this.vendors;
          results1 = [];
          for (j = 0, len = ref.length; j < len; j++) {
            vendor = ref[j];
            results1.push(elem["" + vendor + (name.charAt(0).toUpperCase()) + (name.substr(1))] = value);
          }
          return results1;
        }).call(this));
      }
      return results;
    };

    WOW.prototype.vendorCSS = function(elem, property) {
      var j, len, ref, result, style, vendor;
      style = getComputedStyle(elem);
      result = style.getPropertyCSSValue(property);
      ref = this.vendors;
      for (j = 0, len = ref.length; j < len; j++) {
        vendor = ref[j];
        result = result || style.getPropertyCSSValue("-" + vendor + "-" + property);
      }
      return result;
    };

    WOW.prototype.animationName = function(box) {
      var animationName;
      try {
        animationName = this.vendorCSS(box, 'animation-name').cssText;
      } catch (_error) {
        animationName = getComputedStyle(box).getPropertyValue('animation-name');
      }
      if (animationName === 'none') {
        return '';
      } else {
        return animationName;
      }
    };

    WOW.prototype.cacheAnimationName = function(box) {
      return this.animationNameCache.set(box, this.animationName(box));
    };

    WOW.prototype.cachedAnimationName = function(box) {
      return this.animationNameCache.get(box);
    };

    WOW.prototype.scrollHandler = function() {
      return this.scrolled = true;
    };

    WOW.prototype.scrollCallback = function() {
      var box;
      if (this.scrolled) {
        this.scrolled = false;
        this.boxes = (function() {
          var j, len, ref, results;
          ref = this.boxes;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            box = ref[j];
            if (!(box)) {
              continue;
            }
            if (this.isVisible(box)) {
              this.show(box);
              continue;
            }
            results.push(box);
          }
          return results;
        }).call(this);
        if (!(this.boxes.length || this.config.live)) {
          return this.stop();
        }
      }
    };

    WOW.prototype.offsetTop = function(element) {
      var top;
      while (element.offsetTop === void 0) {
        element = element.parentNode;
      }
      top = element.offsetTop;
      while (element = element.offsetParent) {
        top += element.offsetTop;
      }
      return top;
    };

    WOW.prototype.isVisible = function(box) {
      var bottom, offset, top, viewBottom, viewTop;
      offset = box.getAttribute('data-wow-offset') || this.config.offset;
      viewTop = window.pageYOffset;
      viewBottom = viewTop + Math.min(this.element.clientHeight, this.util().innerHeight()) - offset;
      top = this.offsetTop(box);
      bottom = top + box.clientHeight;
      return top <= viewBottom && bottom >= viewTop;
    };

    WOW.prototype.util = function() {
      return this._util != null ? this._util : this._util = new Util();
    };

    WOW.prototype.disabled = function() {
      return !this.config.mobile && this.util().isMobile(navigator.userAgent);
    };

    return WOW;

  })();

}).call(this);
/*! Magnific Popup - v1.1.0 - 2016-02-20
* http://dimsemenov.com/plugins/magnific-popup/
* Copyright (c) 2016 Dmitry Semenov; */
;(function (factory) { 
if (typeof define === 'function' && define.amd) { 
 // AMD. Register as an anonymous module. 
 define(['jquery'], factory); 
 } else if (typeof exports === 'object') { 
 // Node/CommonJS 
 factory(require('jquery')); 
 } else { 
 // Browser globals 
 factory(window.jQuery || window.Zepto); 
 } 
 }(function($) { 

/*>>core*/
/**
 * 
 * Magnific Popup Core JS file
 * 
 */


/**
 * Private static constants
 */
var CLOSE_EVENT = 'Close',
	BEFORE_CLOSE_EVENT = 'BeforeClose',
	AFTER_CLOSE_EVENT = 'AfterClose',
	BEFORE_APPEND_EVENT = 'BeforeAppend',
	MARKUP_PARSE_EVENT = 'MarkupParse',
	OPEN_EVENT = 'Open',
	CHANGE_EVENT = 'Change',
	NS = 'mfp',
	EVENT_NS = '.' + NS,
	READY_CLASS = 'mfp-ready',
	REMOVING_CLASS = 'mfp-removing',
	PREVENT_CLOSE_CLASS = 'mfp-prevent-close';


/**
 * Private vars 
 */
/*jshint -W079 */
var mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'
	MagnificPopup = function(){},
	_isJQ = !!(window.jQuery),
	_prevStatus,
	_window = $(window),
	_document,
	_prevContentType,
	_wrapClasses,
	_currPopupType;


/**
 * Private functions
 */
var _mfpOn = function(name, f) {
		mfp.ev.on(NS + name + EVENT_NS, f);
	},
	_getEl = function(className, appendTo, html, raw) {
		var el = document.createElement('div');
		el.className = 'mfp-'+className;
		if(html) {
			el.innerHTML = html;
		}
		if(!raw) {
			el = $(el);
			if(appendTo) {
				el.appendTo(appendTo);
			}
		} else if(appendTo) {
			appendTo.appendChild(el);
		}
		return el;
	},
	_mfpTrigger = function(e, data) {
		mfp.ev.triggerHandler(NS + e, data);

		if(mfp.st.callbacks) {
			// converts "mfpEventName" to "eventName" callback and triggers it if it's present
			e = e.charAt(0).toLowerCase() + e.slice(1);
			if(mfp.st.callbacks[e]) {
				mfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);
			}
		}
	},
	_getCloseBtn = function(type) {
		if(type !== _currPopupType || !mfp.currTemplate.closeBtn) {
			mfp.currTemplate.closeBtn = $( mfp.st.closeMarkup.replace('%title%', mfp.st.tClose ) );
			_currPopupType = type;
		}
		return mfp.currTemplate.closeBtn;
	},
	// Initialize Magnific Popup only when called at least once
	_checkInstance = function() {
		if(!$.magnificPopup.instance) {
			/*jshint -W020 */
			mfp = new MagnificPopup();
			mfp.init();
			$.magnificPopup.instance = mfp;
		}
	},
	// CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr
	supportsTransitions = function() {
		var s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist
			v = ['ms','O','Moz','Webkit']; // 'v' for vendor

		if( s['transition'] !== undefined ) {
			return true; 
		}
			
		while( v.length ) {
			if( v.pop() + 'Transition' in s ) {
				return true;
			}
		}
				
		return false;
	};



/**
 * Public functions
 */
MagnificPopup.prototype = {

	constructor: MagnificPopup,

	/**
	 * Initializes Magnific Popup plugin. 
	 * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed
	 */
	init: function() {
		var appVersion = navigator.appVersion;
		mfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener;
		mfp.isAndroid = (/android/gi).test(appVersion);
		mfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);
		mfp.supportsTransition = supportsTransitions();

		// We disable fixed positioned lightbox on devices that don't handle it nicely.
		// If you know a better way of detecting this - let me know.
		mfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent) );
		_document = $(document);

		mfp.popupsCache = {};
	},

	/**
	 * Opens popup
	 * @param  data [description]
	 */
	open: function(data) {

		var i;

		if(data.isObj === false) { 
			// convert jQuery collection to array to avoid conflicts later
			mfp.items = data.items.toArray();

			mfp.index = 0;
			var items = data.items,
				item;
			for(i = 0; i < items.length; i++) {
				item = items[i];
				if(item.parsed) {
					item = item.el[0];
				}
				if(item === data.el[0]) {
					mfp.index = i;
					break;
				}
			}
		} else {
			mfp.items = $.isArray(data.items) ? data.items : [data.items];
			mfp.index = data.index || 0;
		}

		// if popup is already opened - we just update the content
		if(mfp.isOpen) {
			mfp.updateItemHTML();
			return;
		}
		
		mfp.types = []; 
		_wrapClasses = '';
		if(data.mainEl && data.mainEl.length) {
			mfp.ev = data.mainEl.eq(0);
		} else {
			mfp.ev = _document;
		}

		if(data.key) {
			if(!mfp.popupsCache[data.key]) {
				mfp.popupsCache[data.key] = {};
			}
			mfp.currTemplate = mfp.popupsCache[data.key];
		} else {
			mfp.currTemplate = {};
		}



		mfp.st = $.extend(true, {}, $.magnificPopup.defaults, data ); 
		mfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;

		if(mfp.st.modal) {
			mfp.st.closeOnContentClick = false;
			mfp.st.closeOnBgClick = false;
			mfp.st.showCloseBtn = false;
			mfp.st.enableEscapeKey = false;
		}
		

		// Building markup
		// main containers are created only once
		if(!mfp.bgOverlay) {

			// Dark overlay
			mfp.bgOverlay = _getEl('bg').on('click'+EVENT_NS, function() {
				mfp.close();
			});

			mfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click'+EVENT_NS, function(e) {
				if(mfp._checkIfClose(e.target)) {
					mfp.close();
				}
			});

			mfp.container = _getEl('container', mfp.wrap);
		}

		mfp.contentContainer = _getEl('content');
		if(mfp.st.preloader) {
			mfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);
		}


		// Initializing modules
		var modules = $.magnificPopup.modules;
		for(i = 0; i < modules.length; i++) {
			var n = modules[i];
			n = n.charAt(0).toUpperCase() + n.slice(1);
			mfp['init'+n].call(mfp);
		}
		_mfpTrigger('BeforeOpen');


		if(mfp.st.showCloseBtn) {
			// Close button
			if(!mfp.st.closeBtnInside) {
				mfp.wrap.append( _getCloseBtn() );
			} else {
				_mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {
					values.close_replaceWith = _getCloseBtn(item.type);
				});
				_wrapClasses += ' mfp-close-btn-in';
			}
		}

		if(mfp.st.alignTop) {
			_wrapClasses += ' mfp-align-top';
		}

	

		if(mfp.fixedContentPos) {
			mfp.wrap.css({
				overflow: mfp.st.overflowY,
				overflowX: 'hidden',
				overflowY: mfp.st.overflowY
			});
		} else {
			mfp.wrap.css({ 
				top: _window.scrollTop(),
				position: 'absolute'
			});
		}
		if( mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos) ) {
			mfp.bgOverlay.css({
				height: _document.height(),
				position: 'absolute'
			});
		}

		

		if(mfp.st.enableEscapeKey) {
			// Close on ESC key
			_document.on('keyup' + EVENT_NS, function(e) {
				if(e.keyCode === 27) {
					mfp.close();
				}
			});
		}

		_window.on('resize' + EVENT_NS, function() {
			mfp.updateSize();
		});


		if(!mfp.st.closeOnContentClick) {
			_wrapClasses += ' mfp-auto-cursor';
		}
		
		if(_wrapClasses)
			mfp.wrap.addClass(_wrapClasses);


		// this triggers recalculation of layout, so we get it once to not to trigger twice
		var windowHeight = mfp.wH = _window.height();

		
		var windowStyles = {};

		if( mfp.fixedContentPos ) {
            if(mfp._hasScrollBar(windowHeight)){
                var s = mfp._getScrollbarSize();
                if(s) {
                    windowStyles.marginRight = s;
                }
            }
        }

		if(mfp.fixedContentPos) {
			if(!mfp.isIE7) {
				windowStyles.overflow = 'hidden';
			} else {
				// ie7 double-scroll bug
				$('body, html').css('overflow', 'hidden');
			}
		}

		
		
		var classesToadd = mfp.st.mainClass;
		if(mfp.isIE7) {
			classesToadd += ' mfp-ie7';
		}
		if(classesToadd) {
			mfp._addClassToMFP( classesToadd );
		}

		// add content
		mfp.updateItemHTML();

		_mfpTrigger('BuildControls');

		// remove scrollbar, add margin e.t.c
		$('html').css(windowStyles);
		
		// add everything to DOM
		mfp.bgOverlay.add(mfp.wrap).prependTo( mfp.st.prependTo || $(document.body) );

		// Save last focused element
		mfp._lastFocusedEl = document.activeElement;
		
		// Wait for next cycle to allow CSS transition
		setTimeout(function() {
			
			if(mfp.content) {
				mfp._addClassToMFP(READY_CLASS);
				mfp._setFocus();
			} else {
				// if content is not defined (not loaded e.t.c) we add class only for BG
				mfp.bgOverlay.addClass(READY_CLASS);
			}
			
			// Trap the focus in popup
			_document.on('focusin' + EVENT_NS, mfp._onFocusIn);

		}, 16);

		mfp.isOpen = true;
		mfp.updateSize(windowHeight);
		_mfpTrigger(OPEN_EVENT);

		return data;
	},

	/**
	 * Closes the popup
	 */
	close: function() {
		if(!mfp.isOpen) return;
		_mfpTrigger(BEFORE_CLOSE_EVENT);

		mfp.isOpen = false;
		// for CSS3 animation
		if(mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition )  {
			mfp._addClassToMFP(REMOVING_CLASS);
			setTimeout(function() {
				mfp._close();
			}, mfp.st.removalDelay);
		} else {
			mfp._close();
		}
	},

	/**
	 * Helper for close() function
	 */
	_close: function() {
		_mfpTrigger(CLOSE_EVENT);

		var classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';

		mfp.bgOverlay.detach();
		mfp.wrap.detach();
		mfp.container.empty();

		if(mfp.st.mainClass) {
			classesToRemove += mfp.st.mainClass + ' ';
		}

		mfp._removeClassFromMFP(classesToRemove);

		if(mfp.fixedContentPos) {
			var windowStyles = {marginRight: ''};
			if(mfp.isIE7) {
				$('body, html').css('overflow', '');
			} else {
				windowStyles.overflow = '';
			}
			$('html').css(windowStyles);
		}
		
		_document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);
		mfp.ev.off(EVENT_NS);

		// clean up DOM elements that aren't removed
		mfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');
		mfp.bgOverlay.attr('class', 'mfp-bg');
		mfp.container.attr('class', 'mfp-container');

		// remove close button from target element
		if(mfp.st.showCloseBtn &&
		(!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {
			if(mfp.currTemplate.closeBtn)
				mfp.currTemplate.closeBtn.detach();
		}


		if(mfp.st.autoFocusLast && mfp._lastFocusedEl) {
			$(mfp._lastFocusedEl).focus(); // put tab focus back
		}
		mfp.currItem = null;	
		mfp.content = null;
		mfp.currTemplate = null;
		mfp.prevHeight = 0;

		_mfpTrigger(AFTER_CLOSE_EVENT);
	},
	
	updateSize: function(winHeight) {

		if(mfp.isIOS) {
			// fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2
			var zoomLevel = document.documentElement.clientWidth / window.innerWidth;
			var height = window.innerHeight * zoomLevel;
			mfp.wrap.css('height', height);
			mfp.wH = height;
		} else {
			mfp.wH = winHeight || _window.height();
		}
		// Fixes #84: popup incorrectly positioned with position:relative on body
		if(!mfp.fixedContentPos) {
			mfp.wrap.css('height', mfp.wH);
		}

		_mfpTrigger('Resize');

	},

	/**
	 * Set content of popup based on current index
	 */
	updateItemHTML: function() {
		var item = mfp.items[mfp.index];

		// Detach and perform modifications
		mfp.contentContainer.detach();

		if(mfp.content)
			mfp.content.detach();

		if(!item.parsed) {
			item = mfp.parseEl( mfp.index );
		}

		var type = item.type;

		_mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);
		// BeforeChange event works like so:
		// _mfpOn('BeforeChange', function(e, prevType, newType) { });

		mfp.currItem = item;

		if(!mfp.currTemplate[type]) {
			var markup = mfp.st[type] ? mfp.st[type].markup : false;

			// allows to modify markup
			_mfpTrigger('FirstMarkupParse', markup);

			if(markup) {
				mfp.currTemplate[type] = $(markup);
			} else {
				// if there is no markup found we just define that template is parsed
				mfp.currTemplate[type] = true;
			}
		}

		if(_prevContentType && _prevContentType !== item.type) {
			mfp.container.removeClass('mfp-'+_prevContentType+'-holder');
		}

		var newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);
		mfp.appendContent(newContent, type);

		item.preloaded = true;

		_mfpTrigger(CHANGE_EVENT, item);
		_prevContentType = item.type;

		// Append container back after its content changed
		mfp.container.prepend(mfp.contentContainer);

		_mfpTrigger('AfterChange');
	},


	/**
	 * Set HTML content of popup
	 */
	appendContent: function(newContent, type) {
		mfp.content = newContent;

		if(newContent) {
			if(mfp.st.showCloseBtn && mfp.st.closeBtnInside &&
				mfp.currTemplate[type] === true) {
				// if there is no markup, we just append close button element inside
				if(!mfp.content.find('.mfp-close').length) {
					mfp.content.append(_getCloseBtn());
				}
			} else {
				mfp.content = newContent;
			}
		} else {
			mfp.content = '';
		}

		_mfpTrigger(BEFORE_APPEND_EVENT);
		mfp.container.addClass('mfp-'+type+'-holder');

		mfp.contentContainer.append(mfp.content);
	},


	/**
	 * Creates Magnific Popup data object based on given data
	 * @param  {int} index Index of item to parse
	 */
	parseEl: function(index) {
		var item = mfp.items[index],
			type;

		if(item.tagName) {
			item = { el: $(item) };
		} else {
			type = item.type;
			item = { data: item, src: item.src };
		}

		if(item.el) {
			var types = mfp.types;

			// check for 'mfp-TYPE' class
			for(var i = 0; i < types.length; i++) {
				if( item.el.hasClass('mfp-'+types[i]) ) {
					type = types[i];
					break;
				}
			}

			item.src = item.el.attr('data-mfp-src');
			if(!item.src) {
				item.src = item.el.attr('href');
			}
		}

		item.type = type || mfp.st.type || 'inline';
		item.index = index;
		item.parsed = true;
		mfp.items[index] = item;
		_mfpTrigger('ElementParse', item);

		return mfp.items[index];
	},


	/**
	 * Initializes single popup or a group of popups
	 */
	addGroup: function(el, options) {
		var eHandler = function(e) {
			e.mfpEl = this;
			mfp._openClick(e, el, options);
		};

		if(!options) {
			options = {};
		}

		var eName = 'click.magnificPopup';
		options.mainEl = el;

		if(options.items) {
			options.isObj = true;
			el.off(eName).on(eName, eHandler);
		} else {
			options.isObj = false;
			if(options.delegate) {
				el.off(eName).on(eName, options.delegate , eHandler);
			} else {
				options.items = el;
				el.off(eName).on(eName, eHandler);
			}
		}
	},
	_openClick: function(e, el, options) {
		var midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;


		if(!midClick && ( e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey ) ) {
			return;
		}

		var disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;

		if(disableOn) {
			if($.isFunction(disableOn)) {
				if( !disableOn.call(mfp) ) {
					return true;
				}
			} else { // else it's number
				if( _window.width() < disableOn ) {
					return true;
				}
			}
		}

		if(e.type) {
			e.preventDefault();

			// This will prevent popup from closing if element is inside and popup is already opened
			if(mfp.isOpen) {
				e.stopPropagation();
			}
		}

		options.el = $(e.mfpEl);
		if(options.delegate) {
			options.items = el.find(options.delegate);
		}
		mfp.open(options);
	},


	/**
	 * Updates text on preloader
	 */
	updateStatus: function(status, text) {

		if(mfp.preloader) {
			if(_prevStatus !== status) {
				mfp.container.removeClass('mfp-s-'+_prevStatus);
			}

			if(!text && status === 'loading') {
				text = mfp.st.tLoading;
			}

			var data = {
				status: status,
				text: text
			};
			// allows to modify status
			_mfpTrigger('UpdateStatus', data);

			status = data.status;
			text = data.text;

			mfp.preloader.html(text);

			mfp.preloader.find('a').on('click', function(e) {
				e.stopImmediatePropagation();
			});

			mfp.container.addClass('mfp-s-'+status);
			_prevStatus = status;
		}
	},


	/*
		"Private" helpers that aren't private at all
	 */
	// Check to close popup or not
	// "target" is an element that was clicked
	_checkIfClose: function(target) {

		if($(target).hasClass(PREVENT_CLOSE_CLASS)) {
			return;
		}

		var closeOnContent = mfp.st.closeOnContentClick;
		var closeOnBg = mfp.st.closeOnBgClick;

		if(closeOnContent && closeOnBg) {
			return true;
		} else {

			// We close the popup if click is on close button or on preloader. Or if there is no content.
			if(!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0]) ) {
				return true;
			}

			// if click is outside the content
			if(  (target !== mfp.content[0] && !$.contains(mfp.content[0], target))  ) {
				if(closeOnBg) {
					// last check, if the clicked element is in DOM, (in case it's removed onclick)
					if( $.contains(document, target) ) {
						return true;
					}
				}
			} else if(closeOnContent) {
				return true;
			}

		}
		return false;
	},
	_addClassToMFP: function(cName) {
		mfp.bgOverlay.addClass(cName);
		mfp.wrap.addClass(cName);
	},
	_removeClassFromMFP: function(cName) {
		this.bgOverlay.removeClass(cName);
		mfp.wrap.removeClass(cName);
	},
	_hasScrollBar: function(winHeight) {
		return (  (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()) );
	},
	_setFocus: function() {
		(mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();
	},
	_onFocusIn: function(e) {
		if( e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target) ) {
			mfp._setFocus();
			return false;
		}
	},
	_parseMarkup: function(template, values, item) {
		var arr;
		if(item.data) {
			values = $.extend(item.data, values);
		}
		_mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item] );

		$.each(values, function(key, value) {
			if(value === undefined || value === false) {
				return true;
			}
			arr = key.split('_');
			if(arr.length > 1) {
				var el = template.find(EVENT_NS + '-'+arr[0]);

				if(el.length > 0) {
					var attr = arr[1];
					if(attr === 'replaceWith') {
						if(el[0] !== value[0]) {
							el.replaceWith(value);
						}
					} else if(attr === 'img') {
						if(el.is('img')) {
							el.attr('src', value);
						} else {
							el.replaceWith( $('<img>').attr('src', value).attr('class', el.attr('class')) );
						}
					} else {
						el.attr(arr[1], value);
					}
				}

			} else {
				template.find(EVENT_NS + '-'+key).html(value);
			}
		});
	},

	_getScrollbarSize: function() {
		// thx David
		if(mfp.scrollbarSize === undefined) {
			var scrollDiv = document.createElement("div");
			scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';
			document.body.appendChild(scrollDiv);
			mfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
			document.body.removeChild(scrollDiv);
		}
		return mfp.scrollbarSize;
	}

}; /* MagnificPopup core prototype end */




/**
 * Public static functions
 */
$.magnificPopup = {
	instance: null,
	proto: MagnificPopup.prototype,
	modules: [],

	open: function(options, index) {
		_checkInstance();

		if(!options) {
			options = {};
		} else {
			options = $.extend(true, {}, options);
		}

		options.isObj = true;
		options.index = index || 0;
		return this.instance.open(options);
	},

	close: function() {
		return $.magnificPopup.instance && $.magnificPopup.instance.close();
	},

	registerModule: function(name, module) {
		if(module.options) {
			$.magnificPopup.defaults[name] = module.options;
		}
		$.extend(this.proto, module.proto);
		this.modules.push(name);
	},

	defaults: {

		// Info about options is in docs:
		// http://dimsemenov.com/plugins/magnific-popup/documentation.html#options

		disableOn: 0,

		key: null,

		midClick: false,

		mainClass: '',

		preloader: true,

		focus: '', // CSS selector of input to focus after popup is opened

		closeOnContentClick: false,

		closeOnBgClick: true,

		closeBtnInside: true,

		showCloseBtn: true,

		enableEscapeKey: true,

		modal: false,

		alignTop: false,

		removalDelay: 0,

		prependTo: null,

		fixedContentPos: 'auto',

		fixedBgPos: 'auto',

		overflowY: 'auto',

		closeMarkup: '<button title="%title%" type="button" class="mfp-close">&#215;</button>',

		tClose: 'Close (Esc)',

		tLoading: 'Loading...',

		autoFocusLast: true

	}
};



$.fn.magnificPopup = function(options) {
	_checkInstance();

	var jqEl = $(this);

	// We call some API method of first param is a string
	if (typeof options === "string" ) {

		if(options === 'open') {
			var items,
				itemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,
				index = parseInt(arguments[1], 10) || 0;

			if(itemOpts.items) {
				items = itemOpts.items[index];
			} else {
				items = jqEl;
				if(itemOpts.delegate) {
					items = items.find(itemOpts.delegate);
				}
				items = items.eq( index );
			}
			mfp._openClick({mfpEl:items}, jqEl, itemOpts);
		} else {
			if(mfp.isOpen)
				mfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));
		}

	} else {
		// clone options obj
		options = $.extend(true, {}, options);

		/*
		 * As Zepto doesn't support .data() method for objects
		 * and it works only in normal browsers
		 * we assign "options" object directly to the DOM element. FTW!
		 */
		if(_isJQ) {
			jqEl.data('magnificPopup', options);
		} else {
			jqEl[0].magnificPopup = options;
		}

		mfp.addGroup(jqEl, options);

	}
	return jqEl;
};

/*>>core*/

/*>>inline*/

var INLINE_NS = 'inline',
	_hiddenClass,
	_inlinePlaceholder,
	_lastInlineElement,
	_putInlineElementsBack = function() {
		if(_lastInlineElement) {
			_inlinePlaceholder.after( _lastInlineElement.addClass(_hiddenClass) ).detach();
			_lastInlineElement = null;
		}
	};

$.magnificPopup.registerModule(INLINE_NS, {
	options: {
		hiddenClass: 'hide', // will be appended with `mfp-` prefix
		markup: '',
		tNotFound: 'Content not found'
	},
	proto: {

		initInline: function() {
			mfp.types.push(INLINE_NS);

			_mfpOn(CLOSE_EVENT+'.'+INLINE_NS, function() {
				_putInlineElementsBack();
			});
		},

		getInline: function(item, template) {

			_putInlineElementsBack();

			if(item.src) {
				var inlineSt = mfp.st.inline,
					el = $(item.src);

				if(el.length) {

					// If target element has parent - we replace it with placeholder and put it back after popup is closed
					var parent = el[0].parentNode;
					if(parent && parent.tagName) {
						if(!_inlinePlaceholder) {
							_hiddenClass = inlineSt.hiddenClass;
							_inlinePlaceholder = _getEl(_hiddenClass);
							_hiddenClass = 'mfp-'+_hiddenClass;
						}
						// replace target inline element with placeholder
						_lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);
					}

					mfp.updateStatus('ready');
				} else {
					mfp.updateStatus('error', inlineSt.tNotFound);
					el = $('<div>');
				}

				item.inlineElement = el;
				return el;
			}

			mfp.updateStatus('ready');
			mfp._parseMarkup(template, {}, item);
			return template;
		}
	}
});

/*>>inline*/

/*>>ajax*/
var AJAX_NS = 'ajax',
	_ajaxCur,
	_removeAjaxCursor = function() {
		if(_ajaxCur) {
			$(document.body).removeClass(_ajaxCur);
		}
	},
	_destroyAjaxRequest = function() {
		_removeAjaxCursor();
		if(mfp.req) {
			mfp.req.abort();
		}
	};

$.magnificPopup.registerModule(AJAX_NS, {

	options: {
		settings: null,
		cursor: 'mfp-ajax-cur',
		tError: '<a href="%url%">The content</a> could not be loaded.'
	},

	proto: {
		initAjax: function() {
			mfp.types.push(AJAX_NS);
			_ajaxCur = mfp.st.ajax.cursor;

			_mfpOn(CLOSE_EVENT+'.'+AJAX_NS, _destroyAjaxRequest);
			_mfpOn('BeforeChange.' + AJAX_NS, _destroyAjaxRequest);
		},
		getAjax: function(item) {

			if(_ajaxCur) {
				$(document.body).addClass(_ajaxCur);
			}

			mfp.updateStatus('loading');

			var opts = $.extend({
				url: item.src,
				success: function(data, textStatus, jqXHR) {
					var temp = {
						data:data,
						xhr:jqXHR
					};

					_mfpTrigger('ParseAjax', temp);

					mfp.appendContent( $(temp.data), AJAX_NS );

					item.finished = true;

					_removeAjaxCursor();

					mfp._setFocus();

					setTimeout(function() {
						mfp.wrap.addClass(READY_CLASS);
					}, 16);

					mfp.updateStatus('ready');

					_mfpTrigger('AjaxContentAdded');
				},
				error: function() {
					_removeAjaxCursor();
					item.finished = item.loadError = true;
					mfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));
				}
			}, mfp.st.ajax.settings);

			mfp.req = $.ajax(opts);

			return '';
		}
	}
});

/*>>ajax*/

/*>>image*/
var _imgInterval,
	_getTitle = function(item) {
		if(item.data && item.data.title !== undefined)
			return item.data.title;

		var src = mfp.st.image.titleSrc;

		if(src) {
			if($.isFunction(src)) {
				return src.call(mfp, item);
			} else if(item.el) {
				return item.el.attr(src) || '';
			}
		}
		return '';
	};

$.magnificPopup.registerModule('image', {

	options: {
		markup: '<div class="mfp-figure">'+
					'<div class="mfp-close"></div>'+
					'<figure>'+
						'<div class="mfp-img"></div>'+
						'<figcaption>'+
							'<div class="mfp-bottom-bar">'+
								'<div class="mfp-title"></div>'+
								'<div class="mfp-counter"></div>'+
							'</div>'+
						'</figcaption>'+
					'</figure>'+
				'</div>',
		cursor: 'mfp-zoom-out-cur',
		titleSrc: 'title',
		verticalFit: true,
		tError: '<a href="%url%">The image</a> could not be loaded.'
	},

	proto: {
		initImage: function() {
			var imgSt = mfp.st.image,
				ns = '.image';

			mfp.types.push('image');

			_mfpOn(OPEN_EVENT+ns, function() {
				if(mfp.currItem.type === 'image' && imgSt.cursor) {
					$(document.body).addClass(imgSt.cursor);
				}
			});

			_mfpOn(CLOSE_EVENT+ns, function() {
				if(imgSt.cursor) {
					$(document.body).removeClass(imgSt.cursor);
				}
				_window.off('resize' + EVENT_NS);
			});

			_mfpOn('Resize'+ns, mfp.resizeImage);
			if(mfp.isLowIE) {
				_mfpOn('AfterChange', mfp.resizeImage);
			}
		},
		resizeImage: function() {
			var item = mfp.currItem;
			if(!item || !item.img) return;

			if(mfp.st.image.verticalFit) {
				var decr = 0;
				// fix box-sizing in ie7/8
				if(mfp.isLowIE) {
					decr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'),10);
				}
				item.img.css('max-height', mfp.wH-decr);
			}
		},
		_onImageHasSize: function(item) {
			if(item.img) {

				item.hasSize = true;

				if(_imgInterval) {
					clearInterval(_imgInterval);
				}

				item.isCheckingImgSize = false;

				_mfpTrigger('ImageHasSize', item);

				if(item.imgHidden) {
					if(mfp.content)
						mfp.content.removeClass('mfp-loading');

					item.imgHidden = false;
				}

			}
		},

		/**
		 * Function that loops until the image has size to display elements that rely on it asap
		 */
		findImageSize: function(item) {

			var counter = 0,
				img = item.img[0],
				mfpSetInterval = function(delay) {

					if(_imgInterval) {
						clearInterval(_imgInterval);
					}
					// decelerating interval that checks for size of an image
					_imgInterval = setInterval(function() {
						if(img.naturalWidth > 0) {
							mfp._onImageHasSize(item);
							return;
						}

						if(counter > 200) {
							clearInterval(_imgInterval);
						}

						counter++;
						if(counter === 3) {
							mfpSetInterval(10);
						} else if(counter === 40) {
							mfpSetInterval(50);
						} else if(counter === 100) {
							mfpSetInterval(500);
						}
					}, delay);
				};

			mfpSetInterval(1);
		},

		getImage: function(item, template) {

			var guard = 0,

				// image load complete handler
				onLoadComplete = function() {
					if(item) {
						if (item.img[0].complete) {
							item.img.off('.mfploader');

							if(item === mfp.currItem){
								mfp._onImageHasSize(item);

								mfp.updateStatus('ready');
							}

							item.hasSize = true;
							item.loaded = true;

							_mfpTrigger('ImageLoadComplete');

						}
						else {
							// if image complete check fails 200 times (20 sec), we assume that there was an error.
							guard++;
							if(guard < 200) {
								setTimeout(onLoadComplete,100);
							} else {
								onLoadError();
							}
						}
					}
				},

				// image error handler
				onLoadError = function() {
					if(item) {
						item.img.off('.mfploader');
						if(item === mfp.currItem){
							mfp._onImageHasSize(item);
							mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );
						}

						item.hasSize = true;
						item.loaded = true;
						item.loadError = true;
					}
				},
				imgSt = mfp.st.image;


			var el = template.find('.mfp-img');
			if(el.length) {
				var img = document.createElement('img');
				img.className = 'mfp-img';
				if(item.el && item.el.find('img').length) {
					img.alt = item.el.find('img').attr('alt');
				}
				item.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);
				img.src = item.src;

				// without clone() "error" event is not firing when IMG is replaced by new IMG
				// TODO: find a way to avoid such cloning
				if(el.is('img')) {
					item.img = item.img.clone();
				}

				img = item.img[0];
				if(img.naturalWidth > 0) {
					item.hasSize = true;
				} else if(!img.width) {
					item.hasSize = false;
				}
			}

			mfp._parseMarkup(template, {
				title: _getTitle(item),
				img_replaceWith: item.img
			}, item);

			mfp.resizeImage();

			if(item.hasSize) {
				if(_imgInterval) clearInterval(_imgInterval);

				if(item.loadError) {
					template.addClass('mfp-loading');
					mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );
				} else {
					template.removeClass('mfp-loading');
					mfp.updateStatus('ready');
				}
				return template;
			}

			mfp.updateStatus('loading');
			item.loading = true;

			if(!item.hasSize) {
				item.imgHidden = true;
				template.addClass('mfp-loading');
				mfp.findImageSize(item);
			}

			return template;
		}
	}
});

/*>>image*/

/*>>zoom*/
var hasMozTransform,
	getHasMozTransform = function() {
		if(hasMozTransform === undefined) {
			hasMozTransform = document.createElement('p').style.MozTransform !== undefined;
		}
		return hasMozTransform;
	};

$.magnificPopup.registerModule('zoom', {

	options: {
		enabled: false,
		easing: 'ease-in-out',
		duration: 300,
		opener: function(element) {
			return element.is('img') ? element : element.find('img');
		}
	},

	proto: {

		initZoom: function() {
			var zoomSt = mfp.st.zoom,
				ns = '.zoom',
				image;

			if(!zoomSt.enabled || !mfp.supportsTransition) {
				return;
			}

			var duration = zoomSt.duration,
				getElToAnimate = function(image) {
					var newImg = image.clone().removeAttr('style').removeAttr('class').addClass('mfp-animated-image'),
						transition = 'all '+(zoomSt.duration/1000)+'s ' + zoomSt.easing,
						cssObj = {
							position: 'fixed',
							zIndex: 9999,
							left: 0,
							top: 0,
							'-webkit-backface-visibility': 'hidden'
						},
						t = 'transition';

					cssObj['-webkit-'+t] = cssObj['-moz-'+t] = cssObj['-o-'+t] = cssObj[t] = transition;

					newImg.css(cssObj);
					return newImg;
				},
				showMainContent = function() {
					mfp.content.css('visibility', 'visible');
				},
				openTimeout,
				animatedImg;

			_mfpOn('BuildControls'+ns, function() {
				if(mfp._allowZoom()) {

					clearTimeout(openTimeout);
					mfp.content.css('visibility', 'hidden');

					// Basically, all code below does is clones existing image, puts in on top of the current one and animated it

					image = mfp._getItemToZoom();

					if(!image) {
						showMainContent();
						return;
					}

					animatedImg = getElToAnimate(image);

					animatedImg.css( mfp._getOffset() );

					mfp.wrap.append(animatedImg);

					openTimeout = setTimeout(function() {
						animatedImg.css( mfp._getOffset( true ) );
						openTimeout = setTimeout(function() {

							showMainContent();

							setTimeout(function() {
								animatedImg.remove();
								image = animatedImg = null;
								_mfpTrigger('ZoomAnimationEnded');
							}, 16); // avoid blink when switching images

						}, duration); // this timeout equals animation duration

					}, 16); // by adding this timeout we avoid short glitch at the beginning of animation


					// Lots of timeouts...
				}
			});
			_mfpOn(BEFORE_CLOSE_EVENT+ns, function() {
				if(mfp._allowZoom()) {

					clearTimeout(openTimeout);

					mfp.st.removalDelay = duration;

					if(!image) {
						image = mfp._getItemToZoom();
						if(!image) {
							return;
						}
						animatedImg = getElToAnimate(image);
					}

					animatedImg.css( mfp._getOffset(true) );
					mfp.wrap.append(animatedImg);
					mfp.content.css('visibility', 'hidden');

					setTimeout(function() {
						animatedImg.css( mfp._getOffset() );
					}, 16);
				}

			});

			_mfpOn(CLOSE_EVENT+ns, function() {
				if(mfp._allowZoom()) {
					showMainContent();
					if(animatedImg) {
						animatedImg.remove();
					}
					image = null;
				}
			});
		},

		_allowZoom: function() {
			return mfp.currItem.type === 'image';
		},

		_getItemToZoom: function() {
			if(mfp.currItem.hasSize) {
				return mfp.currItem.img;
			} else {
				return false;
			}
		},

		// Get element postion relative to viewport
		_getOffset: function(isLarge) {
			var el;
			if(isLarge) {
				el = mfp.currItem.img;
			} else {
				el = mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem);
			}

			var offset = el.offset();
			var paddingTop = parseInt(el.css('padding-top'),10);
			var paddingBottom = parseInt(el.css('padding-bottom'),10);
			offset.top -= ( $(window).scrollTop() - paddingTop );


			/*

			Animating left + top + width/height looks glitchy in Firefox, but perfect in Chrome. And vice-versa.

			 */
			var obj = {
				width: el.width(),
				// fix Zepto height+padding issue
				height: (_isJQ ? el.innerHeight() : el[0].offsetHeight) - paddingBottom - paddingTop
			};

			// I hate to do this, but there is no another option
			if( getHasMozTransform() ) {
				obj['-moz-transform'] = obj['transform'] = 'translate(' + offset.left + 'px,' + offset.top + 'px)';
			} else {
				obj.left = offset.left;
				obj.top = offset.top;
			}
			return obj;
		}

	}
});



/*>>zoom*/

/*>>iframe*/

var IFRAME_NS = 'iframe',
	_emptyPage = '//about:blank',

	_fixIframeBugs = function(isShowing) {
		if(mfp.currTemplate[IFRAME_NS]) {
			var el = mfp.currTemplate[IFRAME_NS].find('iframe');
			if(el.length) {
				// reset src after the popup is closed to avoid "video keeps playing after popup is closed" bug
				if(!isShowing) {
					el[0].src = _emptyPage;
				}

				// IE8 black screen bug fix
				if(mfp.isIE8) {
					el.css('display', isShowing ? 'block' : 'none');
				}
			}
		}
	};

$.magnificPopup.registerModule(IFRAME_NS, {

	options: {
		markup: '<div class="mfp-iframe-scaler">'+
					'<div class="mfp-close"></div>'+
					'<iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe>'+
				'</div>',

		srcAction: 'iframe_src',

		// we don't care and support only one default type of URL by default
		patterns: {
			youtube: {
				index: 'youtube.com',
				id: 'v=',
				src: '//www.youtube.com/embed/%id%?autoplay=1'
			},
			vimeo: {
				index: 'vimeo.com/',
				id: '/',
				src: '//player.vimeo.com/video/%id%?autoplay=1'
			},
			gmaps: {
				index: '//maps.google.',
				src: '%id%&output=embed'
			}
		}
	},

	proto: {
		initIframe: function() {
			mfp.types.push(IFRAME_NS);

			_mfpOn('BeforeChange', function(e, prevType, newType) {
				if(prevType !== newType) {
					if(prevType === IFRAME_NS) {
						_fixIframeBugs(); // iframe if removed
					} else if(newType === IFRAME_NS) {
						_fixIframeBugs(true); // iframe is showing
					}
				}// else {
					// iframe source is switched, don't do anything
				//}
			});

			_mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function() {
				_fixIframeBugs();
			});
		},

		getIframe: function(item, template) {
			var embedSrc = item.src;
			var iframeSt = mfp.st.iframe;

			$.each(iframeSt.patterns, function() {
				if(embedSrc.indexOf( this.index ) > -1) {
					if(this.id) {
						if(typeof this.id === 'string') {
							embedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id)+this.id.length, embedSrc.length);
						} else {
							embedSrc = this.id.call( this, embedSrc );
						}
					}
					embedSrc = this.src.replace('%id%', embedSrc );
					return false; // break;
				}
			});

			var dataObj = {};
			if(iframeSt.srcAction) {
				dataObj[iframeSt.srcAction] = embedSrc;
			}
			mfp._parseMarkup(template, dataObj, item);

			mfp.updateStatus('ready');

			return template;
		}
	}
});



/*>>iframe*/

/*>>gallery*/
/**
 * Get looped index depending on number of slides
 */
var _getLoopedId = function(index) {
		var numSlides = mfp.items.length;
		if(index > numSlides - 1) {
			return index - numSlides;
		} else  if(index < 0) {
			return numSlides + index;
		}
		return index;
	},
	_replaceCurrTotal = function(text, curr, total) {
		return text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);
	};

$.magnificPopup.registerModule('gallery', {

	options: {
		enabled: false,
		arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
		preload: [0,2],
		navigateByImgClick: true,
		arrows: true,

		tPrev: 'Previous (Left arrow key)',
		tNext: 'Next (Right arrow key)',
		tCounter: '%curr% of %total%'
	},

	proto: {
		initGallery: function() {

			var gSt = mfp.st.gallery,
				ns = '.mfp-gallery';

			mfp.direction = true; // true - next, false - prev

			if(!gSt || !gSt.enabled ) return false;

			_wrapClasses += ' mfp-gallery';

			_mfpOn(OPEN_EVENT+ns, function() {

				if(gSt.navigateByImgClick) {
					mfp.wrap.on('click'+ns, '.mfp-img', function() {
						if(mfp.items.length > 1) {
							mfp.next();
							return false;
						}
					});
				}

				_document.on('keydown'+ns, function(e) {
					if (e.keyCode === 37) {
						mfp.prev();
					} else if (e.keyCode === 39) {
						mfp.next();
					}
				});
			});

			_mfpOn('UpdateStatus'+ns, function(e, data) {
				if(data.text) {
					data.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);
				}
			});

			_mfpOn(MARKUP_PARSE_EVENT+ns, function(e, element, values, item) {
				var l = mfp.items.length;
				values.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';
			});

			_mfpOn('BuildControls' + ns, function() {
				if(mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {
					var markup = gSt.arrowMarkup,
						arrowLeft = mfp.arrowLeft = $( markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left') ).addClass(PREVENT_CLOSE_CLASS),
						arrowRight = mfp.arrowRight = $( markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right') ).addClass(PREVENT_CLOSE_CLASS);

					arrowLeft.click(function() {
						mfp.prev();
					});
					arrowRight.click(function() {
						mfp.next();
					});

					mfp.container.append(arrowLeft.add(arrowRight));
				}
			});

			_mfpOn(CHANGE_EVENT+ns, function() {
				if(mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);

				mfp._preloadTimeout = setTimeout(function() {
					mfp.preloadNearbyImages();
					mfp._preloadTimeout = null;
				}, 16);
			});


			_mfpOn(CLOSE_EVENT+ns, function() {
				_document.off(ns);
				mfp.wrap.off('click'+ns);
				mfp.arrowRight = mfp.arrowLeft = null;
			});

		},
		next: function() {
			mfp.direction = true;
			mfp.index = _getLoopedId(mfp.index + 1);
			mfp.updateItemHTML();
		},
		prev: function() {
			mfp.direction = false;
			mfp.index = _getLoopedId(mfp.index - 1);
			mfp.updateItemHTML();
		},
		goTo: function(newIndex) {
			mfp.direction = (newIndex >= mfp.index);
			mfp.index = newIndex;
			mfp.updateItemHTML();
		},
		preloadNearbyImages: function() {
			var p = mfp.st.gallery.preload,
				preloadBefore = Math.min(p[0], mfp.items.length),
				preloadAfter = Math.min(p[1], mfp.items.length),
				i;

			for(i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {
				mfp._preloadItem(mfp.index+i);
			}
			for(i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {
				mfp._preloadItem(mfp.index-i);
			}
		},
		_preloadItem: function(index) {
			index = _getLoopedId(index);

			if(mfp.items[index].preloaded) {
				return;
			}

			var item = mfp.items[index];
			if(!item.parsed) {
				item = mfp.parseEl( index );
			}

			_mfpTrigger('LazyLoad', item);

			if(item.type === 'image') {
				item.img = $('<img class="mfp-img" />').on('load.mfploader', function() {
					item.hasSize = true;
				}).on('error.mfploader', function() {
					item.hasSize = true;
					item.loadError = true;
					_mfpTrigger('LazyLoadError', item);
				}).attr('src', item.src);
			}


			item.preloaded = true;
		}
	}
});

/*>>gallery*/

/*>>retina*/

var RETINA_NS = 'retina';

$.magnificPopup.registerModule(RETINA_NS, {
	options: {
		replaceSrc: function(item) {
			return item.src.replace(/\.\w+$/, function(m) { return '@2x' + m; });
		},
		ratio: 1 // Function or number.  Set to 1 to disable.
	},
	proto: {
		initRetina: function() {
			if(window.devicePixelRatio > 1) {

				var st = mfp.st.retina,
					ratio = st.ratio;

				ratio = !isNaN(ratio) ? ratio : ratio();

				if(ratio > 1) {
					_mfpOn('ImageHasSize' + '.' + RETINA_NS, function(e, item) {
						item.img.css({
							'max-width': item.img[0].naturalWidth / ratio,
							'width': '100%'
						});
					});
					_mfpOn('ElementParse' + '.' + RETINA_NS, function(e, item) {
						item.src = st.replaceSrc(item, ratio);
					});
				}
			}

		}
	}
});

/*>>retina*/
 _checkInstance(); }));/*!
 * Isotope PACKAGED v3.0.2
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * http://isotope.metafizzy.co
 * Copyright 2016 Metafizzy
 */

/**
 * Bridget makes jQuery widgets
 * v2.0.1
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /* globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'jquery-bridget/jquery-bridget',[ 'jquery' ], function( jQuery ) {
      return factory( window, jQuery );
    });
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('jquery')
    );
  } else {
    // browser global
    window.jQueryBridget = factory(
      window,
      window.jQuery
    );
  }

}( window, function factory( window, jQuery ) {
'use strict';

// ----- utils ----- //

var arraySlice = Array.prototype.slice;

// helper function for logging errors
// $.error breaks jQuery chaining
var console = window.console;
var logError = typeof console == 'undefined' ? function() {} :
  function( message ) {
    console.error( message );
  };

// ----- jQueryBridget ----- //

function jQueryBridget( namespace, PluginClass, $ ) {
  $ = $ || jQuery || window.jQuery;
  if ( !$ ) {
    return;
  }

  // add option method -> $().plugin('option', {...})
  if ( !PluginClass.prototype.option ) {
    // option setter
    PluginClass.prototype.option = function( opts ) {
      // bail out if not an object
      if ( !$.isPlainObject( opts ) ){
        return;
      }
      this.options = $.extend( true, this.options, opts );
    };
  }

  // make jQuery plugin
  $.fn[ namespace ] = function( arg0 /*, arg1 */ ) {
    if ( typeof arg0 == 'string' ) {
      // method call $().plugin( 'methodName', { options } )
      // shift arguments by 1
      var args = arraySlice.call( arguments, 1 );
      return methodCall( this, arg0, args );
    }
    // just $().plugin({ options })
    plainCall( this, arg0 );
    return this;
  };

  // $().plugin('methodName')
  function methodCall( $elems, methodName, args ) {
    var returnValue;
    var pluginMethodStr = '$().' + namespace + '("' + methodName + '")';

    $elems.each( function( i, elem ) {
      // get instance
      var instance = $.data( elem, namespace );
      if ( !instance ) {
        logError( namespace + ' not initialized. Cannot call methods, i.e. ' +
          pluginMethodStr );
        return;
      }

      var method = instance[ methodName ];
      if ( !method || methodName.charAt(0) == '_' ) {
        logError( pluginMethodStr + ' is not a valid method' );
        return;
      }

      // apply method, get return value
      var value = method.apply( instance, args );
      // set return value if value is returned, use only first value
      returnValue = returnValue === undefined ? value : returnValue;
    });

    return returnValue !== undefined ? returnValue : $elems;
  }

  function plainCall( $elems, options ) {
    $elems.each( function( i, elem ) {
      var instance = $.data( elem, namespace );
      if ( instance ) {
        // set options & init
        instance.option( options );
        instance._init();
      } else {
        // initialize new instance
        instance = new PluginClass( elem, options );
        $.data( elem, namespace, instance );
      }
    });
  }

  updateJQuery( $ );

}

// ----- updateJQuery ----- //

// set $.bridget for v1 backwards compatibility
function updateJQuery( $ ) {
  if ( !$ || ( $ && $.bridget ) ) {
    return;
  }
  $.bridget = jQueryBridget;
}

updateJQuery( jQuery || window.jQuery );

// -----  ----- //

return jQueryBridget;

}));

/**
 * EvEmitter v1.0.3
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( typeof define == 'function' && define.amd ) {
    // AMD - RequireJS
    define( 'ev-emitter/ev-emitter',factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {



function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var i = 0;
  var listener = listeners[i];
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  while ( listener ) {
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
    // get next listener
    i += isOnce ? 0 : 1;
    listener = listeners[i];
  }

  return this;
};

return EvEmitter;

}));

/*!
 * getSize v2.0.2
 * measure size of elements
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */
/*global define: false, module: false, console: false */

( function( window, factory ) {
  'use strict';

  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'get-size/get-size',[],function() {
      return factory();
    });
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }

})( window, function factory() {
'use strict';

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  var num = parseFloat( value );
  // not a percent like '100%', and a number
  var isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

function noop() {}

var logError = typeof console == 'undefined' ? noop :
  function( message ) {
    console.error( message );
  };

// -------------------------- measurements -------------------------- //

var measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth'
];

var measurementsLength = measurements.length;

function getZeroSize() {
  var size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0
  };
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    size[ measurement ] = 0;
  }
  return size;
}

// -------------------------- getStyle -------------------------- //

/**
 * getStyle, get style of element, check for Firefox bug
 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getStyle( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    logError( 'Style returned ' + style +
      '. Are you running this code in a hidden iframe on Firefox? ' +
      'See http://bit.ly/getsizebug1' );
  }
  return style;
}

// -------------------------- setup -------------------------- //

var isSetup = false;

var isBoxSizeOuter;

/**
 * setup
 * check isBoxSizerOuter
 * do on first getSize() rather than on page load for Firefox bug
 */
function setup() {
  // setup once
  if ( isSetup ) {
    return;
  }
  isSetup = true;

  // -------------------------- box sizing -------------------------- //

  /**
   * WebKit measures the outer-width on style.width on border-box elems
   * IE & Firefox<29 measures the inner-width
   */
  var div = document.createElement('div');
  div.style.width = '200px';
  div.style.padding = '1px 2px 3px 4px';
  div.style.borderStyle = 'solid';
  div.style.borderWidth = '1px 2px 3px 4px';
  div.style.boxSizing = 'border-box';

  var body = document.body || document.documentElement;
  body.appendChild( div );
  var style = getStyle( div );

  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;
  body.removeChild( div );

}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  setup();

  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) {
    elem = document.querySelector( elem );
  }

  // do not proceed on non-objects
  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
    return;
  }

  var style = getStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) {
    return getZeroSize();
  }

  var size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    var value = style[ measurement ];
    var num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  }

  var paddingWidth = size.paddingLeft + size.paddingRight;
  var paddingHeight = size.paddingTop + size.paddingBottom;
  var marginWidth = size.marginLeft + size.marginRight;
  var marginHeight = size.marginTop + size.marginBottom;
  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

  // overwrite width and height if we can get it from style
  var styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
  }

  var styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

});

/**
 * matchesSelector v2.0.1
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'desandro-matches-selector/matches-selector',factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }

}( window, function factory() {
  'use strict';

  var matchesMethod = ( function() {
    var ElemProto = Element.prototype;
    // check for the standard method name first
    if ( ElemProto.matches ) {
      return 'matches';
    }
    // check un-prefixed
    if ( ElemProto.matchesSelector ) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

    for ( var i=0; i < prefixes.length; i++ ) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if ( ElemProto[ method ] ) {
        return method;
      }
    }
  })();

  return function matchesSelector( elem, selector ) {
    return elem[ matchesMethod ]( selector );
  };

}));

/**
 * Fizzy UI utils v2.0.3
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'fizzy-ui-utils/utils',[
      'desandro-matches-selector/matches-selector'
    ], function( matchesSelector ) {
      return factory( window, matchesSelector );
    });
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('desandro-matches-selector')
    );
  } else {
    // browser global
    window.fizzyUIUtils = factory(
      window,
      window.matchesSelector
    );
  }

}( window, function factory( window, matchesSelector ) {



var utils = {};

// ----- extend ----- //

// extends objects
utils.extend = function( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
};

// ----- modulo ----- //

utils.modulo = function( num, div ) {
  return ( ( num % div ) + div ) % div;
};

// ----- makeArray ----- //

// turn element or nodeList into an array
utils.makeArray = function( obj ) {
  var ary = [];
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    ary = obj;
  } else if ( obj && typeof obj.length == 'number' ) {
    // convert nodeList to array
    for ( var i=0; i < obj.length; i++ ) {
      ary.push( obj[i] );
    }
  } else {
    // array of single index
    ary.push( obj );
  }
  return ary;
};

// ----- removeFrom ----- //

utils.removeFrom = function( ary, obj ) {
  var index = ary.indexOf( obj );
  if ( index != -1 ) {
    ary.splice( index, 1 );
  }
};

// ----- getParent ----- //

utils.getParent = function( elem, selector ) {
  while ( elem != document.body ) {
    elem = elem.parentNode;
    if ( matchesSelector( elem, selector ) ) {
      return elem;
    }
  }
};

// ----- getQueryElement ----- //

// use element as selector string
utils.getQueryElement = function( elem ) {
  if ( typeof elem == 'string' ) {
    return document.querySelector( elem );
  }
  return elem;
};

// ----- handleEvent ----- //

// enable .ontype to trigger from .addEventListener( elem, 'type' )
utils.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

// ----- filterFindElements ----- //

utils.filterFindElements = function( elems, selector ) {
  // make array of elems
  elems = utils.makeArray( elems );
  var ffElems = [];

  elems.forEach( function( elem ) {
    // check that elem is an actual element
    if ( !( elem instanceof HTMLElement ) ) {
      return;
    }
    // add elem if no selector
    if ( !selector ) {
      ffElems.push( elem );
      return;
    }
    // filter & find items if we have a selector
    // filter
    if ( matchesSelector( elem, selector ) ) {
      ffElems.push( elem );
    }
    // find children
    var childElems = elem.querySelectorAll( selector );
    // concat childElems to filterFound array
    for ( var i=0; i < childElems.length; i++ ) {
      ffElems.push( childElems[i] );
    }
  });

  return ffElems;
};

// ----- debounceMethod ----- //

utils.debounceMethod = function( _class, methodName, threshold ) {
  // original method
  var method = _class.prototype[ methodName ];
  var timeoutName = methodName + 'Timeout';

  _class.prototype[ methodName ] = function() {
    var timeout = this[ timeoutName ];
    if ( timeout ) {
      clearTimeout( timeout );
    }
    var args = arguments;

    var _this = this;
    this[ timeoutName ] = setTimeout( function() {
      method.apply( _this, args );
      delete _this[ timeoutName ];
    }, threshold || 100 );
  };
};

// ----- docReady ----- //

utils.docReady = function( callback ) {
  var readyState = document.readyState;
  if ( readyState == 'complete' || readyState == 'interactive' ) {
    // do async to allow for other scripts to run. metafizzy/flickity#441
    setTimeout( callback );
  } else {
    document.addEventListener( 'DOMContentLoaded', callback );
  }
};

// ----- htmlInit ----- //

// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
utils.toDashed = function( str ) {
  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
    return $1 + '-' + $2;
  }).toLowerCase();
};

var console = window.console;
/**
 * allow user to initialize classes via [data-namespace] or .js-namespace class
 * htmlInit( Widget, 'widgetName' )
 * options are parsed from data-namespace-options
 */
utils.htmlInit = function( WidgetClass, namespace ) {
  utils.docReady( function() {
    var dashedNamespace = utils.toDashed( namespace );
    var dataAttr = 'data-' + dashedNamespace;
    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
    var elems = utils.makeArray( dataAttrElems )
      .concat( utils.makeArray( jsDashElems ) );
    var dataOptionsAttr = dataAttr + '-options';
    var jQuery = window.jQuery;

    elems.forEach( function( elem ) {
      var attr = elem.getAttribute( dataAttr ) ||
        elem.getAttribute( dataOptionsAttr );
      var options;
      try {
        options = attr && JSON.parse( attr );
      } catch ( error ) {
        // log error, do not initialize
        if ( console ) {
          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
          ': ' + error );
        }
        return;
      }
      // initialize
      var instance = new WidgetClass( elem, options );
      // make available via $().data('namespace')
      if ( jQuery ) {
        jQuery.data( elem, namespace, instance );
      }
    });

  });
};

// -----  ----- //

return utils;

}));

/**
 * Outlayer Item
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD - RequireJS
    define( 'outlayer/item',[
        'ev-emitter/ev-emitter',
        'get-size/get-size'
      ],
      factory
    );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      require('ev-emitter'),
      require('get-size')
    );
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(
      window.EvEmitter,
      window.getSize
    );
  }

}( window, function factory( EvEmitter, getSize ) {
'use strict';

// ----- helpers ----- //

function isEmptyObj( obj ) {
  for ( var prop in obj ) {
    return false;
  }
  prop = null;
  return true;
}

// -------------------------- CSS3 support -------------------------- //


var docElemStyle = document.documentElement.style;

var transitionProperty = typeof docElemStyle.transition == 'string' ?
  'transition' : 'WebkitTransition';
var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

var transitionEndEvent = {
  WebkitTransition: 'webkitTransitionEnd',
  transition: 'transitionend'
}[ transitionProperty ];

// cache all vendor properties that could have vendor prefix
var vendorProperties = {
  transform: transformProperty,
  transition: transitionProperty,
  transitionDuration: transitionProperty + 'Duration',
  transitionProperty: transitionProperty + 'Property',
  transitionDelay: transitionProperty + 'Delay'
};

// -------------------------- Item -------------------------- //

function Item( element, layout ) {
  if ( !element ) {
    return;
  }

  this.element = element;
  // parent layout class, i.e. Masonry, Isotope, or Packery
  this.layout = layout;
  this.position = {
    x: 0,
    y: 0
  };

  this._create();
}

// inherit EvEmitter
var proto = Item.prototype = Object.create( EvEmitter.prototype );
proto.constructor = Item;

proto._create = function() {
  // transition objects
  this._transn = {
    ingProperties: {},
    clean: {},
    onEnd: {}
  };

  this.css({
    position: 'absolute'
  });
};

// trigger specified handler for event type
proto.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * apply CSS styles to element
 * @param {Object} style
 */
proto.css = function( style ) {
  var elemStyle = this.element.style;

  for ( var prop in style ) {
    // use vendor property if available
    var supportedProp = vendorProperties[ prop ] || prop;
    elemStyle[ supportedProp ] = style[ prop ];
  }
};

 // measure position, and sets it
proto.getPosition = function() {
  var style = getComputedStyle( this.element );
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
  // convert percent to pixels
  var layoutSize = this.layout.size;
  var x = xValue.indexOf('%') != -1 ?
    ( parseFloat( xValue ) / 100 ) * layoutSize.width : parseInt( xValue, 10 );
  var y = yValue.indexOf('%') != -1 ?
    ( parseFloat( yValue ) / 100 ) * layoutSize.height : parseInt( yValue, 10 );

  // clean up 'auto' or other non-integer values
  x = isNaN( x ) ? 0 : x;
  y = isNaN( y ) ? 0 : y;
  // remove padding from measurement
  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

  this.position.x = x;
  this.position.y = y;
};

// set settled position, apply padding
proto.layoutPosition = function() {
  var layoutSize = this.layout.size;
  var style = {};
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');

  // x
  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
  var xProperty = isOriginLeft ? 'left' : 'right';
  var xResetProperty = isOriginLeft ? 'right' : 'left';

  var x = this.position.x + layoutSize[ xPadding ];
  // set in percentage or pixels
  style[ xProperty ] = this.getXValue( x );
  // reset other property
  style[ xResetProperty ] = '';

  // y
  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
  var yProperty = isOriginTop ? 'top' : 'bottom';
  var yResetProperty = isOriginTop ? 'bottom' : 'top';

  var y = this.position.y + layoutSize[ yPadding ];
  // set in percentage or pixels
  style[ yProperty ] = this.getYValue( y );
  // reset other property
  style[ yResetProperty ] = '';

  this.css( style );
  this.emitEvent( 'layout', [ this ] );
};

proto.getXValue = function( x ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && !isHorizontal ?
    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
};

proto.getYValue = function( y ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && isHorizontal ?
    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
};

proto._transitionTo = function( x, y ) {
  this.getPosition();
  // get current x & y from top/left
  var curX = this.position.x;
  var curY = this.position.y;

  var compareX = parseInt( x, 10 );
  var compareY = parseInt( y, 10 );
  var didNotMove = compareX === this.position.x && compareY === this.position.y;

  // save end position
  this.setPosition( x, y );

  // if did not move and not transitioning, just go to layout
  if ( didNotMove && !this.isTransitioning ) {
    this.layoutPosition();
    return;
  }

  var transX = x - curX;
  var transY = y - curY;
  var transitionStyle = {};
  transitionStyle.transform = this.getTranslate( transX, transY );

  this.transition({
    to: transitionStyle,
    onTransitionEnd: {
      transform: this.layoutPosition
    },
    isCleaning: true
  });
};

proto.getTranslate = function( x, y ) {
  // flip cooridinates if origin on right or bottom
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  x = isOriginLeft ? x : -x;
  y = isOriginTop ? y : -y;
  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
};

// non transition + transform support
proto.goTo = function( x, y ) {
  this.setPosition( x, y );
  this.layoutPosition();
};

proto.moveTo = proto._transitionTo;

proto.setPosition = function( x, y ) {
  this.position.x = parseInt( x, 10 );
  this.position.y = parseInt( y, 10 );
};

// ----- transition ----- //

/**
 * @param {Object} style - CSS
 * @param {Function} onTransitionEnd
 */

// non transition, just trigger callback
proto._nonTransition = function( args ) {
  this.css( args.to );
  if ( args.isCleaning ) {
    this._removeStyles( args.to );
  }
  for ( var prop in args.onTransitionEnd ) {
    args.onTransitionEnd[ prop ].call( this );
  }
};

/**
 * proper transition
 * @param {Object} args - arguments
 *   @param {Object} to - style to transition to
 *   @param {Object} from - style to start transition from
 *   @param {Boolean} isCleaning - removes transition styles after transition
 *   @param {Function} onTransitionEnd - callback
 */
proto.transition = function( args ) {
  // redirect to nonTransition if no transition duration
  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
    this._nonTransition( args );
    return;
  }

  var _transition = this._transn;
  // keep track of onTransitionEnd callback by css property
  for ( var prop in args.onTransitionEnd ) {
    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
  }
  // keep track of properties that are transitioning
  for ( prop in args.to ) {
    _transition.ingProperties[ prop ] = true;
    // keep track of properties to clean up when transition is done
    if ( args.isCleaning ) {
      _transition.clean[ prop ] = true;
    }
  }

  // set from styles
  if ( args.from ) {
    this.css( args.from );
    // force redraw. http://blog.alexmaccaw.com/css-transitions
    var h = this.element.offsetHeight;
    // hack for JSHint to hush about unused var
    h = null;
  }
  // enable transition
  this.enableTransition( args.to );
  // set styles that are transitioning
  this.css( args.to );

  this.isTransitioning = true;

};

// dash before all cap letters, including first for
// WebkitTransform => -webkit-transform
function toDashedAll( str ) {
  return str.replace( /([A-Z])/g, function( $1 ) {
    return '-' + $1.toLowerCase();
  });
}

var transitionProps = 'opacity,' + toDashedAll( transformProperty );

proto.enableTransition = function(/* style */) {
  // HACK changing transitionProperty during a transition
  // will cause transition to jump
  if ( this.isTransitioning ) {
    return;
  }

  // make `transition: foo, bar, baz` from style object
  // HACK un-comment this when enableTransition can work
  // while a transition is happening
  // var transitionValues = [];
  // for ( var prop in style ) {
  //   // dash-ify camelCased properties like WebkitTransition
  //   prop = vendorProperties[ prop ] || prop;
  //   transitionValues.push( toDashedAll( prop ) );
  // }
  // munge number to millisecond, to match stagger
  var duration = this.layout.options.transitionDuration;
  duration = typeof duration == 'number' ? duration + 'ms' : duration;
  // enable transition styles
  this.css({
    transitionProperty: transitionProps,
    transitionDuration: duration,
    transitionDelay: this.staggerDelay || 0
  });
  // listen for transition end event
  this.element.addEventListener( transitionEndEvent, this, false );
};

// ----- events ----- //

proto.onwebkitTransitionEnd = function( event ) {
  this.ontransitionend( event );
};

proto.onotransitionend = function( event ) {
  this.ontransitionend( event );
};

// properties that I munge to make my life easier
var dashedVendorProperties = {
  '-webkit-transform': 'transform'
};

proto.ontransitionend = function( event ) {
  // disregard bubbled events from children
  if ( event.target !== this.element ) {
    return;
  }
  var _transition = this._transn;
  // get property name of transitioned property, convert to prefix-free
  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

  // remove property that has completed transitioning
  delete _transition.ingProperties[ propertyName ];
  // check if any properties are still transitioning
  if ( isEmptyObj( _transition.ingProperties ) ) {
    // all properties have completed transitioning
    this.disableTransition();
  }
  // clean style
  if ( propertyName in _transition.clean ) {
    // clean up style
    this.element.style[ event.propertyName ] = '';
    delete _transition.clean[ propertyName ];
  }
  // trigger onTransitionEnd callback
  if ( propertyName in _transition.onEnd ) {
    var onTransitionEnd = _transition.onEnd[ propertyName ];
    onTransitionEnd.call( this );
    delete _transition.onEnd[ propertyName ];
  }

  this.emitEvent( 'transitionEnd', [ this ] );
};

proto.disableTransition = function() {
  this.removeTransitionStyles();
  this.element.removeEventListener( transitionEndEvent, this, false );
  this.isTransitioning = false;
};

/**
 * removes style property from element
 * @param {Object} style
**/
proto._removeStyles = function( style ) {
  // clean up transition styles
  var cleanStyle = {};
  for ( var prop in style ) {
    cleanStyle[ prop ] = '';
  }
  this.css( cleanStyle );
};

var cleanTransitionStyle = {
  transitionProperty: '',
  transitionDuration: '',
  transitionDelay: ''
};

proto.removeTransitionStyles = function() {
  // remove transition
  this.css( cleanTransitionStyle );
};

// ----- stagger ----- //

proto.stagger = function( delay ) {
  delay = isNaN( delay ) ? 0 : delay;
  this.staggerDelay = delay + 'ms';
};

// ----- show/hide/remove ----- //

// remove element from DOM
proto.removeElem = function() {
  this.element.parentNode.removeChild( this.element );
  // remove display: none
  this.css({ display: '' });
  this.emitEvent( 'remove', [ this ] );
};

proto.remove = function() {
  // just remove element if no transition support or no transition
  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
    this.removeElem();
    return;
  }

  // start transition
  this.once( 'transitionEnd', function() {
    this.removeElem();
  });
  this.hide();
};

proto.reveal = function() {
  delete this.isHidden;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

  this.transition({
    from: options.hiddenStyle,
    to: options.visibleStyle,
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onRevealTransitionEnd = function() {
  // check if still visible
  // during transition, item may have been hidden
  if ( !this.isHidden ) {
    this.emitEvent('reveal');
  }
};

/**
 * get style property use for hide/reveal transition end
 * @param {String} styleProperty - hiddenStyle/visibleStyle
 * @returns {String}
 */
proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
  var optionStyle = this.layout.options[ styleProperty ];
  // use opacity
  if ( optionStyle.opacity ) {
    return 'opacity';
  }
  // get first property
  for ( var prop in optionStyle ) {
    return prop;
  }
};

proto.hide = function() {
  // set flag
  this.isHidden = true;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

  this.transition({
    from: options.visibleStyle,
    to: options.hiddenStyle,
    // keep hidden stuff hidden
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onHideTransitionEnd = function() {
  // check if still hidden
  // during transition, item may have been un-hidden
  if ( this.isHidden ) {
    this.css({ display: 'none' });
    this.emitEvent('hide');
  }
};

proto.destroy = function() {
  this.css({
    position: '',
    left: '',
    right: '',
    top: '',
    bottom: '',
    transition: '',
    transform: ''
  });
};

return Item;

}));

/*!
 * Outlayer v2.1.0
 * the brains and guts of a layout library
 * MIT license
 */

( function( window, factory ) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD - RequireJS
    define( 'outlayer/outlayer',[
        'ev-emitter/ev-emitter',
        'get-size/get-size',
        'fizzy-ui-utils/utils',
        './item'
      ],
      function( EvEmitter, getSize, utils, Item ) {
        return factory( window, EvEmitter, getSize, utils, Item);
      }
    );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      window,
      require('ev-emitter'),
      require('get-size'),
      require('fizzy-ui-utils'),
      require('./item')
    );
  } else {
    // browser global
    window.Outlayer = factory(
      window,
      window.EvEmitter,
      window.getSize,
      window.fizzyUIUtils,
      window.Outlayer.Item
    );
  }

}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
'use strict';

// ----- vars ----- //

var console = window.console;
var jQuery = window.jQuery;
var noop = function() {};

// -------------------------- Outlayer -------------------------- //

// globally unique identifiers
var GUID = 0;
// internal store of all Outlayer intances
var instances = {};


/**
 * @param {Element, String} element
 * @param {Object} options
 * @constructor
 */
function Outlayer( element, options ) {
  var queryElement = utils.getQueryElement( element );
  if ( !queryElement ) {
    if ( console ) {
      console.error( 'Bad element for ' + this.constructor.namespace +
        ': ' + ( queryElement || element ) );
    }
    return;
  }
  this.element = queryElement;
  // add jQuery
  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = utils.extend( {}, this.constructor.defaults );
  this.option( options );

  // add id for Outlayer.getFromElement
  var id = ++GUID;
  this.element.outlayerGUID = id; // expando
  instances[ id ] = this; // associate via id

  // kick it off
  this._create();

  var isInitLayout = this._getOption('initLayout');
  if ( isInitLayout ) {
    this.layout();
  }
}

// settings are for internal use only
Outlayer.namespace = 'outlayer';
Outlayer.Item = Item;

// default options
Outlayer.defaults = {
  containerStyle: {
    position: 'relative'
  },
  initLayout: true,
  originLeft: true,
  originTop: true,
  resize: true,
  resizeContainer: true,
  // item options
  transitionDuration: '0.4s',
  hiddenStyle: {
    opacity: 0,
    transform: 'scale(0.001)'
  },
  visibleStyle: {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var proto = Outlayer.prototype;
// inherit EvEmitter
utils.extend( proto, EvEmitter.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  utils.extend( this.options, opts );
};

/**
 * get backwards compatible option value, check old name
 */
proto._getOption = function( option ) {
  var oldOption = this.constructor.compatOptions[ option ];
  return oldOption && this.options[ oldOption ] !== undefined ?
    this.options[ oldOption ] : this.options[ option ];
};

Outlayer.compatOptions = {
  // currentName: oldName
  initLayout: 'isInitLayout',
  horizontal: 'isHorizontal',
  layoutInstant: 'isLayoutInstant',
  originLeft: 'isOriginLeft',
  originTop: 'isOriginTop',
  resize: 'isResizeBound',
  resizeContainer: 'isResizingContainer'
};

proto._create = function() {
  // get items from children
  this.reloadItems();
  // elements that affect layout, but are not laid out
  this.stamps = [];
  this.stamp( this.options.stamp );
  // set container style
  utils.extend( this.element.style, this.options.containerStyle );

  // bind resize method
  var canBindResize = this._getOption('resize');
  if ( canBindResize ) {
    this.bindResize();
  }
};

// goes through all children again and gets bricks in proper order
proto.reloadItems = function() {
  // collection of item elements
  this.items = this._itemize( this.element.children );
};


/**
 * turn elements into Outlayer.Items to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - collection of new Outlayer Items
 */
proto._itemize = function( elems ) {

  var itemElems = this._filterFindItemElements( elems );
  var Item = this.constructor.Item;

  // create new Outlayer Items for collection
  var items = [];
  for ( var i=0; i < itemElems.length; i++ ) {
    var elem = itemElems[i];
    var item = new Item( elem, this );
    items.push( item );
  }

  return items;
};

/**
 * get item elements to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - item elements
 */
proto._filterFindItemElements = function( elems ) {
  return utils.filterFindElements( elems, this.options.itemSelector );
};

/**
 * getter method for getting item elements
 * @returns {Array} elems - collection of item elements
 */
proto.getItemElements = function() {
  return this.items.map( function( item ) {
    return item.element;
  });
};

// ----- init & layout ----- //

/**
 * lays out all items
 */
proto.layout = function() {
  this._resetLayout();
  this._manageStamps();

  // don't animate first layout
  var layoutInstant = this._getOption('layoutInstant');
  var isInstant = layoutInstant !== undefined ?
    layoutInstant : !this._isLayoutInited;
  this.layoutItems( this.items, isInstant );

  // flag for initalized
  this._isLayoutInited = true;
};

// _init is alias for layout
proto._init = proto.layout;

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();
};


proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * get measurement from option, for columnWidth, rowHeight, gutter
 * if option is String -> get element from selector string, & get size of element
 * if option is Element -> get size of element
 * else use option as a number
 *
 * @param {String} measurement
 * @param {String} size - width or height
 * @private
 */
proto._getMeasurement = function( measurement, size ) {
  var option = this.options[ measurement ];
  var elem;
  if ( !option ) {
    // default to 0
    this[ measurement ] = 0;
  } else {
    // use option as an element
    if ( typeof option == 'string' ) {
      elem = this.element.querySelector( option );
    } else if ( option instanceof HTMLElement ) {
      elem = option;
    }
    // use size of element, if element
    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
  }
};

/**
 * layout a collection of item elements
 * @api public
 */
proto.layoutItems = function( items, isInstant ) {
  items = this._getItemsForLayout( items );

  this._layoutItems( items, isInstant );

  this._postLayout();
};

/**
 * get the items to be laid out
 * you may want to skip over some items
 * @param {Array} items
 * @returns {Array} items
 */
proto._getItemsForLayout = function( items ) {
  return items.filter( function( item ) {
    return !item.isIgnored;
  });
};

/**
 * layout items
 * @param {Array} items
 * @param {Boolean} isInstant
 */
proto._layoutItems = function( items, isInstant ) {
  this._emitCompleteOnItems( 'layout', items );

  if ( !items || !items.length ) {
    // no items, emit event with empty array
    return;
  }

  var queue = [];

  items.forEach( function( item ) {
    // get x/y object from method
    var position = this._getItemLayoutPosition( item );
    // enqueue
    position.item = item;
    position.isInstant = isInstant || item.isLayoutInstant;
    queue.push( position );
  }, this );

  this._processLayoutQueue( queue );
};

/**
 * get item layout position
 * @param {Outlayer.Item} item
 * @returns {Object} x and y position
 */
proto._getItemLayoutPosition = function( /* item */ ) {
  return {
    x: 0,
    y: 0
  };
};

/**
 * iterate over array and position each item
 * Reason being - separating this logic prevents 'layout invalidation'
 * thx @paul_irish
 * @param {Array} queue
 */
proto._processLayoutQueue = function( queue ) {
  this.updateStagger();
  queue.forEach( function( obj, i ) {
    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
  }, this );
};

// set stagger from option in milliseconds number
proto.updateStagger = function() {
  var stagger = this.options.stagger;
  if ( stagger === null || stagger === undefined ) {
    this.stagger = 0;
    return;
  }
  this.stagger = getMilliseconds( stagger );
  return this.stagger;
};

/**
 * Sets position of item in DOM
 * @param {Outlayer.Item} item
 * @param {Number} x - horizontal position
 * @param {Number} y - vertical position
 * @param {Boolean} isInstant - disables transitions
 */
proto._positionItem = function( item, x, y, isInstant, i ) {
  if ( isInstant ) {
    // if not transition, just set CSS
    item.goTo( x, y );
  } else {
    item.stagger( i * this.stagger );
    item.moveTo( x, y );
  }
};

/**
 * Any logic you want to do after each layout,
 * i.e. size the container
 */
proto._postLayout = function() {
  this.resizeContainer();
};

proto.resizeContainer = function() {
  var isResizingContainer = this._getOption('resizeContainer');
  if ( !isResizingContainer ) {
    return;
  }
  var size = this._getContainerSize();
  if ( size ) {
    this._setContainerMeasure( size.width, true );
    this._setContainerMeasure( size.height, false );
  }
};

/**
 * Sets width or height of container if returned
 * @returns {Object} size
 *   @param {Number} width
 *   @param {Number} height
 */
proto._getContainerSize = noop;

/**
 * @param {Number} measure - size of width or height
 * @param {Boolean} isWidth
 */
proto._setContainerMeasure = function( measure, isWidth ) {
  if ( measure === undefined ) {
    return;
  }

  var elemSize = this.size;
  // add padding and border width if border box
  if ( elemSize.isBorderBox ) {
    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
      elemSize.borderLeftWidth + elemSize.borderRightWidth :
      elemSize.paddingBottom + elemSize.paddingTop +
      elemSize.borderTopWidth + elemSize.borderBottomWidth;
  }

  measure = Math.max( measure, 0 );
  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
};

/**
 * emit eventComplete on a collection of items events
 * @param {String} eventName
 * @param {Array} items - Outlayer.Items
 */
proto._emitCompleteOnItems = function( eventName, items ) {
  var _this = this;
  function onComplete() {
    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
  }

  var count = items.length;
  if ( !items || !count ) {
    onComplete();
    return;
  }

  var doneCount = 0;
  function tick() {
    doneCount++;
    if ( doneCount == count ) {
      onComplete();
    }
  }

  // bind callback
  items.forEach( function( item ) {
    item.once( eventName, tick );
  });
};

/**
 * emits events via EvEmitter and jQuery events
 * @param {String} type - name of event
 * @param {Event} event - original event
 * @param {Array} args - extra arguments
 */
proto.dispatchEvent = function( type, event, args ) {
  // add original event to arguments
  var emitArgs = event ? [ event ].concat( args ) : args;
  this.emitEvent( type, emitArgs );

  if ( jQuery ) {
    // set this.$element
    this.$element = this.$element || jQuery( this.element );
    if ( event ) {
      // create jQuery event
      var $event = jQuery.Event( event );
      $event.type = type;
      this.$element.trigger( $event, args );
    } else {
      // just trigger with type if no event available
      this.$element.trigger( type, args );
    }
  }
};

// -------------------------- ignore & stamps -------------------------- //


/**
 * keep item in collection, but do not lay it out
 * ignored items do not get skipped in layout
 * @param {Element} elem
 */
proto.ignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    item.isIgnored = true;
  }
};

/**
 * return item to layout collection
 * @param {Element} elem
 */
proto.unignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    delete item.isIgnored;
  }
};

/**
 * adds elements to stamps
 * @param {NodeList, Array, Element, or String} elems
 */
proto.stamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ) {
    return;
  }

  this.stamps = this.stamps.concat( elems );
  // ignore
  elems.forEach( this.ignore, this );
};

/**
 * removes elements to stamps
 * @param {NodeList, Array, or Element} elems
 */
proto.unstamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ){
    return;
  }

  elems.forEach( function( elem ) {
    // filter out removed stamp elements
    utils.removeFrom( this.stamps, elem );
    this.unignore( elem );
  }, this );
};

/**
 * finds child elements
 * @param {NodeList, Array, Element, or String} elems
 * @returns {Array} elems
 */
proto._find = function( elems ) {
  if ( !elems ) {
    return;
  }
  // if string, use argument as selector string
  if ( typeof elems == 'string' ) {
    elems = this.element.querySelectorAll( elems );
  }
  elems = utils.makeArray( elems );
  return elems;
};

proto._manageStamps = function() {
  if ( !this.stamps || !this.stamps.length ) {
    return;
  }

  this._getBoundingRect();

  this.stamps.forEach( this._manageStamp, this );
};

// update boundingLeft / Top
proto._getBoundingRect = function() {
  // get bounding rect for container element
  var boundingRect = this.element.getBoundingClientRect();
  var size = this.size;
  this._boundingRect = {
    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
  };
};

/**
 * @param {Element} stamp
**/
proto._manageStamp = noop;

/**
 * get x/y position of element relative to container element
 * @param {Element} elem
 * @returns {Object} offset - has left, top, right, bottom
 */
proto._getElementOffset = function( elem ) {
  var boundingRect = elem.getBoundingClientRect();
  var thisRect = this._boundingRect;
  var size = getSize( elem );
  var offset = {
    left: boundingRect.left - thisRect.left - size.marginLeft,
    top: boundingRect.top - thisRect.top - size.marginTop,
    right: thisRect.right - boundingRect.right - size.marginRight,
    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
  };
  return offset;
};

// -------------------------- resize -------------------------- //

// enable event handlers for listeners
// i.e. resize -> onresize
proto.handleEvent = utils.handleEvent;

/**
 * Bind layout to window resizing
 */
proto.bindResize = function() {
  window.addEventListener( 'resize', this );
  this.isResizeBound = true;
};

/**
 * Unbind layout to window resizing
 */
proto.unbindResize = function() {
  window.removeEventListener( 'resize', this );
  this.isResizeBound = false;
};

proto.onresize = function() {
  this.resize();
};

utils.debounceMethod( Outlayer, 'onresize', 100 );

proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  this.layout();
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  // check that this.size and size are there
  // IE8 triggers resize on body size change, so they might not be
  var hasSizes = this.size && size;
  return hasSizes && size.innerWidth !== this.size.innerWidth;
};

// -------------------------- methods -------------------------- //

/**
 * add items to Outlayer instance
 * @param {Array or NodeList or Element} elems
 * @returns {Array} items - Outlayer.Items
**/
proto.addItems = function( elems ) {
  var items = this._itemize( elems );
  // add items to collection
  if ( items.length ) {
    this.items = this.items.concat( items );
  }
  return items;
};

/**
 * Layout newly-appended item elements
 * @param {Array or NodeList or Element} elems
 */
proto.appended = function( elems ) {
  var items = this.addItems( elems );
  if ( !items.length ) {
    return;
  }
  // layout and reveal just the new items
  this.layoutItems( items, true );
  this.reveal( items );
};

/**
 * Layout prepended elements
 * @param {Array or NodeList or Element} elems
 */
proto.prepended = function( elems ) {
  var items = this._itemize( elems );
  if ( !items.length ) {
    return;
  }
  // add items to beginning of collection
  var previousItems = this.items.slice(0);
  this.items = items.concat( previousItems );
  // start new layout
  this._resetLayout();
  this._manageStamps();
  // layout new stuff without transition
  this.layoutItems( items, true );
  this.reveal( items );
  // layout previous items
  this.layoutItems( previousItems );
};

/**
 * reveal a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.reveal = function( items ) {
  this._emitCompleteOnItems( 'reveal', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.reveal();
  });
};

/**
 * hide a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.hide = function( items ) {
  this._emitCompleteOnItems( 'hide', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.hide();
  });
};

/**
 * reveal item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.revealItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.reveal( items );
};

/**
 * hide item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.hideItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.hide( items );
};

/**
 * get Outlayer.Item, given an Element
 * @param {Element} elem
 * @param {Function} callback
 * @returns {Outlayer.Item} item
 */
proto.getItem = function( elem ) {
  // loop through items to get the one that matches
  for ( var i=0; i < this.items.length; i++ ) {
    var item = this.items[i];
    if ( item.element == elem ) {
      // return item
      return item;
    }
  }
};

/**
 * get collection of Outlayer.Items, given Elements
 * @param {Array} elems
 * @returns {Array} items - Outlayer.Items
 */
proto.getItems = function( elems ) {
  elems = utils.makeArray( elems );
  var items = [];
  elems.forEach( function( elem ) {
    var item = this.getItem( elem );
    if ( item ) {
      items.push( item );
    }
  }, this );

  return items;
};

/**
 * remove element(s) from instance and DOM
 * @param {Array or NodeList or Element} elems
 */
proto.remove = function( elems ) {
  var removeItems = this.getItems( elems );

  this._emitCompleteOnItems( 'remove', removeItems );

  // bail if no items to remove
  if ( !removeItems || !removeItems.length ) {
    return;
  }

  removeItems.forEach( function( item ) {
    item.remove();
    // remove item from collection
    utils.removeFrom( this.items, item );
  }, this );
};

// ----- destroy ----- //

// remove and disable Outlayer instance
proto.destroy = function() {
  // clean up dynamic styles
  var style = this.element.style;
  style.height = '';
  style.position = '';
  style.width = '';
  // destroy items
  this.items.forEach( function( item ) {
    item.destroy();
  });

  this.unbindResize();

  var id = this.element.outlayerGUID;
  delete instances[ id ]; // remove reference to instance by id
  delete this.element.outlayerGUID;
  // remove data for jQuery
  if ( jQuery ) {
    jQuery.removeData( this.element, this.constructor.namespace );
  }

};

// -------------------------- data -------------------------- //

/**
 * get Outlayer instance from element
 * @param {Element} elem
 * @returns {Outlayer}
 */
Outlayer.data = function( elem ) {
  elem = utils.getQueryElement( elem );
  var id = elem && elem.outlayerGUID;
  return id && instances[ id ];
};


// -------------------------- create Outlayer class -------------------------- //

/**
 * create a layout class
 * @param {String} namespace
 */
Outlayer.create = function( namespace, options ) {
  // sub-class Outlayer
  var Layout = subclass( Outlayer );
  // apply new options and compatOptions
  Layout.defaults = utils.extend( {}, Outlayer.defaults );
  utils.extend( Layout.defaults, options );
  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

  Layout.namespace = namespace;

  Layout.data = Outlayer.data;

  // sub-class Item
  Layout.Item = subclass( Item );

  // -------------------------- declarative -------------------------- //

  utils.htmlInit( Layout, namespace );

  // -------------------------- jQuery bridge -------------------------- //

  // make into jQuery plugin
  if ( jQuery && jQuery.bridget ) {
    jQuery.bridget( namespace, Layout );
  }

  return Layout;
};

function subclass( Parent ) {
  function SubClass() {
    Parent.apply( this, arguments );
  }

  SubClass.prototype = Object.create( Parent.prototype );
  SubClass.prototype.constructor = SubClass;

  return SubClass;
}

// ----- helpers ----- //

// how many milliseconds are in each unit
var msUnits = {
  ms: 1,
  s: 1000
};

// munge time-like parameter into millisecond number
// '0.4s' -> 40
function getMilliseconds( time ) {
  if ( typeof time == 'number' ) {
    return time;
  }
  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
  var num = matches && matches[1];
  var unit = matches && matches[2];
  if ( !num.length ) {
    return 0;
  }
  num = parseFloat( num );
  var mult = msUnits[ unit ] || 1;
  return num * mult;
}

// ----- fin ----- //

// back in global
Outlayer.Item = Item;

return Outlayer;

}));

/**
 * Isotope Item
**/

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'isotope/js/item',[
        'outlayer/outlayer'
      ],
      factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('outlayer')
    );
  } else {
    // browser global
    window.Isotope = window.Isotope || {};
    window.Isotope.Item = factory(
      window.Outlayer
    );
  }

}( window, function factory( Outlayer ) {
'use strict';

// -------------------------- Item -------------------------- //

// sub-class Outlayer Item
function Item() {
  Outlayer.Item.apply( this, arguments );
}

var proto = Item.prototype = Object.create( Outlayer.Item.prototype );

var _create = proto._create;
proto._create = function() {
  // assign id, used for original-order sorting
  this.id = this.layout.itemGUID++;
  _create.call( this );
  this.sortData = {};
};

proto.updateSortData = function() {
  if ( this.isIgnored ) {
    return;
  }
  // default sorters
  this.sortData.id = this.id;
  // for backward compatibility
  this.sortData['original-order'] = this.id;
  this.sortData.random = Math.random();
  // go thru getSortData obj and apply the sorters
  var getSortData = this.layout.options.getSortData;
  var sorters = this.layout._sorters;
  for ( var key in getSortData ) {
    var sorter = sorters[ key ];
    this.sortData[ key ] = sorter( this.element, this );
  }
};

var _destroy = proto.destroy;
proto.destroy = function() {
  // call super
  _destroy.apply( this, arguments );
  // reset display, #741
  this.css({
    display: ''
  });
};

return Item;

}));

/**
 * Isotope LayoutMode
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'isotope/js/layout-mode',[
        'get-size/get-size',
        'outlayer/outlayer'
      ],
      factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('get-size'),
      require('outlayer')
    );
  } else {
    // browser global
    window.Isotope = window.Isotope || {};
    window.Isotope.LayoutMode = factory(
      window.getSize,
      window.Outlayer
    );
  }

}( window, function factory( getSize, Outlayer ) {
  'use strict';

  // layout mode class
  function LayoutMode( isotope ) {
    this.isotope = isotope;
    // link properties
    if ( isotope ) {
      this.options = isotope.options[ this.namespace ];
      this.element = isotope.element;
      this.items = isotope.filteredItems;
      this.size = isotope.size;
    }
  }

  var proto = LayoutMode.prototype;

  /**
   * some methods should just defer to default Outlayer method
   * and reference the Isotope instance as `this`
  **/
  var facadeMethods = [
    '_resetLayout',
    '_getItemLayoutPosition',
    '_manageStamp',
    '_getContainerSize',
    '_getElementOffset',
    'needsResizeLayout',
    '_getOption'
  ];

  facadeMethods.forEach( function( methodName ) {
    proto[ methodName ] = function() {
      return Outlayer.prototype[ methodName ].apply( this.isotope, arguments );
    };
  });

  // -----  ----- //

  // for horizontal layout modes, check vertical size
  proto.needsVerticalResizeLayout = function() {
    // don't trigger if size did not change
    var size = getSize( this.isotope.element );
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var hasSizes = this.isotope.size && size;
    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;
  };

  // ----- measurements ----- //

  proto._getMeasurement = function() {
    this.isotope._getMeasurement.apply( this, arguments );
  };

  proto.getColumnWidth = function() {
    this.getSegmentSize( 'column', 'Width' );
  };

  proto.getRowHeight = function() {
    this.getSegmentSize( 'row', 'Height' );
  };

  /**
   * get columnWidth or rowHeight
   * segment: 'column' or 'row'
   * size 'Width' or 'Height'
  **/
  proto.getSegmentSize = function( segment, size ) {
    var segmentName = segment + size;
    var outerSize = 'outer' + size;
    // columnWidth / outerWidth // rowHeight / outerHeight
    this._getMeasurement( segmentName, outerSize );
    // got rowHeight or columnWidth, we can chill
    if ( this[ segmentName ] ) {
      return;
    }
    // fall back to item of first element
    var firstItemSize = this.getFirstItemSize();
    this[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||
      // or size of container
      this.isotope.size[ 'inner' + size ];
  };

  proto.getFirstItemSize = function() {
    var firstItem = this.isotope.filteredItems[0];
    return firstItem && firstItem.element && getSize( firstItem.element );
  };

  // ----- methods that should reference isotope ----- //

  proto.layout = function() {
    this.isotope.layout.apply( this.isotope, arguments );
  };

  proto.getSize = function() {
    this.isotope.getSize();
    this.size = this.isotope.size;
  };

  // -------------------------- create -------------------------- //

  LayoutMode.modes = {};

  LayoutMode.create = function( namespace, options ) {

    function Mode() {
      LayoutMode.apply( this, arguments );
    }

    Mode.prototype = Object.create( proto );
    Mode.prototype.constructor = Mode;

    // default options
    if ( options ) {
      Mode.options = options;
    }

    Mode.prototype.namespace = namespace;
    // register in Isotope
    LayoutMode.modes[ namespace ] = Mode;

    return Mode;
  };

  return LayoutMode;

}));

/*!
 * Masonry v4.1.1
 * Cascading grid layout library
 * http://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'masonry/masonry',[
        'outlayer/outlayer',
        'get-size/get-size'
      ],
      factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('outlayer'),
      require('get-size')
    );
  } else {
    // browser global
    window.Masonry = factory(
      window.Outlayer,
      window.getSize
    );
  }

}( window, function factory( Outlayer, getSize ) {



// -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class
  var Masonry = Outlayer.create('masonry');
  // isFitWidth -> fitWidth
  Masonry.compatOptions.fitWidth = 'isFitWidth';

  Masonry.prototype._resetLayout = function() {
    this.getSize();
    this._getMeasurement( 'columnWidth', 'outerWidth' );
    this._getMeasurement( 'gutter', 'outerWidth' );
    this.measureColumns();

    // reset column Y
    this.colYs = [];
    for ( var i=0; i < this.cols; i++ ) {
      this.colYs.push( 0 );
    }

    this.maxY = 0;
  };

  Masonry.prototype.measureColumns = function() {
    this.getContainerWidth();
    // if columnWidth is 0, default to outerWidth of first item
    if ( !this.columnWidth ) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element;
      // columnWidth fall back to item of first element
      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||
        // if first elem has no width, default to size of container
        this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter;

    // calculate columns
    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth;
    // fix rounding errors, typically with gutters
    var excess = columnWidth - containerWidth % columnWidth;
    // if overshoot is less than a pixel, round up, otherwise floor it
    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[ mathMethod ]( cols );
    this.cols = Math.max( cols, 1 );
  };

  Masonry.prototype.getContainerWidth = function() {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');
    var container = isFitWidth ? this.element.parentNode : this.element;
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var size = getSize( container );
    this.containerWidth = size && size.innerWidth;
  };

  Masonry.prototype._getItemLayoutPosition = function( item ) {
    item.getSize();
    // how many columns does this brick span
    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
    // round if off by 1 pixel, otherwise use ceil
    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );
    colSpan = Math.min( colSpan, this.cols );

    var colGroup = this._getColGroup( colSpan );
    // get the minimum Y value from the columns
    var minimumY = Math.min.apply( Math, colGroup );
    var shortColIndex = colGroup.indexOf( minimumY );

    // position the brick
    var position = {
      x: this.columnWidth * shortColIndex,
      y: minimumY
    };

    // apply setHeight to necessary columns
    var setHeight = minimumY + item.size.outerHeight;
    var setSpan = this.cols + 1 - colGroup.length;
    for ( var i = 0; i < setSpan; i++ ) {
      this.colYs[ shortColIndex + i ] = setHeight;
    }

    return position;
  };

  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */
  Masonry.prototype._getColGroup = function( colSpan ) {
    if ( colSpan < 2 ) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = [];
    // how many different places could this brick fit horizontally
    var groupCount = this.cols + 1 - colSpan;
    // for each group potential horizontal position
    for ( var i = 0; i < groupCount; i++ ) {
      // make an array of colY values for that one group
      var groupColYs = this.colYs.slice( i, i + colSpan );
      // and get the max value of the array
      colGroup[i] = Math.max.apply( Math, groupColYs );
    }
    return colGroup;
  };

  Masonry.prototype._manageStamp = function( stamp ) {
    var stampSize = getSize( stamp );
    var offset = this._getElementOffset( stamp );
    // get the columns that this stamp affects
    var isOriginLeft = this._getOption('originLeft');
    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor( firstX / this.columnWidth );
    firstCol = Math.max( 0, firstCol );
    var lastCol = Math.floor( lastX / this.columnWidth );
    // lastCol should not go over if multiple of columnWidth #425
    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min( this.cols - 1, lastCol );
    // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');
    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +
      stampSize.outerHeight;
    for ( var i = firstCol; i <= lastCol; i++ ) {
      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );
    }
  };

  Masonry.prototype._getContainerSize = function() {
    this.maxY = Math.max.apply( Math, this.colYs );
    var size = {
      height: this.maxY
    };

    if ( this._getOption('fitWidth') ) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  Masonry.prototype._getContainerFitWidth = function() {
    var unusedCols = 0;
    // count unused columns
    var i = this.cols;
    while ( --i ) {
      if ( this.colYs[i] !== 0 ) {
        break;
      }
      unusedCols++;
    }
    // fit container to columns that have been used
    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;
  };

  Masonry.prototype.needsResizeLayout = function() {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;

}));

/*!
 * Masonry layout mode
 * sub-classes Masonry
 * http://masonry.desandro.com
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'isotope/js/layout-modes/masonry',[
        '../layout-mode',
        'masonry/masonry'
      ],
      factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('../layout-mode'),
      require('masonry-layout')
    );
  } else {
    // browser global
    factory(
      window.Isotope.LayoutMode,
      window.Masonry
    );
  }

}( window, function factory( LayoutMode, Masonry ) {
'use strict';

// -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class
  var MasonryMode = LayoutMode.create('masonry');

  var proto = MasonryMode.prototype;

  var keepModeMethods = {
    _getElementOffset: true,
    layout: true,
    _getMeasurement: true
  };

  // inherit Masonry prototype
  for ( var method in Masonry.prototype ) {
    // do not inherit mode methods
    if ( !keepModeMethods[ method ] ) {
      proto[ method ] = Masonry.prototype[ method ];
    }
  }

  var measureColumns = proto.measureColumns;
  proto.measureColumns = function() {
    // set items, used if measuring first item
    this.items = this.isotope.filteredItems;
    measureColumns.call( this );
  };

  // point to mode options for fitWidth
  var _getOption = proto._getOption;
  proto._getOption = function( option ) {
    if ( option == 'fitWidth' ) {
      return this.options.isFitWidth !== undefined ?
        this.options.isFitWidth : this.options.fitWidth;
    }
    return _getOption.apply( this.isotope, arguments );
  };

  return MasonryMode;

}));

/**
 * fitRows layout mode
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'isotope/js/layout-modes/fit-rows',[
        '../layout-mode'
      ],
      factory );
  } else if ( typeof exports == 'object' ) {
    // CommonJS
    module.exports = factory(
      require('../layout-mode')
    );
  } else {
    // browser global
    factory(
      window.Isotope.LayoutMode
    );
  }

}( window, function factory( LayoutMode ) {
'use strict';

var FitRows = LayoutMode.create('fitRows');

var proto = FitRows.prototype;

proto._resetLayout = function() {
  this.x = 0;
  this.y = 0;
  this.maxY = 0;
  this._getMeasurement( 'gutter', 'outerWidth' );
};

proto._getItemLayoutPosition = function( item ) {
  item.getSize();

  var itemWidth = item.size.outerWidth + this.gutter;
  // if this element cannot fit in the current row
  var containerWidth = this.isotope.size.innerWidth + this.gutter;
  if ( this.x !== 0 && itemWidth + this.x > containerWidth ) {
    this.x = 0;
    this.y = this.maxY;
  }

  var position = {
    x: this.x,
    y: this.y
  };

  this.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );
  this.x += itemWidth;

  return position;
};

proto._getContainerSize = function() {
  return { height: this.maxY };
};

return FitRows;

}));

/**
 * vertical layout mode
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( 'isotope/js/layout-modes/vertical',[
        '../layout-mode'
      ],
      factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('../layout-mode')
    );
  } else {
    // browser global
    factory(
      window.Isotope.LayoutMode
    );
  }

}( window, function factory( LayoutMode ) {
'use strict';

var Vertical = LayoutMode.create( 'vertical', {
  horizontalAlignment: 0
});

var proto = Vertical.prototype;

proto._resetLayout = function() {
  this.y = 0;
};

proto._getItemLayoutPosition = function( item ) {
  item.getSize();
  var x = ( this.isotope.size.innerWidth - item.size.outerWidth ) *
    this.options.horizontalAlignment;
  var y = this.y;
  this.y += item.size.outerHeight;
  return { x: x, y: y };
};

proto._getContainerSize = function() {
  return { height: this.y };
};

return Vertical;

}));

/*!
 * Isotope v3.0.2
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * http://isotope.metafizzy.co
 * Copyright 2016 Metafizzy
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( [
        'outlayer/outlayer',
        'get-size/get-size',
        'desandro-matches-selector/matches-selector',
        'fizzy-ui-utils/utils',
        'isotope/js/item',
        'isotope/js/layout-mode',
        // include default layout modes
        'isotope/js/layout-modes/masonry',
        'isotope/js/layout-modes/fit-rows',
        'isotope/js/layout-modes/vertical'
      ],
      function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {
        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );
      });
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('outlayer'),
      require('get-size'),
      require('desandro-matches-selector'),
      require('fizzy-ui-utils'),
      require('isotope/js/item'),
      require('isotope/js/layout-mode'),
      // include default layout modes
      require('isotope/js/layout-modes/masonry'),
      require('isotope/js/layout-modes/fit-rows'),
      require('isotope/js/layout-modes/vertical')
    );
  } else {
    // browser global
    window.Isotope = factory(
      window,
      window.Outlayer,
      window.getSize,
      window.matchesSelector,
      window.fizzyUIUtils,
      window.Isotope.Item,
      window.Isotope.LayoutMode
    );
  }

}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,
  Item, LayoutMode ) {



// -------------------------- vars -------------------------- //

var jQuery = window.jQuery;

// -------------------------- helpers -------------------------- //

var trim = String.prototype.trim ?
  function( str ) {
    return str.trim();
  } :
  function( str ) {
    return str.replace( /^\s+|\s+$/g, '' );
  };

// -------------------------- isotopeDefinition -------------------------- //

  // create an Outlayer layout class
  var Isotope = Outlayer.create( 'isotope', {
    layoutMode: 'masonry',
    isJQueryFiltering: true,
    sortAscending: true
  });

  Isotope.Item = Item;
  Isotope.LayoutMode = LayoutMode;

  var proto = Isotope.prototype;

  proto._create = function() {
    this.itemGUID = 0;
    // functions that sort items
    this._sorters = {};
    this._getSorters();
    // call super
    Outlayer.prototype._create.call( this );

    // create layout modes
    this.modes = {};
    // start filteredItems with all items
    this.filteredItems = this.items;
    // keep of track of sortBys
    this.sortHistory = [ 'original-order' ];
    // create from registered layout modes
    for ( var name in LayoutMode.modes ) {
      this._initLayoutMode( name );
    }
  };

  proto.reloadItems = function() {
    // reset item ID counter
    this.itemGUID = 0;
    // call super
    Outlayer.prototype.reloadItems.call( this );
  };

  proto._itemize = function() {
    var items = Outlayer.prototype._itemize.apply( this, arguments );
    // assign ID for original-order
    for ( var i=0; i < items.length; i++ ) {
      var item = items[i];
      item.id = this.itemGUID++;
    }
    this._updateItemsSortData( items );
    return items;
  };


  // -------------------------- layout -------------------------- //

  proto._initLayoutMode = function( name ) {
    var Mode = LayoutMode.modes[ name ];
    // set mode options
    // HACK extend initial options, back-fill in default options
    var initialOpts = this.options[ name ] || {};
    this.options[ name ] = Mode.options ?
      utils.extend( Mode.options, initialOpts ) : initialOpts;
    // init layout mode instance
    this.modes[ name ] = new Mode( this );
  };


  proto.layout = function() {
    // if first time doing layout, do all magic
    if ( !this._isLayoutInited && this._getOption('initLayout') ) {
      this.arrange();
      return;
    }
    this._layout();
  };

  // private method to be used in layout() & magic()
  proto._layout = function() {
    // don't animate first layout
    var isInstant = this._getIsInstant();
    // layout flow
    this._resetLayout();
    this._manageStamps();
    this.layoutItems( this.filteredItems, isInstant );

    // flag for initalized
    this._isLayoutInited = true;
  };

  // filter + sort + layout
  proto.arrange = function( opts ) {
    // set any options pass
    this.option( opts );
    this._getIsInstant();
    // filter, sort, and layout

    // filter
    var filtered = this._filter( this.items );
    this.filteredItems = filtered.matches;

    this._bindArrangeComplete();

    if ( this._isInstant ) {
      this._noTransition( this._hideReveal, [ filtered ] );
    } else {
      this._hideReveal( filtered );
    }

    this._sort();
    this._layout();
  };
  // alias to _init for main plugin method
  proto._init = proto.arrange;

  proto._hideReveal = function( filtered ) {
    this.reveal( filtered.needReveal );
    this.hide( filtered.needHide );
  };

  // HACK
  // Don't animate/transition first layout
  // Or don't animate/transition other layouts
  proto._getIsInstant = function() {
    var isLayoutInstant = this._getOption('layoutInstant');
    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :
      !this._isLayoutInited;
    this._isInstant = isInstant;
    return isInstant;
  };

  // listen for layoutComplete, hideComplete and revealComplete
  // to trigger arrangeComplete
  proto._bindArrangeComplete = function() {
    // listen for 3 events to trigger arrangeComplete
    var isLayoutComplete, isHideComplete, isRevealComplete;
    var _this = this;
    function arrangeParallelCallback() {
      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {
        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );
      }
    }
    this.once( 'layoutComplete', function() {
      isLayoutComplete = true;
      arrangeParallelCallback();
    });
    this.once( 'hideComplete', function() {
      isHideComplete = true;
      arrangeParallelCallback();
    });
    this.once( 'revealComplete', function() {
      isRevealComplete = true;
      arrangeParallelCallback();
    });
  };

  // -------------------------- filter -------------------------- //

  proto._filter = function( items ) {
    var filter = this.options.filter;
    filter = filter || '*';
    var matches = [];
    var hiddenMatched = [];
    var visibleUnmatched = [];

    var test = this._getFilterTest( filter );

    // test each item
    for ( var i=0; i < items.length; i++ ) {
      var item = items[i];
      if ( item.isIgnored ) {
        continue;
      }
      // add item to either matched or unmatched group
      var isMatched = test( item );
      // item.isFilterMatched = isMatched;
      // add to matches if its a match
      if ( isMatched ) {
        matches.push( item );
      }
      // add to additional group if item needs to be hidden or revealed
      if ( isMatched && item.isHidden ) {
        hiddenMatched.push( item );
      } else if ( !isMatched && !item.isHidden ) {
        visibleUnmatched.push( item );
      }
    }

    // return collections of items to be manipulated
    return {
      matches: matches,
      needReveal: hiddenMatched,
      needHide: visibleUnmatched
    };
  };

  // get a jQuery, function, or a matchesSelector test given the filter
  proto._getFilterTest = function( filter ) {
    if ( jQuery && this.options.isJQueryFiltering ) {
      // use jQuery
      return function( item ) {
        return jQuery( item.element ).is( filter );
      };
    }
    if ( typeof filter == 'function' ) {
      // use filter as function
      return function( item ) {
        return filter( item.element );
      };
    }
    // default, use filter as selector string
    return function( item ) {
      return matchesSelector( item.element, filter );
    };
  };

  // -------------------------- sorting -------------------------- //

  /**
   * @params {Array} elems
   * @public
   */
  proto.updateSortData = function( elems ) {
    // get items
    var items;
    if ( elems ) {
      elems = utils.makeArray( elems );
      items = this.getItems( elems );
    } else {
      // update all items if no elems provided
      items = this.items;
    }

    this._getSorters();
    this._updateItemsSortData( items );
  };

  proto._getSorters = function() {
    var getSortData = this.options.getSortData;
    for ( var key in getSortData ) {
      var sorter = getSortData[ key ];
      this._sorters[ key ] = mungeSorter( sorter );
    }
  };

  /**
   * @params {Array} items - of Isotope.Items
   * @private
   */
  proto._updateItemsSortData = function( items ) {
    // do not update if no items
    var len = items && items.length;

    for ( var i=0; len && i < len; i++ ) {
      var item = items[i];
      item.updateSortData();
    }
  };

  // ----- munge sorter ----- //

  // encapsulate this, as we just need mungeSorter
  // other functions in here are just for munging
  var mungeSorter = ( function() {
    // add a magic layer to sorters for convienent shorthands
    // `.foo-bar` will use the text of .foo-bar querySelector
    // `[foo-bar]` will use attribute
    // you can also add parser
    // `.foo-bar parseInt` will parse that as a number
    function mungeSorter( sorter ) {
      // if not a string, return function or whatever it is
      if ( typeof sorter != 'string' ) {
        return sorter;
      }
      // parse the sorter string
      var args = trim( sorter ).split(' ');
      var query = args[0];
      // check if query looks like [an-attribute]
      var attrMatch = query.match( /^\[(.+)\]$/ );
      var attr = attrMatch && attrMatch[1];
      var getValue = getValueGetter( attr, query );
      // use second argument as a parser
      var parser = Isotope.sortDataParsers[ args[1] ];
      // parse the value, if there was a parser
      sorter = parser ? function( elem ) {
        return elem && parser( getValue( elem ) );
      } :
      // otherwise just return value
      function( elem ) {
        return elem && getValue( elem );
      };

      return sorter;
    }

    // get an attribute getter, or get text of the querySelector
    function getValueGetter( attr, query ) {
      // if query looks like [foo-bar], get attribute
      if ( attr ) {
        return function getAttribute( elem ) {
          return elem.getAttribute( attr );
        };
      }

      // otherwise, assume its a querySelector, and get its text
      return function getChildText( elem ) {
        var child = elem.querySelector( query );
        return child && child.textContent;
      };
    }

    return mungeSorter;
  })();

  // parsers used in getSortData shortcut strings
  Isotope.sortDataParsers = {
    'parseInt': function( val ) {
      return parseInt( val, 10 );
    },
    'parseFloat': function( val ) {
      return parseFloat( val );
    }
  };

  // ----- sort method ----- //

  // sort filteredItem order
  proto._sort = function() {
    var sortByOpt = this.options.sortBy;
    if ( !sortByOpt ) {
      return;
    }
    // concat all sortBy and sortHistory
    var sortBys = [].concat.apply( sortByOpt, this.sortHistory );
    // sort magic
    var itemSorter = getItemSorter( sortBys, this.options.sortAscending );
    this.filteredItems.sort( itemSorter );
    // keep track of sortBy History
    if ( sortByOpt != this.sortHistory[0] ) {
      // add to front, oldest goes in last
      this.sortHistory.unshift( sortByOpt );
    }
  };

  // returns a function used for sorting
  function getItemSorter( sortBys, sortAsc ) {
    return function sorter( itemA, itemB ) {
      // cycle through all sortKeys
      for ( var i = 0; i < sortBys.length; i++ ) {
        var sortBy = sortBys[i];
        var a = itemA.sortData[ sortBy ];
        var b = itemB.sortData[ sortBy ];
        if ( a > b || a < b ) {
          // if sortAsc is an object, use the value given the sortBy key
          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;
          var direction = isAscending ? 1 : -1;
          return ( a > b ? 1 : -1 ) * direction;
        }
      }
      return 0;
    };
  }

  // -------------------------- methods -------------------------- //

  // get layout mode
  proto._mode = function() {
    var layoutMode = this.options.layoutMode;
    var mode = this.modes[ layoutMode ];
    if ( !mode ) {
      // TODO console.error
      throw new Error( 'No layout mode: ' + layoutMode );
    }
    // HACK sync mode's options
    // any options set after init for layout mode need to be synced
    mode.options = this.options[ layoutMode ];
    return mode;
  };

  proto._resetLayout = function() {
    // trigger original reset layout
    Outlayer.prototype._resetLayout.call( this );
    this._mode()._resetLayout();
  };

  proto._getItemLayoutPosition = function( item  ) {
    return this._mode()._getItemLayoutPosition( item );
  };

  proto._manageStamp = function( stamp ) {
    this._mode()._manageStamp( stamp );
  };

  proto._getContainerSize = function() {
    return this._mode()._getContainerSize();
  };

  proto.needsResizeLayout = function() {
    return this._mode().needsResizeLayout();
  };

  // -------------------------- adding & removing -------------------------- //

  // HEADS UP overwrites default Outlayer appended
  proto.appended = function( elems ) {
    var items = this.addItems( elems );
    if ( !items.length ) {
      return;
    }
    // filter, layout, reveal new items
    var filteredItems = this._filterRevealAdded( items );
    // add to filteredItems
    this.filteredItems = this.filteredItems.concat( filteredItems );
  };

  // HEADS UP overwrites default Outlayer prepended
  proto.prepended = function( elems ) {
    var items = this._itemize( elems );
    if ( !items.length ) {
      return;
    }
    // start new layout
    this._resetLayout();
    this._manageStamps();
    // filter, layout, reveal new items
    var filteredItems = this._filterRevealAdded( items );
    // layout previous items
    this.layoutItems( this.filteredItems );
    // add to items and filteredItems
    this.filteredItems = filteredItems.concat( this.filteredItems );
    this.items = items.concat( this.items );
  };

  proto._filterRevealAdded = function( items ) {
    var filtered = this._filter( items );
    this.hide( filtered.needHide );
    // reveal all new items
    this.reveal( filtered.matches );
    // layout new items, no transition
    this.layoutItems( filtered.matches, true );
    return filtered.matches;
  };

  /**
   * Filter, sort, and layout newly-appended item elements
   * @param {Array or NodeList or Element} elems
   */
  proto.insert = function( elems ) {
    var items = this.addItems( elems );
    if ( !items.length ) {
      return;
    }
    // append item elements
    var i, item;
    var len = items.length;
    for ( i=0; i < len; i++ ) {
      item = items[i];
      this.element.appendChild( item.element );
    }
    // filter new stuff
    var filteredInsertItems = this._filter( items ).matches;
    // set flag
    for ( i=0; i < len; i++ ) {
      items[i].isLayoutInstant = true;
    }
    this.arrange();
    // reset flag
    for ( i=0; i < len; i++ ) {
      delete items[i].isLayoutInstant;
    }
    this.reveal( filteredInsertItems );
  };

  var _remove = proto.remove;
  proto.remove = function( elems ) {
    elems = utils.makeArray( elems );
    var removeItems = this.getItems( elems );
    // do regular thing
    _remove.call( this, elems );
    // bail if no items to remove
    var len = removeItems && removeItems.length;
    // remove elems from filteredItems
    for ( var i=0; len && i < len; i++ ) {
      var item = removeItems[i];
      // remove item from collection
      utils.removeFrom( this.filteredItems, item );
    }
  };

  proto.shuffle = function() {
    // update random sortData
    for ( var i=0; i < this.items.length; i++ ) {
      var item = this.items[i];
      item.sortData.random = Math.random();
    }
    this.options.sortBy = 'random';
    this._sort();
    this._layout();
  };

  /**
   * trigger fn without transition
   * kind of hacky to have this in the first place
   * @param {Function} fn
   * @param {Array} args
   * @returns ret
   * @private
   */
  proto._noTransition = function( fn, args ) {
    // save transitionDuration before disabling
    var transitionDuration = this.options.transitionDuration;
    // disable transition
    this.options.transitionDuration = 0;
    // do it
    var returnValue = fn.apply( this, args );
    // re-enable transition for reveal
    this.options.transitionDuration = transitionDuration;
    return returnValue;
  };

  // ----- helper methods ----- //

  /**
   * getter method for getting filtered item elements
   * @returns {Array} elems - collection of item elements
   */
  proto.getFilteredItemElements = function() {
    return this.filteredItems.map( function( item ) {
      return item.element;
    });
  };

  // -----  ----- //

  return Isotope;

}));

const all_char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
const digits = '1234567890';
const languages = {'en': 
                    { 'auto': 'Auto',
                      'invitation_data': 'Invitation number',
                      'error_country': 'Please, select the country of the document',
                      'error_vtype': 'Please, provide the type of the visa ( 1 symbol )',
                      'error_birth_country': 'Please, provide the country of birthday of the client',
                      'error_country_visa': 'Country of birth cannot be the same as country issued the visa',
                      'error_last_name': 'Please, provide the last name of the client',
                      'error_first_name': 'Please, provide the first name of the client',
                      'error_sex': 'Please, select the sex of the client',
                      'error_first_date': 'Please, provide the birthday date of the client',
                      'error_second_date': 'Please, provide the expiry date of the document',
                      'error_document_number': 'Please, provide the document number of the document',
                      'error_visa_number': 'Please, provide the VISA number',
                      'error_invitation_data': 'Please, provide the invitation number of the document',
                      'generate': 'Generate!',
                      'generated_b': 'Generated! Сheck telegram bot.',
                      'loading': 'Loading...',
                      'error': 'Unexpected error',
                      'format': 'Format',
                      'buy_label': 'Buy',
                      'text_buy_label': '<b>Attention!</b> You are generating barcodes for the template of the document showed above. Please, make sure that your have a right template or TEMPLATE_NAME from us.',
                      'light': ' Light',
                      'dark': '  Dark',
                      'new_generation': 'New generation!'
                    }, 
                   'cn': 
                    { 'auto': ' 汽车 ',
                      'invitation_data': '邀请函号码',
                      'error_country': '请选择文件的国家',
                      'error_vtype': '请提供签证类型（1个符号)',
                      'error_birth_country': '请提供客户的生日国家',
                      'error_country_visa': '出生国家不能与签发签证的国家相同',
                      'error_last_name': '请提供客户的姓氏',
                      'error_first_name': '请提供客户的名字',
                      'error_sex': '请选择客户的性别',
                      'error_first_date': '请提供客户的生日日期',
                      'error_second_date': '请提供文件的到期日期',
                      'error_document_number': '请提供文件的文件编号',
                      'error_visa_number': '请提供签证号码',
                      'error_invitation_data': '请提供文件的邀请号码',
                      'generate': '产生!',
                      'generated_b': '已生成! 请检查电报机器人',
                      'loading': '正在加载...',
                      'error': '意外的错误',
                      'format': '格式',
                      'buy_label': '购买',
                      'text_buy_label': '<b>注意！</b>您正在为所显示文档的模板生成条形码。请确保您拥有正确的模板或从我们这里TEMPLATE_NAME。',
                      'light': '     光',
                      'dark': '   黑暗的',
                      'new_generation': '新一代!'
                   },
                   'hi': 
                    { 'auto': 'ऑटो',
                      'invitation_data': 'आमंत्रण संख्या',
                      'error_country': 'कृपया, दस्तावेज़ का देश चुनें',
                      'error_vtype': 'कृपया वीज़ा का प्रकार बताएं (1 प्रतीक)',
                      'error_birth_country': 'कृपया, ग्राहक के जन्मदिन का देश प्रदान करें',
                      'error_country_visa': 'जन्म का देश वही नहीं हो सकता जिस देश ने वीज़ा जारी किया है',
                      'error_last_name': 'कृपया, ग्राहक का अंतिम नाम प्रदान करें',
                      'error_first_name': 'कृपया, क्लाइंट का पहला नाम प्रदान करें',
                      'error_sex': 'कृपया, ग्राहक के लिंग का चयन करें',
                      'error_first_date': 'कृपया, ग्राहक की जन्म तिथि प्रदान करें',
                      'error_second_date': 'कृपया, दस्तावेज़ की समाप्ति तिथि प्रदान करें',
                      'error_document_number': 'कृपया, दस्तावेज़ की दस्तावेज़ संख्या प्रदान करें',
                      'error_visa_number': 'कृपया, वीज़ा नंबर प्रदान करें',
                      'error_invitation_data': 'कृपया दस्तावेज़ का आमंत्रण क्रमांक प्रदान करें',
                      'generate': 'उत्पन्न!',
                      'generated_b': 'उत्पन्न! कृपया, टेलीग्राम बॉट की जाँच करें।',
                      'loading': 'लोड हो रहा है...',
                      'error': 'अप्रत्याशित त्रुटि',
                      'format': 'प्रारूप',
                      'buy_label': 'खरीदें',
                      'text_buy_label': '<b>ध्यान दें!</b> आप दिखाए गए दस्तावेज़ के टेम्पलेट के लिए बारकोड बना रहे हैं। कृपया, सुनिश्चित करें कि आपके पास सही टेम्पलेट है या हमसे TEMPLATE_NAME।',
                      'light': '   रोशनी',
                      'dark': '   अँधेरा',
                      'new_generation': 'नई पीढ़ी!'
                   },
                   'ru': 
                    { 'auto': 'Авто',
                      'invitation_data': 'Номер приглашения',
                      'error_country': 'Пожалуйста, выберите страну документа',
                      'error_vtype': 'Пожалуйста, предоставьте тип визы ( 1 символ )',
                      'error_birth_country': 'Пожалуйста, предоставьте страну рождения клиента',
                      'error_country_visa': 'Страна рождения не может быть равна стране которая выдала визу',
                      'error_last_name': 'Пожалуйста, предоставьте фамилию клиента',
                      'error_first_name': 'Пожалуйста, предоставьте имя клиента',
                      'error_sex': 'Пожалуйста, выберите пол клиента',
                      'error_first_date': 'Пожалуйста, предоставьте дату рождения клиента',
                      'error_second_date': 'Пожалуйста, предоставьте дату окончания действительности документа',
                      'error_document_number': 'Пожалуйста, предоставьте номер документа',
                      'error_visa_number': 'Пожалуйста, предоставьте номер визы',
                      'error_invitation_data': 'Пожалуйста, предоставьте номер приглашения для документа',
                      'generate': 'Сгенирировать!',
                      'generated_b': 'Сгенерировано! Проверьте телеграмм бота.',
                      'loading': 'Загрузка',
                      'error': 'Неожиданная ошибка',
                      'format': 'Формат',
                      'buy_label': 'Купить',
                      'text_buy_label': '<b>Внимание!</b> Вы генерируете штрихкоды для шаблона документа, показанного выше. Пожалуйста, убедитесь, что у вас правильный шаблон или TEMPLATE_NAME у нас.',
                      'light': 'Светлая',
                      'dark': 'Тёмная',
                      'new_generation': 'Новая генерация!'
                   },
                   'ua':
                    { 'auto': 'Авто',
                      'invitation_data': 'Номер запрошення',
                      'error_country': 'Оберіть, будь ласка, країну документу',
                      'error_vtype': 'Надайте, будь ласка, тип візи ( 1 символ )',
                      'error_birth_country': 'Надайте, будь ласка, країну народження клієнта',
                      'error_country_visa': 'Країна нарождения не може бути такою ж, як країна що видала візу',
                      'error_last_name': 'Надайте, будь ласка, призвище клієнта',
                      'error_first_name': 'Надайте, будь ласка, ім\'я клієнта',
                      'error_sex': 'Оберіть, будь ласка, стать клієнта',
                      'error_first_date': 'Надайте, будь ласка, дату народження клієнта',
                      'error_second_date': 'Надайте, будь ласка, термін придатності документу',
                      'error_document_number': 'Надайте, будь ласка, номер документу',
                      'error_visa_number': 'Надайте, будь ласка, номер візи',
                      'error_invitation_data': 'Надайте, будь ласка, номер запрошення документу',
                      'generate': 'Згенерувати!',
                      'generated_b': 'Згенеровано! Перевірте телеграм-бот.',
                      'loading': 'Завантаження...',
                      'error': 'Неочікувана помилка',
                      'format': 'Формат',
                      'buy_label': 'Купити',
                      'text_buy_label': '<b>Увага!</b> Ви генеруєте штрих-коди для шаблону документа, що показоно вище. Будь ласка, переконайтеся, що у вас є правильний шаблон, або TEMPLATE_NAME у нас.',
                      'light': 'Світла',
                      'dark': ' Темна',
                      'new_generation': 'Нова генерація!'
                    },
                  }


var country = '';


function new_toggleThemeColor() {
  var body = document.getElementById("body");
  if ( body.className == 'dark-mode') {
    body.className = "dark-mode"  == "light-mode" ? "dark-mode" : "light-mode";
  } else {
    body.className = "light-mode"  == "light-mode" ? "dark-mode" : "dark-mode";
  }
}


function toggleLight() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "dark-mode" ? "light-mode" : "light-mode";
}

function toggleDark() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "light-mode" ? "dark-mode" : "dark-mode";
}

$(".ld-mode > .btn").click(function(){
  $(".ld-mode > .btn").removeClass("active");
  $(this).addClass("active");
});

function makestr(length, what) {
    let result = '';
    const charactersLength = what.length;
    let counter = 0;
    while (counter < length) {
      result += what.charAt(Math.floor(Math.random() * charactersLength));
      counter += 1;
    }
    return result;
}

function delete_error() {
  for (var i = 0; i < document.getElementsByClassName('form_error').length; i++) {
    document.getElementsByClassName('form_error')[i].style.display = 'none';
  }
}


function change_lan(language) {
  active_language = language;
  switch(language) {  
    case 'en': 
      document.getElementById("div_with_copy").innerHTML = 'Copied!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Light';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Dark';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Please, pay attention that this is test form. For getting barcodes you required to have active subscription. You can <a href="https://t.me/pdf417mrz_bot">buy subscription</a> directly in bot.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Select Language';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Language';
      }
      document.getElementById("country_selector").innerHTML = 'Country';
      document.getElementById("country_option").innerHTML = 'Select country';
      document.getElementById("vtype_label").innerHTML = 'Visa type';
      document.getElementById("country_birth_selector").innerHTML = 'Country of birth';
      document.getElementById("lname_label").innerHTML = 'Last name';
      document.getElementById("fname_label").innerHTML = 'First name';
      document.getElementById("mname_label").innerHTML = 'Middle name';
      document.getElementById("sex_selector").innerHTML = 'Sex';
      document.getElementById("sex_option").innerHTML = 'Select sex';
      document.getElementById("u_option").innerHTML = 'Unknown';
      document.getElementById("m_option").innerHTML = 'Male';
      document.getElementById("f_option").innerHTML = 'Female';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Format: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Birthday date';
      document.getElementById("expiry_selector").innerHTML = 'Expiry date';
      document.getElementById("number_selector").innerHTML = 'Document number';
      document.getElementById("visa_number").innerHTML = 'Visa number';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Auto';
      } 
      document.getElementById("final_button").innerHTML = 'Generate!';
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Clear form!';
      }
      if( document.getElementById("invitation_selector") != null ) {
        document.getElementById("invitation_selector").innerHTML = 'Invitation number';
      }
    break;
    case 'cn':
      document.getElementById("div_with_copy").innerHTML = '复制了!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = '光';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '黑暗的';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = '请注意，这是测试表格。 要获取条形码，您需要有效订阅。 您可以直接在机器人中<a href="https://t.me/pdf417mrz_bot">购买订阅</a>。';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = '选择语言';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = '语言';
      }
      document.getElementById("country_selector").innerHTML = '国家';
      document.getElementById("country_option").innerHTML = '选择国家';
      document.getElementById("vtype_label").innerHTML = '签证类型';
      document.getElementById("country_birth_selector").innerHTML = '出生国';
      document.getElementById("lname_label").innerHTML = '姓';
      document.getElementById("fname_label").innerHTML = '名';
      document.getElementById("mname_label").innerHTML = '中间名字';
      document.getElementById("sex_selector").innerHTML = '性别';
      document.getElementById("sex_option").innerHTML = '选择性别';
      document.getElementById("u_option").innerHTML = '未知';
      document.getElementById("m_option").innerHTML = '男性';
      document.getElementById("f_option").innerHTML = '女性';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = '格式: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = '生日日期';
      document.getElementById("expiry_selector").innerHTML = '到期日';
      document.getElementById("number_selector").innerHTML = '文件号码';
      document.getElementById("visa_number").innerHTML = '签证号码';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = '汽车';
      } 
      document.getElementById("final_button").innerHTML = '产生';
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = '表格清晰!';
      }
      if( document.getElementById("invitation_selector") != null ) {
        document.getElementById("invitation_selector").innerHTML = '邀请函号码';
      }
    break;
    case 'hi':
      document.getElementById("div_with_copy").innerHTML = 'नकल की गई!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'रोशनी';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'अँधेरा';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'कृपया ध्यान दें कि यह परीक्षण प्रपत्र है। बारकोड प्राप्त करने के लिए आपके पास सक्रिय सदस्यता होना आवश्यक है। आप सीधे बॉट में <a href="https://t.me/pdf417mrz_bot">सदस्यता खरीद सकते हैं</a>।';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'भाषा चुने';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'भाषा';
      } 
      document.getElementById("country_selector").innerHTML = 'देश'; 
      document.getElementById("country_option").innerHTML = 'देश चुनें';
      document.getElementById("vtype_label").innerHTML = 'वीजा का प्रकार';
      document.getElementById("country_birth_selector").innerHTML = 'जन्म का देश';
      document.getElementById("lname_label").innerHTML = 'उपनाम';
      document.getElementById("fname_label").innerHTML = 'पहला नाम';
      document.getElementById("mname_label").innerHTML = 'मध्य नाम';
      document.getElementById("sex_selector").innerHTML = 'लिंग';
      document.getElementById("sex_option").innerHTML = 'लिंग का चयन करें';
      document.getElementById("u_option").innerHTML = 'अज्ञात';
      document.getElementById("m_option").innerHTML = 'नर';
      document.getElementById("f_option").innerHTML = 'महिला';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'प्रारूप: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'जन्मदिन की तारीख';
      document.getElementById("expiry_selector").innerHTML = 'समाप्ति तिथि';
      document.getElementById("number_selector").innerHTML = 'दस्तावेज़ संख्या';
      document.getElementById("visa_number").innerHTML = 'वीज़ा संख्या';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'ऑटो';
      } 
      document.getElementById("final_button").innerHTML = 'बनाना!';
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'स्पष्ट प्रपत्र!';
      }  
      if( document.getElementById("invitation_selector") != null ) {
        document.getElementById("invitation_selector").innerHTML = 'आमंत्रण संख्या';
      }
    break;     
    case 'ru':
      document.getElementById("div_with_copy").innerHTML = 'Скопировано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Светлая';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Тёмная';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Обратите внимание, что это тестовая форма. Для получения штрих-кодов необходима активная подписка. Вы можете <a href="https://t.me/pdf417mrz_bot">купить подписку</a> прямо в боте.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Выбрать язык';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Язык';
      }
      document.getElementById("country_selector").innerHTML = 'Страна';
      document.getElementById("country_option").innerHTML = 'Выбрать страну';
      document.getElementById("vtype_label").innerHTML = 'Тип визы';
      document.getElementById("country_birth_selector").innerHTML = 'Страна рождения';
      document.getElementById("lname_label").innerHTML = 'Фамилия';
      document.getElementById("fname_label").innerHTML = 'Имя';
      document.getElementById("mname_label").innerHTML = 'Отчество'; 
      document.getElementById("sex_selector").innerHTML = 'Пол';
      document.getElementById("sex_option").innerHTML = 'Выбрать пол';
      document.getElementById("u_option").innerHTML = 'Неизвестно';
      document.getElementById("m_option").innerHTML = 'Мужчина';
      document.getElementById("f_option").innerHTML = 'Женщина';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата рождения';
      document.getElementById("expiry_selector").innerHTML = 'Дата истечения срока действия';
      document.getElementById("number_selector").innerHTML = 'Номер документа';
      document.getElementById("visa_number").innerHTML = 'Номер визы';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      } 
      document.getElementById("final_button").innerHTML = 'Сгенерировать!';
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистить форму!';
      }
      if( document.getElementById("invitation_selector") != null ) {
        document.getElementById("invitation_selector").innerHTML = 'Номер приглашения';
      }
    break;
    case 'ua':
      document.getElementById("div_with_copy").innerHTML = 'Скопійовано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Світла';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Темна';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Зверніть увагу, що це тестова форма. Для отримання штрих-кодів вам потрібна активна підписка. Ви можете <a href="https://t.me/pdf417mrz_bot">купити підписку</a> безпосередньо в боті.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Обрати мову';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Мова';
      }
      document.getElementById("country_selector").innerHTML = 'Країна';
      document.getElementById("country_option").innerHTML = 'Обрати країну';
      document.getElementById("vtype_label").innerHTML = 'Тип візи';
      document.getElementById("country_birth_selector").innerHTML = 'Країна нарождения';
      document.getElementById("lname_label").innerHTML = 'Призвище';
      document.getElementById("fname_label").innerHTML = 'Ім\'я';
      document.getElementById("mname_label").innerHTML = 'По-батькові';
      document.getElementById("sex_selector").innerHTML = 'Стать';
      document.getElementById("sex_option").innerHTML = 'Обрати стать';
      document.getElementById("u_option").innerHTML = 'Невідомо';
      document.getElementById("m_option").innerHTML = 'Чоловік';
      document.getElementById("f_option").innerHTML = 'Жінка';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата народження';
      document.getElementById("expiry_selector").innerHTML = 'Термін придатності';
      document.getElementById("number_selector").innerHTML = 'Номер документу';
      document.getElementById("visa_number").innerHTML = 'Номер візи';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      }
      document.getElementById("final_button").innerHTML = 'Згенерувати!';
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистити форму!';
      }
      if( document.getElementById("invitation_selector") != null ) {
        document.getElementById("invitation_selector").innerHTML = 'Номер запрошення';
      }
    break;   
  }

  var all_objects = document.getElementsByClassName('current_link');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].classList.remove("current_link");
  }

  if ( !generate_link.includes(" AND ") ) {
    document.getElementById("lang_"+language).classList.add("current_link");
  }

}

var generate_link = document.getElementById("act_generate").innerHTML;
var user_form = document.getElementById("user_form").innerHTML;

var active_language = document.getElementById("act_lang").innerHTML;
    change_lan(active_language);
    if( document.getElementById("lang") != null ) {
      document.getElementById("lang").value = active_language;
    }

function birth_country_keyup( birthday_country ) {
  var length = birthday_country.length;
  if( length > 3 ) {
    document.getElementById("country_of_birthday").value = birthday_country.substring(0,3).toUpperCase(); 
  } else {
    var last_letter = birthday_country.substring(length - 1, length);
     if ( last_letter.match(/[a-z]/i) ) {    
       document.getElementById("country_of_birthday").value = birthday_country.substring(0,length - 1) + last_letter.toUpperCase();
     }  
  }
}

function bd_onkeyup(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {

    if ( elem_length == 1 && last_char != 1  && last_char != 0) {
      document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value + '/';
    } else if ( elem_length == 2 ) {
      var elem_month = parseInt(elem.value.substring(0,2));
      if ( elem_month >= 0 && elem_month <= 12) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = '';
      }
    } else if ( elem_length == 5 ) {

      var elem_day = parseInt(elem.value.substring(3,5));
      var elem_month = parseInt(elem.value.substring(0,2));

      if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3);
      }

    } else if ( elem_length == 10 ) {
      document.getElementById('edate').focus();
    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }

  } else if ( elem_length == 5 && e.which == 191  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3) + '0' + document.getElementById(elem.id).value.substring(3,4) + '/';
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } 
 
}

function bd_onkeyup_eur(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 2 ) {
      var elem_day = parseInt(elem.value.substring(0,2));
      if ( elem_day > 31 ) {
        document.getElementById(elem.id).value = prev_value;
      }
    } else if ( elem_length == 3 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 5 ) {

      var elem_day = parseInt(elem.value.substring(0,2));
      var elem_month = parseInt(elem.value.substring(3,5));

      if ( elem_month > 12 || elem_month < 1 ) {
        document.getElementById(elem.id).value = prev_value;
      } else if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '.';
        }
      } else {
        document.getElementById(elem.id).value = prev_value;
      }

    } else if ( elem_length == 6 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 10 ) {

      document.getElementById('edate').focus();

    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }

  } else if ( elem_length == 2 && e.which == 190  ) {
    document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value.substring(0,1) + '.';
  } else if ( elem_length == 3 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value;
  } else if ( elem_length == 5 && e.which == 190  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,2) + '.0' + document.getElementById(elem.id).value.substring(3,4) + '.';
    
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 6 && e.which == 190 ) {
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.0' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    document.getElementById('edate').focus();
  } else if ( elem_length > 10 ) {
    document.getElementById(elem.id).value = '';
  }
 
}

function change_date_format() {

  if ( format_type == 'USA' ) {
    format_type = 'EUR';
    document.getElementById('bdate').placeholder='DD.MM.YYYY';
    document.getElementById('edate').placeholder='DD.MM.YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
  } else {
    format_type = 'USA'; 
    document.getElementById('bdate').placeholder='MM/DD/YYYY';
    document.getElementById('edate').placeholder='MM/DD/YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event)');
  }

  for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
    document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
  }

  if ( document.getElementById('bdate').value.length != 10 ) {
    document.getElementById('bdate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "/" + document.getElementById('bdate').value.substring(0,2)  + "/" + document.getElementById('bdate').value.substring(6,10);
      } else {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "." + document.getElementById('bdate').value.substring(0,2)  + "." + document.getElementById('bdate').value.substring(6,10);
      }
    } else {
      document.getElementById('bdate').value = '';
    }

  }

  if ( document.getElementById('edate').value.length != 10 ) {
    document.getElementById('edate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('edate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('edate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('edate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "/" + document.getElementById('edate').value.substring(0,2)  + "/" + document.getElementById('edate').value.substring(6,10);
      } else {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "." + document.getElementById('edate').value.substring(0,2)  + "." + document.getElementById('edate').value.substring(6,10);
      }
    } else {
      document.getElementById('edate').value = '';
    }

  }

}

var format_type = document.getElementById("date_format_u").innerHTML;

if ( format_type == 'USA' ) {
  document.getElementById('bdate').onclick ='MM/DD/YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event);');
  document.getElementById('edate').placeholder='MM/DD/YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event);');

} else {
  document.getElementById('bdate').placeholder='DD.MM.YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
  document.getElementById('edate').placeholder='DD.MM.YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
}

for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
  document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
}

function randomDate(start, end) {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

function addYears(date, years) {
  date.setFullYear(date.getFullYear() + years);

  return date;
}

function generate_bdate() {
  var bd = randomDate(new Date(1945, 0, 1), new Date(2006, 0, 1));

  var bgenday = String(bd.getDate());
  if (bgenday.length == 1 ) {
    bgenday = "0" + bgenday;
  }

  var bgenmonth = String(bd.getMonth() + 1);
  if (bgenmonth.length == 1 ) {
    bgenmonth = "0" + bgenmonth;
  }

  var bgenyear = String(bd.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('bdate').value= bgenmonth + '/' + bgenday + '/' + bgenyear;
  } else {
    document.getElementById('bdate').value= bgenday + '.' + bgenmonth + '.' + bgenyear;
  }

}

function generate_edate() {
  var enddate = addYears(new Date(), 4);
  var ed = randomDate(new Date(), enddate);

  var egenday = String(ed.getDate());
  if (egenday.length == 1 ) {
    egenday = "0" + egenday;
  }

  var egenmonth = String(ed.getMonth() + 1);
  if (egenmonth.length == 1 ) {
    egenmonth = "0" + egenmonth;
  }

  var egenyear = String(ed.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('edate').value= egenmonth + '/' + egenday + '/' + egenyear;
  } else {
    document.getElementById('edate').value= egenday + '.' + egenmonth + '.' + egenyear;
  }

}

if (  generate_link.includes(" AND ") ) {
  var country_selection = generate_link.split(' AND ')[0];
  document.getElementById("country").value = country_selection;
  select_country(country_selection);
  document.getElementById("country").disabled = true;
} 

function select_country(selection) {
  switch(active_language) {
    case 'cn':
      document.getElementById("country_of_birthday").value = 'CHN';
    break;
    case 'hi':
      document.getElementById("country_of_birthday").value = 'IND';
    break;
    case 'ru':
      document.getElementById("country_of_birthday").value = 'RUS';
    break;
    case 'ua':
      document.getElementById("country_of_birthday").value = 'UKR';
    break;
    default:
      document.getElementById("country_of_birthday").value = 'FRA';
    break;
  }
  country = selection;
  switch (selection) {
    case 'USA':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'AUS':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'AUT':
      document.getElementById("add_data_html").innerHTML = '';
    break;    
    case 'BGR':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'CAN':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'CHN':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'HRV':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'CYP':
      document.getElementById("add_data_html").innerHTML = '';
    break;  
    case 'CZE':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'DNK':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'EST':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'FIN':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'FRA':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'DEU':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'GRC':
      document.getElementById("add_data_html").innerHTML = '';
    break;    
    case 'IND':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'IRL':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'ITA':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'HUN':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'LTU':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'LVA':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'LUX':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'MLT':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'MEX':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'NLD':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'POL':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'PRT':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'ROU':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'RUS':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="invitation_selector">'+languages[active_language]['invitation_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="invitation_data" onclick="invitation_number_copy(event)"></label><button type="button" id="inv_data_gen_b" class="gen_button" onclick="generate_invitation();">'+languages[active_language]['auto']+'</button></div>';
    break;
    case 'SVK':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'SVN':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'ESP':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'SWE':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'TUR':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'THA':
      document.getElementById("add_data_html").innerHTML = '';
    break;
    case 'GBR':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
    case 'VNM':
      document.getElementById("add_data_html").innerHTML = '';
    break; 
  }
}

function generate_document() {

  if ( document.getElementById("country_of_birthday").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_birth_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country_of_birthday").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("country_of_birthday").value == document.getElementById("country").value ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country_visa'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country_of_birthday").focus();
    setTimeout(delete_error, 3000);   
    return;
  }

  var country_of_birth = document.getElementById("country_of_birthday").value;
  switch (country_of_birth) {
    case 'USA':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'ARM':
      document.getElementById("doc_number").value = 'A' + makestr(1, letters) + makestr(7, digits);
    break;
    case 'AUS':
      document.getElementById("doc_number").value = 'PA' + makestr(7, digits);
    break;
    case 'AUT':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'BGD':
      document.getElementById("doc_number").value = 'BN' + makestr(7, digits);
    break;
    case 'BLR':
      document.getElementById("doc_number").value = 'KB' + makestr(7, digits);
    break;
    case 'BEL':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'BRA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'BGR':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'CAN':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'CMR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'CHN':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'HRV':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'CZE':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'DNK':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'DOM':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'EGY':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(8, digits);
    break; 
    case 'EST':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;            
    case 'FIN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'FRA':
      document.getElementById("doc_number").value = makestr(2, digits) + makestr(2, letters) + makestr(5, digits);
    break;
    case 'GEO':
      document.getElementById("doc_number").value = makestr(2, digits) + makestr(2, letters) + makestr(5, digits);
    break;
    case 'DEU':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(1, digits) + makestr(3, letters) + makestr(2, digits) + makestr(2, letters);
    break;
    case 'GRC':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'IND':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(7, digits);
    break;
    case 'IRE':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(7, digits);
    break;
    case 'ISR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'ITA':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'HUN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'KAZ':
      document.getElementById("doc_number").value = makestr(1, letters) +  makestr(8, digits);
    break;
    case 'KEN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'KGZ':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break; 
    case 'LVA':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;               
    case 'LTU':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'MLT':
      document.getElementById("doc_number").value = makestr(7, digits);
    break;
    case 'MEX':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'MDA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'NLD':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(3, digits) + makestr(2, letters) + makestr(2, digits);
    break;
    case 'NOR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'POL':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'PRT':
      document.getElementById("doc_number").value = makestr(7, digits);
    break;
    case 'ROU':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'RUS':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;       
    case 'SRB':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'SGP':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits) + makestr(1, letters);
    break;
    case 'SVN':
      document.getElementById("doc_number").value = "P" + makestr(1, letters) + makestr(7, digits);
    break;
    case 'ZAF':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'ESP':
      document.getElementById("doc_number").value = 'P' + makestr(2, letters) + makestr(6, digits);
    break;
    case 'SWE':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'CHE':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'TKM':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'UKR':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(6, digits);
    break;
    case 'GBR':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;            
    case 'UZB':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'VEN':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'VNM':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break; 
    default:
      document.getElementById("doc_number").value = makestr(9, digits);
    break;     
  } 
}


function document_number_copy(e) {
  if( document.getElementById("doc_number").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("doc_number").focus();
    document.getElementById("doc_number").select();

    navigator.clipboard.writeText(document.getElementById("doc_number").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_visa() {
  if ( document.getElementById("country").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);   
    return;
  }

  switch (country) {    
    case 'USA':
      document.getElementById("visa_number_inp").value = makestr(1, letters) + makestr(1, digits) + makestr(3, letters) + makestr(1, digits) + '00' + makestr(2, letters) + makestr(6, digits);
    break;
    case 'AUT':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'BGR':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'HRV':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'CYP':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'CZE':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'DNK':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'EST':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'FIN':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'FRA':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'DEU':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'GRC':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'HUN':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'IRL':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'ITA':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'LVA':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'LTU':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'LUX':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'MLT':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'NLD':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'POL':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'PRT':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'ROU':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'SVK':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'SVN':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'ESP':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'SWE':
      document.getElementById("visa_number_inp").value = "M" + makestr(6, digits);
    break;
    case 'AUS':
      document.getElementById("visa_number_inp").value = makestr(1, letters) + makestr(11, digits) + " AS " + makestr(3, digits);
    break;
    case 'IDN':
      document.getElementById("visa_number_inp").value = "0" + makestr(1, digits);
    break;
    case 'CHN':     
      if ( document.getElementById("country_of_birthday").value.length != 3 ) {       
        document.getElementById("error_one").innerHTML = languages[active_language]['error_birth_country'];
        document.getElementById("error_one").style.display = 'block';
        document.getElementById("country_of_birthday").focus();
        setTimeout(delete_error, 3000);   
        return;
      } 

      document.getElementById("visa_number_inp").value = makestr(4, all_char) + document.getElementById("country_of_birthday").value + makestr(2, letters) + makestr(1, digits) + makestr(4, letters) + makestr(2, digits);
    break;
    break;
    case 'CAN':
      document.getElementById("visa_number_inp").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'GBR':
      document.getElementById("visa_number_inp").value = "<<<<<<<<";
    break;
    case 'MEX':
      document.getElementById("visa_number_inp").value = "<<<<<<<<";
    break;
    case 'RUS':
      if ( document.getElementById("country_of_birthday").value.length != 3 ) {       
        document.getElementById("error_one").innerHTML = languages[active_language]['error_birth_country'];
        document.getElementById("error_one").style.display = 'block';
        document.getElementById("country_of_birthday").focus();
        setTimeout(delete_error, 3000);   
        return;
      } 

      document.getElementById("visa_number_inp").value = document.getElementById("country_of_birthday").value + makestr(6, digits);;
    break;
    case 'TUR':
      document.getElementById("visa_number_inp").value = makestr(1, digits);
    break;
    case 'THA':
      document.getElementById("visa_number_inp").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'VNM':
      document.getElementById("visa_number_inp").value = makestr(1, letters) + makestr(7, digits);
    break;
  }

}


function visa_number_copy(e) {
  if( document.getElementById("visa_number_inp").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("visa_number_inp").focus();
    document.getElementById("visa_number_inp").select();

    navigator.clipboard.writeText(document.getElementById("visa_number_inp").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_invitation() {
  switch (country) {    
    case 'RUS':
      document.getElementById("invitation_data").value = makestr(1, digits) + makestr(1, letters) + makestr(7, digits);
    break;
  }
}


function invitation_number_copy(e) {
  if( document.getElementById("invitation_data").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("invitation_data").focus();
    document.getElementById("invitation_data").select();

    navigator.clipboard.writeText(document.getElementById("invitation_data").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function reset_form() {
  document.getElementById("true_good_form").reset();
  document.getElementById("add_data_html").innerHTML = '';
  if ( document.getElementById("final_button").disabled ) {
    document.getElementById("final_button").classList.add('generate_button');
    document.getElementById("final_button").classList.remove('stopped_button');
    document.getElementById("final_button").disabled = false;
    document.getElementById("final_button").innerHTML = languages[active_language]['generate']; 
  }
  document.getElementById("lang").value = active_language;
}


function generate(generation_type) {
  if ( document.getElementById("country").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("vtype").value.length != 1 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_vtype'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("vtype").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("country_of_birthday").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_birth_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country_of_birthday").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("country_of_birthday").value == document.getElementById("country").value ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country_visa'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country_of_birthday").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("lname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_last_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("lname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("fname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_first_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("fname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("sex").value.length != 1 ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_sex'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("sex").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("bdate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("bdate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("edate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("edate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("doc_number").value.length <= 0  ) {
    document.getElementById("error_four").innerHTML = languages[active_language]['error_document_number'];
    document.getElementById("error_four").style.display = 'block';
    document.getElementById("doc_number").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("visa_number_inp").value.length <= 0  ) {
    document.getElementById("error_four").innerHTML = languages[active_language]['error_visa_number'];
    document.getElementById("error_four").style.display = 'block';
    document.getElementById("visa_number_inp").focus();
    setTimeout(delete_error, 3000);
    return;      
  }  

  if ( country == 'RUS'  ) {
    if ( document.getElementById("invitation_data").value.length <= 0  ) {
      document.getElementById("error_four").innerHTML = languages[active_language]['error_invitation_data'];
      document.getElementById("error_four").style.display = 'block';
      document.getElementById("invitation_data").focus();
      setTimeout(delete_error, 3000);
      return;      
    }    
  }

  var country_ed = document.getElementById("country").value;
  var visa_type_ed = document.getElementById("vtype").value;
  var lname_ed = document.getElementById("lname").value.toUpperCase().replaceAll(' ', '');
  var name = document.getElementById("fname").value.toUpperCase().replaceAll(' ', '');
    if ( document.getElementById("mname").value.length > 0 ) {
      name += ' '+document.getElementById("mname").value.toUpperCase().replaceAll(' ', '');
    }
  var doc_num_ed = document.getElementById("doc_number").value;
  var birthday_country_ed = document.getElementById("country_of_birthday").value;
  if ( format_type == 'USA' ) {
    var bdate_ed = document.getElementById("bdate").value;
  } else {
    var bdate_ed = document.getElementById("bdate").value.substring(3,5) + '/' + document.getElementById("bdate").value.substring(0,2) + '/' + document.getElementById("bdate").value.substring(6,10);
  }
  var sex_ed = document.getElementById("sex").value;
  if ( format_type == 'USA' ) {
    var edate_ed = document.getElementById("edate").value;
  } else {
    var edate_ed = document.getElementById("edate").value.substring(3,5) + '/' + document.getElementById("edate").value.substring(0,2) + '/' + document.getElementById("edate").value.substring(6,10);
  }  
  var visa_num_ed = document.getElementById("visa_number_inp").value;

  var final_line = country_ed + ';' + visa_type_ed + ';' + lname_ed + ';' + name + ';' + doc_num_ed + ';' + birthday_country_ed + ';' + bdate_ed + ';' + sex_ed + ';' + edate_ed + ';' + visa_num_ed;
  
  if ( country == 'RUS'  ) {
    final_line += ';' + document.getElementById("invitation_data").value;
  } 

  final_line += ';' + format_type;

  if ( generation_type == 1 ) { 


    var send_http = new XMLHttpRequest();
    var params = 'user_form='+user_form+'&params='+final_line;

        send_http.open('POST', generate_link, true);
        send_http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        send_http.onreadystatechange = function() {
        if(send_http.readyState == 4 && send_http.status == 200) {
        var result_data = JSON.parse(send_http.responseText);
               
        switch (result_data.type) {
          case 1:
            document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
          break;
          default:
            document.getElementById("final_button").innerHTML = result_data.type + ' - ' +languages[active_language]['error']; 
          break;
          }

        }
        };

        send_http.send(params);  
   
    
        document.getElementById("final_button").classList.add('stopped_button');
        document.getElementById("final_button").classList.remove('generate_button');

        document.getElementById("final_button").disabled = true;
        document.getElementById("final_button").innerHTML = languages[active_language]['loading'];

  } else {
    window.location.href = "https://t.me/pdf417mrz_bot";
  }
  
}function add_to_cart(handle) {

    var cart_item_numbers = Number(document.getElementById("cart_itms").innerHTML) +1;

    document.getElementById("cart_itms").innerHTML = cart_item_numbers.toString(); 

    document.getElementById("added_button").style.display = "block";

    document.getElementById("buy_button").style.innerHTML = "";
    document.getElementById("buy_button").style.display = "none";

    var actual_cart = getCookie('my_cart');
    if ( actual_cart  == '' ){
      document.cookie = "my_cart="+handle+";path=/";
      var new_link = "/";
      if ( document.documentElement.lang != 'en'  ) {
        new_link += document.documentElement.lang+"/";
      }
      new_link += 'cart';
      document.getElementById("cart_link").setAttribute("href", new_link);
    } else {
      if (!actual_cart.includes(handle)) {
        var actual_cart_array = actual_cart.split('_');
        actual_cart_array.push(handle);
        document.cookie = "my_cart="+actual_cart_array.join('_')+";path=/";
      }
    }

}

function start_cart() {



  var last_symbol = window.location.href.substring(window.location.href.length - 1, window.location.href.length);
  if ( last_symbol == '/' ) {
    var str_of_destination = window.location.href.substring(0, window.location.href.length - 1);
  } else {
    var str_of_destination = window.location.href.substring(0, window.location.href.length);
  }

  var psd_template = str_of_destination.split("/")[str_of_destination.split("/").length - 1];
  var actual_cart = getCookie('my_cart');

  var elem_cart = document.getElementById("cart_link")

  if ( actual_cart  != '' ) {

    var new_link = "/";
    if ( document.documentElement.lang != 'en'  ) {
      new_link += document.documentElement.lang+"/";
    }
    new_link += 'cart';
    elem_cart.setAttribute("href", new_link);

    var qty_cart = actual_cart.split('_').length;
    document.getElementById("cart_itms").innerHTML = qty_cart.toString(); 

    if (actual_cart.includes(psd_template) && psd_template != '' ) {

      document.getElementById("added_button").style.display = "block";

      document.getElementById("buy_button").style.innerHTML = "";
      document.getElementById("buy_button").style.display = "none";

    }

  }

}

start_cart();      var monthName = [
        "", "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
      ];

      var monthArray1_WA = ["", "B", "C", "D", "J", "K", "L", "M", "N", "O", "P", "Q", "R"];
      var monthArray2_WA = ["", "S", "T", "U", "1", "2", "3", "4", "5", "6", "7", "8", "9"]; 
      var dayArray_WA = ["", "A", "B", "C", "D", "E", "F", "G", "H", "Z", "S", "J",
                         "K", "L", "M", "N", "W", "P", "Q", "R", "0", "1", "2", "3",
                         "4", "5", "6", "7", "8", "9", "T", "U"];

      var firstName_NJ = [
        ['AARON', '000'],
        ['ABIR', '004'],
        ['ABRAHAM', '005'],
        ['ADRIAN', '011'],
        ['ALAN', '015'],
        ['ALBERTO', '017'],
        ['ALEXANDER', '019'],
        ['ALLEN', '027'],
        ['ANDREW', '042'],
        ['ANDY', '043'],
        ['ANGELA', '043'],
        ['ANNA', '047'],
        ['ANNETTE', '050'],
        ['ANTHONY', '053'],
        ['ARIEL', '058'],
        ['BARBARA', '073'],
        ['BERNICE', '085'],
        ['BESMIR', '088'],
        ['BHARAT', '093'],
        ['BONNIE', '094'],
        ['BRIAN', '096'],
        ['BYRON', '104'],
        ['CAMDEN', '109'],
        ['CAROL', '113'],
        ['CATHERINE', '115'],
        ['CHAD', '120'],
        ['CHARLES', '120'],
        ['CHAYA', '122'],
        ['CHOO', '124'],
        ['CHRISTINA', '124'],
        ['CHRISTOPHER', '124'],
        ['CLAIRE', '126'],
        ['CLYDE', '133'],
        ['COLLEEN', '134'],
        ['CYNTHIA', '144'],
        ['DANIEL', '153'],
        ['DARREN', '156'],
        ['DAVID', '156'],
        ['DAWN', '157'],
        ['DEBORAH', '158'],
        ['DENISE', '162'],
        ['DENNIS', '163'],
        ['DIANE', '167'],
        ['DINAH', '169'],
        ['DOMINIC', '172'],
        ['DONALD', '173'],
        ['DONNA', '174'],
        ['DOROTHY', '178'],
        ['DUSTIN', '184'],
        ['DYLAN', '185'],
        ['EDMOND', '190'],
        ['EDWARD', '192'],
        ['EDWIN', '193'],
        ['EILEEN', '197'],
        ['ELIZABETH', '212'],
        ['EMILY', '224'],
        ['ERIC', '232'],
        ['ESTHER', '239'],
        ['EVA', '250'],
        ['FRANKLIN', '267'],
        ['GABRIEL', '270'],
        ['GARY', '274'],
        ['GENEVA', '276'],
        ['GERARD', '279'],
        ['GINA', '288'],
        ['GLENN', '292'],
        ['GORDON', '297'],
        ['GUSTAVO', '308'],
        ['HARRY', '316'],
        ['HAZEL', '319'],
        ['HEATHER', '320'],
        ['HYOSOON', '353'],
        ['IRA', '364'],
        ['ISHA', '374'],
        ['ISMAEL', '375'],
        ['IVONNE', '378'],
        ['JACK', '380'],
        ['JACLYN', '381'],
        ['JAMES', '383'],
        ['JANET', '384'],
        ['JASON', '388'],
        ['JAY', '390'],
        ['JAZMINE', '392'],
        ['JEANNE', '392'],
        ['JEFFREY', '393'],
        ['JENNIFER', '395'],
        ['JEROME', '396'],
        ['JERYL', '400'],
        ['JESSICA', '400'],
        ['JOANNE', '402'],
        ['JOHN', '407'],
        ['JONATHAN', '409'],
        ['JORDAN', '410'],
        ['JOSEPH', '410'],
        ['JOSHUA', '411'],
        ['JOYCE', '414'],
        ['JUAN', '415'],
        ['JUDITH', '417'],
        ['JULIAN', '420'],
        ['JUNG', '422'],
        ['KALPANA', '424'],
        ['KAMINI', '424'],
        ['KAREN', '424'],
        ['KARL', '424'],
        ['KATHERINE', '427'],
        ['KATHLEEN', '427'],
        ['KAYLEE', '429'],
        ['KENNETH', '431'],
        ['KEISHIA', '432'],
        ['KEVIN', '433'],
        ['KIERAN', '434'],
        ['KIMBERLY', '435'],
        ['KRISTIE', '437'],
        ['KRISTINA', '437'],
        ['KYLE', '438'],
        ['LAUREN', '443'],
        ['LANA', '456'],
        ['LEVARN', '465'],
        ['LI', '467'],
        ['LIAM', '467'],
        ['LILI', '469'],
        ['LOIS', '481'],
        ['LOREN', '484'],
        ['LORRAINE', '487'],
        ['LUCIE', '490'],
        ['LYNN', '500'],
        ['MACKENZ', '503'],
        ['MAHESH', '509'],
        ['MAIASIA', '510'],
        ['MARCI', '517'],
        ['MARGARET', '518'],
        ['MARIA', '519'],
        ['MARISA', '519'],
        ['MARK', '521'],
        ['MARY', '527'],
        ['MASSIMO', '528'],
        ['MATTHEW', '529'],
        ['MAURICE', '531'],
        ['MEDORA', '537'],
        ['MEGHAN', '537'],
        ['MICHAEL', '544'],
        ['MILAGROS', '547'],
        ['MILDRED', '547'],
        ['MISHEL', '549'],
        ['NANCY', '557'],
        ['NEELA', '584'],
        ['NICHOLAS', '590'],
        ['NICOLE', '591'],
        ['NIDHI', '591'],
        ['NILABEN', '592'],
        ['NIRMAL', '594'],
        ['NOAH', '594'],
        ['PATRICE', '617'],
        ['PATRICK', '617'],
        ['PETER', '625'],
        ['PHYLLIS', '629'],
        ['PIETRO', '630'],
        ['POOJA', '632'],
        ['RANDOLPH', '640'],
        ['RASHMI', '642'],
        ['RAYMOND', '643'],
        ['REBECCA', '645'],
        ['RENA', '647'],
        ['RICHARD', '655'],
        ['RITESH', '658'],
        ['ROBERT', '658'],
        ['ROBIN', '659'],
        ['ROGER', '664'],
        ['ROLANDA', '665'],
        ['RONALD', '668'],
        ['ROSINA', '672'],
        ['RUTH', '681'],
        ['RYAN', '682'],
        ['SANKET', '691'],
        ['SAPAN', '691'],
        ['SARA', '691'],
        ['SCHUYLER', '693'],
        ['SEAN', '695'],
        ['SHARON', '703'],
        ['SHAYNE', '704'],
        ['SHELLEY', '705'],
        ['SMITA', '717'],
        ['SONAK', '718'],
        ['STEPHEN', '722'],
        ['SUSAN', '727'],
        ['TAMMY', '732'],
        ['TERRENCE', '733'],
        ['TERRY', '733'],
        ['THEODORE', '738'],
        ['THOMAS', '740'],
        ['TIMOTHY', '742'],
        ['VALERIE', '761'],
        ['VELON', '763'],
        ['VICTORIA', '767'],
        ['VITO', '772'],
        ['WARREN', '778'],
        ['WILLIAM', '785'],
        ['WILSON', '785'],
        ['WOONGHI', '788'],
        ['XAVIER', '788'],
        ['YASSER', '789'],
        ['YESENIA', '789'],
        ['YOOJUNG', '790'],
        ['YVETTE', '790'],
        ['YVONNE', '790'],
      ];

      var firstName_FL_IL_WI = [
        ['Albert', '20'],
        ['Alice', '20'],
        ['Ann', '40'],
        ['Anna', '40'],
        ['Anne', '40'],
        ['Annie', '40'],
        ['Arthur', '40'],
        ['Bernard', '80'],
        ['Bette', '80'],
        ['Bettie', '80'],
        ['Betty', '80'],
        ['Carl', '120'],
        ['Catherine', '120'],
        ['Charles', '140'],
        ['Dorthy', '180'],
        ['Edward', '220'],
        ['Elizabeth', '220'],
        ['Florence', '260'],
        ['Donald', '180'],
        ['Clara', '140'],
        ['Frank', '260'],
        ['George', '300'],
        ['Grace', '300'],
        ['Harold', '340'],
        ['Harriet', '340'],
        ['Harry', '360'],
        ['Hazel', '360'],
        ['Helen', '380'],
        ['Henry', '380'],
        ['James', '440'],
        ['Jane', '440'],
        ['Jayne', '440'],
        ['Jean', '460'],
        ['Joan', '480'],
        ['John', '460'],
        ['Joseph', '480'],
        ['Margaret', '560'],
        ['Martin', '560'],
        ['Marvin', '580'],
        ['Mary', '580'],
        ['Melvin', '600'],
        ['Mildred', '600'],
        ['Patricia', '680'],
        ['Paul', '680'],
        ['Richard', '740'],
        ['Robert', '760'],
        ['Ruby', '740'],
        ['Ruth', '760'],
        ['Thelma', '820'],
        ['Thomas', '820'],
        ['Walter', '900'],
        ['Wanda', '900'],
        ['William', '920'],
        ['Wilma', '920'],
      ];

      var firstInitial_FL_IL_WI = [
        ['A', '0'],
        ['B', '60'],
        ['C', '100'],
        ['D', '160'],
        ['E', '200'],
        ['F', '240'],
        ['G', '280'],
        ['H', '320'],
        ['I', '400'],
        ['J', '420'],
        ['K', '500'],
        ['L', '520'],
        ['M', '540'],
        ['N', '620'],
        ['O', '640'],
        ['P', '660'],
        ['Q', '700'],
        ['R', '720'],
        ['S', '780'],
        ['T', '800'],
        ['U', '840'],
        ['V', '860'],
        ['W', '880'],
        ['X', '940'],
        ['Y', '960'],
        ['Z', '980']
      ];
      
      var middleInitial_FL_IL_WI = [
        ['A', '1'],
        ['B', '2'],
        ['C', '3'],
        ['D', '4'],
        ['E', '5'],
        ['F', '6'],
        ['G', '7'],
        ['H', '8'],
        ['I', '9'],
        ['J', '10'],
        ['K', '11'],
        ['L', '12'],
        ['M', '13'],
        ['N', '14'],
        ['O', '14'],
        ['P', '15'],
        ['Q', '15'],
        ['R', '16'],
        ['S', '17'],
        ['T', '18'],
        ['U', '18'],
        ['V', '18'],
        ['W', '19'],
        ['X', '19'],
        ['Y', '19'],
        ['Z', '19']
      ];

      var firstMiddleName_MD_MI_MN = [
        ['a', '027'],
        ['aa', '028'],
        ['ab', '029'],
        ['ac', '030'],
        ['ad', '031'],
        ['ae', '032'],
        ['af', '033'],
        ['ag', '034'],
        ['ah', '035'],
        ['ai', '036'],
        ['aj', '037'],
        ['ak', '038'],
        ['al', '039'],
        ['ala', '040'],
        ['alb', '041'],
        ['alc', '042'],
        ['ald', '043'],
        ['ale', '044'],
        ['alf', '045'],
        ['alg', '046'],
        ['alh', '047'],
        ['ali', '048'],
        ['alj', '049'],
        ['alk', '050'],
        ['all', '051'],
        ['alm', '052'],
        ['aln', '053'],
        ['alo', '054'],
        ['alp', '055'],
        ['alq', '056'],
        ['alr', '057'],
        ['als', '058'],
        ['alt', '059'],
        ['alu', '060'],
        ['alv', '061'],
        ['alw', '062'],
        ['alx', '063'],
        ['aly', '064'],
        ['alz', '065'],
        ['am', '066'],
        ['an', '067'],
        ['ao', '068'],
        ['ap', '069'],
        ['aq', '070'],
        ['ar', '071'],
        ['as', '072'],
        ['at', '073'],
        ['au', '074'],
        ['av', '075'],
        ['aw', '076'],
        ['ax', '077'],
        ['ay', '078'],
        ['az', '079'],

        ['b', '080'],
        ['ba', '081'],
        ['bb', '082'],
        ['bc', '083'],
        ['bd', '084'],
        ['be', '085'],
        ['bf', '086'],
        ['bg', '087'],
        ['bh', '088'],
        ['bi', '089'],
        ['bj', '090'],
        ['bk', '091'],
        ['bl', '092'],
        ['bm', '093'],
        ['bn', '094'],
        ['bo', '095'],
        ['bp', '096'],
        ['bq', '097'],
        ['br', '098'],
        ['bs', '099'],
        ['bt', '100'],
        ['bu', '101'],
        ['bv', '102'],
        ['bw', '103'],
        ['bx', '104'],
        ['by', '105'],
        ['bz', '106'],

        ['c', '107'],
        ['ca', '108'],
        ['cb', '109'],
        ['cc', '110'],
        ['cd', '111'],
        ['ce', '112'],
        ['cf', '113'],
        ['cg', '114'],
        ['ch', '115'],
        ['ci', '116'],
        ['cj', '117'],
        ['ck', '118'],
        ['cl', '119'],
        ['cm', '120'],
        ['cn', '121'],
        ['co', '122'],
        ['cp', '123'],
        ['cq', '124'],
        ['cr', '125'],
        ['cs', '126'],
        ['ct', '127'],
        ['cu', '128'],
        ['cv', '129'],
        ['cw', '130'],
        ['cx', '131'],
        ['cy', '132'],
        ['cz', '133'],

        ['d', '134'],
        ['da', '135'],
        ['db', '136'],
        ['dc', '137'],
        ['dd', '138'],
        ['de', '139'],
        ['df', '140'],
        ['dg', '141'],
        ['dh', '142'],
        ['di', '143'],
        ['dj', '144'],
        ['dk', '145'],
        ['dl', '146'],
        ['dm', '147'],
        ['dn', '148'],
        ['do', '149'],
        ['dp', '150'],
        ['dq', '151'],
        ['dr', '152'],
        ['ds', '153'],
        ['dt', '154'],
        ['du', '155'],
        ['dv', '156'],
        ['dw', '157'],
        ['dx', '158'],
        ['dy', '159'],
        ['dz', '160'],

        ['e', '161'],
        ['ea', '162'],
        ['eb', '163'],
        ['ec', '164'],
        ['ed', '165'],
        ['eda', '166'],
        ['edb', '167'],
        ['edc', '168'],
        ['edd', '169'],
        ['ede', '170'],
        ['edf', '171'],
        ['edg', '172'],
        ['edh', '173'],
        ['edi', '174'],
        ['edj', '175'],
        ['edk', '176'],
        ['edl', '177'],
        ['edm', '178'],
        ['edn', '179'],
        ['edo', '180'],
        ['edp', '181'],
        ['edq', '182'],
        ['edr', '183'],
        ['eds', '184'],
        ['edt', '185'],
        ['edu', '186'],
        ['edv', '187'],
        ['edw', '188'],
        ['edward', '189'],
        ['edx', '190'],
        ['edy', '191'],
        ['edz', '192'],
        ['ee', '193'],
        ['ef', '194'],
        ['eg', '195'],
        ['eh', '196'],
        ['ei', '197'],
        ['ej', '198'],
        ['ek', '199'],
        ['el', '200'],
        ['ela', '201'],
        ['elb', '202'],
        ['elc', '203'],
        ['eld', '204'],
        ['ele', '205'],
        ['elf', '206'],
        ['elg', '207'],
        ['elh', '208'],
        ['eli', '209'],
        ['elizabeth', '210'],
        ['elj', '211'],
        ['elk', '212'],
        ['ell', '213'],
        ['ellen', '214'],
        ['elm', '215'],
        ['eln', '216'],
        ['elo', '217'],
        ['elp', '218'],
        ['elq', '219'],
        ['elr', '220'],
        ['els', '221'],
        ['elt', '222'],
        ['elu', '223'],
        ['elv', '224'],
        ['elw', '225'],
        ['elx', '226'],
        ['ely', '227'],
        ['elz', '228'],
        ['em', '229'],
        ['en', '230'],
        ['eo', '231'],
        ['ep', '232'],
        ['eq', '233'],
        ['er', '234'],
        ['es', '235'],
        ['et', '236'],
        ['eu', '237'],
        ['ev', '238'],
        ['ew', '239'],
        ['ex', '240'],
        ['ey', '241'],
        ['ez', '242'],

        ['f', '243'],
        ['fa', '244'],
        ['fb', '245'],
        ['fc', '246'],
        ['fd', '247'],
        ['fe', '248'],
        ['ff', '249'],
        ['fg', '250'],
        ['fh', '251'],
        ['fi', '252'],
        ['fj', '253'],
        ['fk', '254'],
        ['fl', '255'],
        ['fm', '256'],
        ['fn', '257'],
        ['fo', '258'],
        ['fp', '259'],
        ['fq', '260'],
        ['fr', '261'],
        ['fs', '262'],
        ['ft', '263'],
        ['fu', '264'],
        ['fv', '265'],
        ['fw', '266'],
        ['fx', '267'],
        ['fy', '268'],
        ['fz', '269'],

        ['g', '270'],
        ['ga', '271'],
        ['gb', '272'],
        ['gc', '273'],
        ['gd', '274'],
        ['ge', '275'],
        ['gf', '276'],
        ['gg', '277'],
        ['gh', '278'],
        ['gi', '279'],
        ['gj', '280'],
        ['gk', '281'],
        ['gl', '282'],
        ['gm', '283'],
        ['gn', '284'],
        ['go', '285'],
        ['gp', '286'],
        ['gq', '287'],
        ['gr', '288'],
        ['gs', '289'],
        ['gt', '290'],
        ['gu', '291'],
        ['gv', '292'],
        ['gw', '293'],
        ['gx', '294'],
        ['gy', '295'],
        ['gz', '296'],

        ['h', '297'],
        ['ha', '298'],
        ['hb', '299'],
        ['hc', '300'],
        ['hd', '301'],
        ['he', '302'],
        ['henry', '303'],
        ['hf', '304'],
        ['hg', '305'],
        ['hh', '306'],
        ['hi', '307'],
        ['hj', '308'],
        ['hk', '309'],
        ['hl', '310'],
        ['hm', '311'],
        ['hn', '312'],
        ['ho', '313'],
        ['hp', '314'],
        ['hq', '315'],
        ['hr', '316'],
        ['hs', '317'],
        ['ht', '318'],
        ['hu', '319'],
        ['hv', '320'],
        ['hw', '321'],
        ['hx', '322'],
        ['hy', '323'],
        ['hz', '324'],

        ['i', '325'],
        ['ia', '326'],
        ['ib', '327'],
        ['ic', '328'],
        ['id', '329'],
        ['ie', '330'],
        ['if', '331'],
        ['ig', '332'],
        ['ih', '333'],
        ['ii', '334'],
        ['ij', '335'],
        ['ik', '336'],
        ['il', '337'],
        ['im', '338'],
        ['in', '339'],
        ['io', '340'],
        ['ip', '341'],
        ['iq', '342'],
        ['ir', '343'],
        ['is', '344'],
        ['it', '345'],
        ['iu', '346'],
        ['iv', '347'],
        ['iw', '348'],
        ['ix', '349'],
        ['iy', '350'],
        ['iz', '351'],

        ['j', '352'],
        ['ja', '353'],
        ['jaa', '354'],
        ['jab', '355'],
        ['jac', '356'],
        ['jad', '357'],
        ['jae', '358'],
        ['jaf', '359'],
        ['jag', '360'],
        ['jah', '361'],
        ['jai', '362'],
        ['jaj', '363'],
        ['jak', '364'],
        ['jal', '365'],
        ['jam', '366'],
        ['james', '367'],
        ['jan', '368'],
        ['jao', '369'],
        ['jap', '370'],
        ['jaq', '371'],
        ['jar', '372'],
        ['jas', '373'],
        ['jat', '374'],
        ['jau', '375'],
        ['jav', '376'],
        ['jaw', '377'],
        ['jax', '378'],
        ['jay', '379'],
        ['jaz', '380'],
        ['jb', '381'],
        ['jc', '382'],
        ['jd', '383'],
        ['je', '384'],
        ['jea', '385'],
        ['jeb', '386'],
        ['jec', '387'],
        ['jed', '388'],
        ['jee', '389'],
        ['jef', '390'],
        ['jeg', '391'],
        ['jeh', '392'],
        ['jei', '393'],
        ['jej', '394'],
        ['jek', '395'],
        ['jel', '396'],
        ['jem', '397'],
        ['jen', '398'],
        ['jeo', '399'],
        ['jep', '400'],
        ['jeq', '401'],
        ['jer', '402'],
        ['jes', '403'],
        ['jet', '404'],
        ['jeu', '405'],
        ['jev', '406'],
        ['jew', '407'],
        ['jex', '408'],
        ['jey', '409'],
        ['jez', '410'],
        ['jf', '411'],
        ['jg', '412'],
        ['jh', '413'],
        ['ji', '414'],
        ['jj', '415'],
        ['jk', '416'],
        ['jl', '417'],
        ['jm', '418'],
        ['jn', '419'],
        ['jo', '420'],
        ['joa', '421'],
        ['job', '422'],
        ['joc', '423'],
        ['jod', '424'],
        ['joe', '425'],
        ['jof', '426'],
        ['jog', '427'],
        ['joh', '428'],
        ['john', '429'],
        ['joi', '430'],
        ['joj', '431'],
        ['jok', '432'],
        ['jol', '433'],
        ['jom', '434'],
        ['jon', '435'],
        ['joo', '436'],
        ['jop', '437'],
        ['joq', '438'],
        ['jor', '439'],
        ['jos', '440'],
        ['joseph', '441'],
        ['jot', '442'],
        ['jou', '443'],
        ['jov', '444'],
        ['jow', '445'],
        ['jox', '446'],
        ['joy', '447'],
        ['joz', '448'],
        ['jp', '449'],
        ['jq', '450'],
        ['jr', '451'],
        ['js', '452'],
        ['jt', '453'],
        ['ju', '454'],
        ['jv', '455'],
        ['jw', '456'],
        ['jx', '457'],
        ['jy', '458'],
        ['jz', '459'],

        ['k', '460'],
        ['ka', '461'],
        ['kb', '462'],
        ['kc', '463'],
        ['kd', '464'],
        ['ke', '465'],
        ['kf', '466'],
        ['kg', '467'],
        ['kh', '468'],
        ['ki', '469'],
        ['kj', '470'],
        ['kk', '471'],
        ['kl', '472'],
        ['km', '473'],
        ['kn', '474'],
        ['ko', '475'],
        ['kp', '476'],
        ['kq', '477'],
        ['kr', '478'],
        ['ks', '479'],
        ['kt', '480'],
        ['ku', '481'],
        ['kv', '482'],
        ['kw', '483'],
        ['kx', '484'],
        ['ky', '485'],
        ['kz', '486'],

        ['l', '487'],
        ['la', '488'],
        ['lb', '489'],
        ['lc', '490'],
        ['ld', '491'],
        ['le', '492'],
        ['lea', '493'],
        ['leb', '494'],
        ['lec', '495'],
        ['led', '496'],
        ['lee', '497'],
        ['lef', '498'],
        ['leg', '499'],
        ['leh', '500'],
        ['lei', '501'],
        ['lej', '502'],
        ['lek', '503'],
        ['lel', '504'],
        ['lem', '505'],
        ['len', '506'],
        ['leo', '507'],
        ['lep', '508'],
        ['leq', '509'],
        ['ler', '510'],
        ['les', '511'],
        ['let', '512'],
        ['leu', '513'],
        ['lev', '514'],
        ['lew', '515'],
        ['lex', '516'],
        ['ley', '517'],
        ['lez', '518'],
        ['lf', '519'],
        ['lg', '520'],
        ['lh', '521'],
        ['li', '522'],
        ['lj', '523'],
        ['lk', '524'],
        ['ll', '525'],
        ['lm', '526'],
        ['ln', '527'],
        ['lo', '528'],
        ['loa', '529'],
        ['lob', '530'],
        ['loc', '531'],
        ['lod', '532'],
        ['loe', '533'],
        ['lof', '534'],
        ['log', '535'],
        ['loh', '536'],
        ['loi', '537'],
        ['loj', '538'],
        ['lok', '539'],
        ['lol', '540'],
        ['lom', '541'],
        ['lon', '542'],
        ['loo', '543'],
        ['lop', '544'],
        ['loq', '545'],
        ['lor', '546'],
        ['los', '547'],
        ['lot', '548'],
        ['lou', '549'],
        ['lov', '550'],
        ['low', '551'],
        ['lox', '552'],
        ['loy', '553'],
        ['loz', '554'],
        ['lp', '555'],
        ['lq', '556'],
        ['lr', '557'],
        ['ls', '558'],
        ['lt', '559'],
        ['lu', '560'],
        ['lv', '561'],
        ['lw', '562'],
        ['lx', '563'],
        ['ly', '564'],
        ['lz', '565'],

        ['m', '566'],
        ['ma', '567'],
        ['maa', '568'],
        ['mab', '569'],
        ['mac', '570'],
        ['mad', '571'],
        ['mae', '572'],
        ['maf', '573'],
        ['mag', '574'],
        ['mah', '575'],
        ['mai', '576'],
        ['maj', '577'],
        ['mak', '578'],
        ['mal', '579'],
        ['mam', '580'],
        ['man', '581'],
        ['mao', '582'],
        ['map', '583'],
        ['maq', '584'],
        ['mar', '585'],
        ['margaret', '586'],
        ['mary', '587'],
        ['mas', '588'],
        ['mat', '589'],
        ['mau', '590'],
        ['mav', '591'],
        ['maw', '592'],
        ['max', '593'],
        ['may', '594'],
        ['maz', '595'],
        ['mb', '596'],
        ['mc', '597'],
        ['md', '598'],
        ['me', '599'],
        ['mf', '600'],
        ['mg', '601'],
        ['mh', '602'],
        ['mi', '603'],
        ['mj', '604'],
        ['mk', '605'],
        ['ml', '606'],
        ['mm', '607'],
        ['mn', '608'],
        ['mo', '609'],
        ['mp', '610'],
        ['mq', '611'],
        ['mr', '612'],
        ['ms', '613'],
        ['mt', '614'],
        ['mu', '615'],
        ['mv', '616'],
        ['mw', '617'],
        ['mx', '618'],
        ['my', '619'],
        ['mz', '620'],

        ['n', '621'],
        ['na', '622'],
        ['nb', '623'],
        ['nc', '624'],
        ['nd', '625'],
        ['ne', '626'],
        ['nf', '627'],
        ['ng', '628'],
        ['nh', '629'],
        ['ni', '630'],
        ['nj', '631'],
        ['nk', '632'],
        ['nl', '633'],
        ['nm', '634'],
        ['nn', '635'],
        ['no', '636'],
        ['np', '637'],
        ['nq', '638'],
        ['nr', '639'],
        ['ns', '640'],
        ['nt', '641'],
        ['nu', '642'],
        ['nv', '643'],
        ['nw', '644'],
        ['nx', '645'],
        ['ny', '646'],
        ['nz', '647'],

        ['o', '648'],
        ['oa', '649'],
        ['ob', '650'],
        ['oc', '651'],
        ['od', '652'],
        ['oe', '653'],
        ['of', '654'],
        ['og', '655'],
        ['oh', '656'],
        ['oi', '657'],
        ['oj', '658'],
        ['ok', '659'],
        ['ol', '660'],
        ['om', '661'],
        ['on', '662'],
        ['oo', '663'],
        ['op', '664'],
        ['oq', '665'],
        ['or', '666'],
        ['os', '667'],
        ['ot', '668'],
        ['ou', '669'],
        ['ov', '670'],
        ['ow', '671'],
        ['ox', '672'],
        ['oy', '673'],
        ['oz', '674'],

        ['p', '675'],
        ['pa', '676'],
        ['pb', '677'],
        ['pc', '678'],
        ['pd', '679'],
        ['pe', '680'],
        ['pf', '681'],
        ['pg', '682'],
        ['ph', '683'],
        ['pi', '684'],
        ['pj', '685'],
        ['pk', '686'],
        ['pl', '687'],
        ['pm', '688'],
        ['pn', '689'],
        ['po', '690'],
        ['pp', '691'],
        ['pq', '692'],
        ['pr', '693'],
        ['ps', '694'],
        ['pt', '695'],
        ['pu', '696'],
        ['pv', '697'],
        ['pw', '698'],
        ['px', '699'],
        ['py', '700'],
        ['pz', '701'],

        ['q', '702'],
        ['qa', '703'],
        ['qb', '704'],
        ['qc', '705'],
        ['qd', '706'],
        ['qe', '707'],
        ['qf', '708'],
        ['qg', '709'],
        ['qh', '710'],
        ['qi', '711'],
        ['qj', '712'],
        ['qk', '713'],
        ['ql', '714'],
        ['qm', '715'],
        ['qn', '716'],
        ['qo', '717'],
        ['qp', '718'],
        ['qq', '719'],
        ['qr', '720'],
        ['qs', '721'],
        ['qt', '722'],
        ['qu', '723'],
        ['qv', '724'],
        ['qw', '725'],
        ['qx', '726'],
        ['qy', '727'],
        ['qz', '728'],

        ['r', '729'],
        ['ra', '730'],
        ['rb', '731'],
        ['rc', '732'],
        ['rd', '733'],
        ['re', '734'],
        ['rf', '735'],
        ['rg', '736'],
        ['rh', '737'],
        ['ri', '738'],
        ['rj', '739'],
        ['rk', '740'],
        ['rl', '741'],
        ['rm', '742'],
        ['rn', '743'],
        ['ro', '744'],
        ['robert', '745'],
        ['rp', '746'],
        ['rq', '747'],
        ['rr', '748'],
        ['rs', '749'],
        ['rt', '750'],
        ['ru', '751'],
        ['rv', '752'],
        ['rw', '753'],
        ['rx', '754'],
        ['ry', '755'],
        ['rz', '756'],

        ['s', '757'],
        ['sa', '758'],
        ['sb', '759'],
        ['sc', '760'],
        ['sd', '761'],
        ['se', '762'],
        ['sf', '763'],
        ['sg', '764'],
        ['sh', '765'],
        ['si', '766'],
        ['sj', '767'],
        ['sk', '768'],
        ['sl', '769'],
        ['sm', '770'],
        ['sn', '771'],
        ['so', '772'],
        ['sp', '773'],
        ['sq', '774'],
        ['sr', '775'],
        ['ss', '776'],
        ['st', '777'],
        ['su', '778'],
        ['sv', '779'],
        ['sw', '780'],
        ['sx', '781'],
        ['sy', '782'],
        ['sz', '783'],

        ['t', '784'],
        ['ta', '785'],
        ['tb', '786'],
        ['tc', '787'],
        ['td', '788'],
        ['te', '789'],
        ['tf', '790'],
        ['tg', '791'],
        ['th', '792'],
        ['ti', '793'],
        ['tj', '794'],
        ['tk', '795'],
        ['tl', '796'],
        ['tm', '797'],
        ['tn', '798'],
        ['to', '799'],
        ['tp', '800'],
        ['tq', '801'],
        ['tr', '802'],
        ['ts', '803'],
        ['tt', '804'],
        ['tu', '805'],
        ['tv', '806'],
        ['tw', '807'],
        ['tx', '808'],
        ['ty', '809'],
        ['tz', '810'],

        ['u', '811'],
        ['ua', '812'],
        ['ub', '813'],
        ['uc', '814'],
        ['ud', '815'],
        ['ue', '816'],
        ['uf', '817'],
        ['ug', '818'],
        ['uh', '819'],
        ['ui', '820'],
        ['uj', '821'],
        ['uk', '822'],
        ['ul', '823'],
        ['um', '824'],
        ['un', '825'],
        ['uo', '826'],
        ['up', '827'],
        ['uq', '828'],
        ['ur', '829'],
        ['us', '830'],
        ['ut', '831'],
        ['uu', '832'],
        ['uv', '833'],
        ['uw', '834'],
        ['ux', '835'],
        ['uy', '836'],
        ['uz', '837'],

        ['v', '838'],
        ['va', '839'],
        ['vb', '840'],
        ['vc', '841'],
        ['vd', '842'],
        ['ve', '843'],
        ['vf', '844'],
        ['vg', '845'],
        ['vh', '846'],
        ['vi', '847'],
        ['vj', '848'],
        ['vk', '849'],
        ['vl', '850'],
        ['vm', '851'],
        ['vn', '852'],
        ['vo', '853'],
        ['vp', '854'],
        ['vq', '855'],
        ['vr', '856'],
        ['vs', '857'],
        ['vt', '858'],
        ['vu', '859'],
        ['vv', '860'],
        ['vw', '861'],
        ['vx', '862'],
        ['vy', '863'],
        ['vz', '864'],

        ['w', '865'],
        ['wa', '866'],
        ['wb', '867'],
        ['wc', '868'],
        ['wd', '869'],
        ['we', '870'],
        ['wf', '871'],
        ['wg', '872'],
        ['wh', '873'],
        ['wi', '874'],
        ['wia', '875'],
        ['wib', '876'],
        ['wic', '877'],
        ['wid', '878'],
        ['wie', '879'],
        ['wif', '880'],
        ['wig', '881'],
        ['wih', '882'],
        ['wii', '883'],
        ['wij', '884'],
        ['wik', '885'],
        ['wil', '886'],
        ['william', '887'],
        ['wim', '888'],
        ['win', '889'],
        ['wio', '890'],
        ['wip', '891'],
        ['wiq', '892'],
        ['wir', '893'],
        ['wis', '894'],
        ['wit', '895'],
        ['wiu', '896'],
        ['wiv', '897'],
        ['wiw', '898'],
        ['wix', '899'],
        ['wiy', '900'],
        ['wiz', '901'],
        ['wj', '902'],
        ['wk', '903'],
        ['wl', '904'],
        ['wm', '905'],
        ['wn', '906'],
        ['wo', '907'],
        ['wp', '908'],
        ['wq', '909'],
        ['wr', '910'],
        ['ws', '911'],
        ['wt', '912'],
        ['wu', '913'],
        ['wv', '914'],
        ['ww', '915'],
        ['wx', '916'],
        ['wy', '917'],
        ['wz', '918'],

        ['x', '919'],
        ['xa', '920'],
        ['xb', '921'],
        ['xc', '922'],
        ['xd', '923'],
        ['xe', '924'],
        ['xf', '925'],
        ['xg', '926'],
        ['xh', '927'],
        ['xi', '928'],
        ['xj', '929'],
        ['xk', '930'],
        ['xl', '931'],
        ['xm', '932'],
        ['xn', '933'],
        ['xo', '934'],
        ['xp', '935'],
        ['xq', '936'],
        ['xr', '937'],
        ['xs', '938'],
        ['xt', '939'],
        ['xu', '940'],
        ['xv', '941'],
        ['xw', '942'],
        ['xx', '943'],
        ['xy', '944'],
        ['xz', '945'],

        ['y', '946'],
        ['ya', '947'],
        ['yb', '948'],
        ['yc', '949'],
        ['yd', '950'],
        ['ye', '951'],
        ['yf', '952'],
        ['yg', '953'],
        ['yh', '954'],
        ['yi', '955'],
        ['yj', '956'],
        ['yk', '957'],
        ['yl', '958'],
        ['ym', '959'],
        ['yn', '960'],
        ['yo', '961'],
        ['yp', '962'],
        ['yq', '963'],
        ['yr', '964'],
        ['ys', '965'],
        ['yt', '966'],
        ['yu', '967'],
        ['yv', '968'],
        ['yw', '969'],
        ['yx', '970'],
        ['yy', '971'],
        ['yz', '972'],

        ['z', '973'],
        ['za', '974'],
        ['zb', '975'],
        ['zc', '976'],
        ['zd', '977'],
        ['ze', '978'],
        ['zf', '979'],
        ['zg', '980'],
        ['zh', '981'],
        ['zi', '982'],
        ['zj', '983'],
        ['zk', '984'],
        ['zl', '985'],
        ['zm', '986'],
        ['zn', '987'],
        ['zo', '988'],
        ['zp', '989'],
        ['zq', '990'],
        ['zr', '991'],
        ['zs', '992'],
        ['zt', '993'],
        ['zu', '994'],
        ['zv', '995'],
        ['zw', '996'],
        ['zx', '997'],
        ['zy', '998'],
        ['zz', '999']
      ];

      var middleName_MD_MI_MN = [
        ['a', '001'],
        ['b', '002'],
        ['c', '003'],
        ['d', '004'],
        ['e', '005'],
        ['f', '006'],
        ['g', '007'],
        ['h', '008'],
        ['i', '009'],
        ['j', '010'],
        ['k', '011'],
        ['l', '012'],
        ['m', '013'],
        ['n', '014'],
        ['o', '015'],
        ['p', '016'],
        ['q', '017'],
        ['r', '018'],
        ['s', '019'],
        ['t', '020'],
        ['u', '021'],
        ['v', '022'],
        ['w', '023'],
        ['x', '024'],
        ['y', '025'],
        ['z', '026'],
      ];

      var dob_MD_MI_MN = [

        // format is mmdd, where dd of 00 means no day specifed

        ['0100', '001'],
        ['0101', '002'],
        ['0102', '007'],
        ['0103', '010'],
        ['0104', '012'],
        ['0105', '017'],
        ['0106', '020'],
        ['0107', '022'],
        ['0108', '025'],
        ['0109', '027'],
        ['0110', '030'],
        ['0111', '032'],
        ['0112', '035'],
        ['0113', '037'],
        ['0114', '040'],
        ['0115', '042'],
        ['0116', '045'],
        ['0117', '047'],
        ['0118', '050'],
        ['0119', '052'],
        ['0120', '055'],
        ['0121', '057'],
        ['0122', '060'],
        ['0123', '062'],
        ['0124', '065'],
        ['0125', '067'],
        ['0126', '070'],
        ['0127', '072'],
        ['0128', '075'],
        ['0129', '077'],
        ['0130', '080'],
        ['0131', '082'],

        ['0200', '085'],
        ['0201', '086'],
        ['0202', '088'],
        ['0203', '091'],
        ['0204', '093'],
        ['0205', '096'],
        ['0206', '098'],
        ['0207', '101'],
        ['0208', '103'],
        ['0209', '106'],
        ['0210', '108'],
        ['0211', '111'],
        ['0212', '113'],
        ['0213', '116'],
        ['0214', '118'],
        ['0215', '121'],
        ['0216', '123'],
        ['0217', '126'],
        ['0218', '128'],
        ['0219', '131'],
        ['0220', '133'],
        ['0221', '136'],
        ['0222', '138'],
        ['0223', '141'],
        ['0224', '143'],
        ['0225', '146'],
        ['0226', '148'],
        ['0227', '151'],
        ['0228', '153'],
        ['0229', '156'],

        ['0300', '158'],
        ['0301', '159'],
        ['0302', '162'],
        ['0303', '164'],
        ['0304', '167'],
        ['0305', '169'],
        ['0306', '172'],
        ['0307', '174'],
        ['0308', '177'],
        ['0309', '182'],
        ['0310', '184'],
        ['0311', '187'],
        ['0312', '189'],
        ['0313', '192'],
        ['0314', '194'],
        ['0315', '197'],
        ['0316', '199'],
        ['0317', '202'],
        ['0318', '204'],
        ['0319', '207'],
        ['0320', '227'],
        ['0321', '229'],
        ['0322', '232'],
        ['0323', '234'],
        ['0324', '237'],
        ['0325', '239'],
        ['0326', '242'],
        ['0327', '244'],
        ['0328', '247'],
        ['0329', '249'],
        ['0330', '252'],
        ['0331', '254'],

        ['0400', '257'],
        ['0401', '258'],
        ['0402', '260'],
        ['0403', '263'],
        ['0404', '265'],
        ['0405', '268'],
        ['0406', '270'],
        ['0407', '273'],
        ['0408', '275'],
        ['0409', '278'],
        ['0410', '280'],
        ['0411', '283'],
        ['0412', '285'],
        ['0413', '288'],
        ['0414', '290'],
        ['0415', '293'],
        ['0416', '295'],
        ['0417', '298'],
        ['0418', '300'],
        ['0419', '303'],
        ['0420', '305'],
        ['0421', '308'],
        ['0422', '310'],
        ['0423', '313'],
        ['0424', '315'],
        ['0425', '318'],
        ['0426', '320'],
        ['0427', '323'],
        ['0428', '325'],
        ['0429', '328'],
        ['0430', '330'],

        ['0500', '333'],
        ['0501', '334'],
        ['0502', '336'],
        ['0503', '339'],
        ['0504', '341'],
        ['0505', '344'],
        ['0506', '346'],
        ['0507', '349'],
        ['0508', '351'],
        ['0509', '354'],
        ['0510', '356'],
        ['0511', '359'],
        ['0512', '361'],
        ['0513', '364'],
        ['0514', '366'],
        ['0515', '369'],
        ['0516', '371'],
        ['0517', '374'],
        ['0518', '376'],
        ['0519', '379'],
        ['0520', '381'],
        ['0521', '384'],
        ['0522', '386'],
        ['0523', '389'],
        ['0524', '391'],
        ['0525', '394'],
        ['0526', '396'],
        ['0527', '399'],
        ['0528', '401'],
        ['0529', '404'],
        ['0530', '406'],
        ['0531', '409'],

        ['0600', '411'],
        ['0601', '412'],
        ['0602', '415'],
        ['0603', '417'],
        ['0604', '420'],
        ['0605', '422'],
        ['0606', '425'],
        ['0607', '427'],
        ['0608', '430'],
        ['0609', '432'],
        ['0610', '435'],
        ['0611', '437'],
        ['0612', '440'],
        ['0613', '442'],
        ['0614', '445'],
        ['0615', '447'],
        ['0616', '450'],
        ['0617', '452'],
        ['0618', '467'],
        ['0619', '470'],
        ['0620', '472'],
        ['0621', '475'],
        ['0622', '477'],
        ['0623', '480'],
        ['0624', '482'],
        ['0625', '497'],
        ['0626', '500'],
        ['0627', '502'],
        ['0628', '505'],
        ['0629', '507'],
        ['0630', '517'],

        ['0700', '520'],
        ['0701', '521'],
        ['0702', '523'],
        ['0703', '526'],
        ['0704', '528'],
        ['0705', '534'],
        ['0706', '537'],
        ['0707', '539'],
        ['0708', '542'],
        ['0709', '544'],
        ['0710', '547'],
        ['0711', '549'],
        ['0712', '552'],
        ['0713', '554'],
        ['0714', '557'],
        ['0715', '559'],
        ['0716', '562'],
        ['0717', '564'],
        ['0718', '567'],
        ['0719', '569'],
        ['0720', '572'],
        ['0721', '574'],
        ['0722', '577'],
        ['0723', '579'],
        ['0724', '582'],
        ['0725', '584'],
        ['0726', '587'],
        ['0727', '589'],
        ['0728', '592'],
        ['0729', '594'],
        ['0730', '597'],
        ['0731', '599'],

        ['0800', '602'],
        ['0801', '603'],
        ['0802', '605'],
        ['0803', '608'],
        ['0804', '610'],
        ['0805', '613'],
        ['0806', '615'],
        ['0807', '618'],
        ['0808', '620'],
        ['0809', '623'],
        ['0810', '625'],
        ['0811', '628'],
        ['0812', '630'],
        ['0813', '633'],
        ['0814', '635'],
        ['0815', '638'],
        ['0816', '640'],
        ['0817', '643'],
        ['0818', '645'],
        ['0819', '648'],
        ['0820', '650'],
        ['0821', '653'],
        ['0822', '655'],
        ['0823', '658'],
        ['0824', '660'],
        ['0825', '663'],
        ['0826', '665'],
        ['0827', '668'],
        ['0828', '670'],
        ['0829', '673'],
        ['0830', '675'],
        ['0831', '678'],

        ['0900', '680'],
        ['0901', '681'],
        ['0902', '684'],
        ['0903', '686'],
        ['0904', '689'],
        ['0905', '691'],
        ['0906', '694'],
        ['0907', '696'],
        ['0908', '699'],
        ['0909', '701'],
        ['0910', '704'],
        ['0911', '706'],
        ['0912', '709'],
        ['0913', '711'],
        ['0914', '714'],
        ['0915', '716'],
        ['0916', '719'],
        ['0917', '721'],
        ['0918', '724'],
        ['0919', '726'],
        ['0920', '729'],
        ['0921', '731'],
        ['0922', '734'],
        ['0923', '736'],
        ['0924', '739'],
        ['0925', '741'],
        ['0926', '744'],
        ['0927', '746'],
        ['0928', '749'],
        ['0929', '751'],
        ['0930', '754'],

        ['1000', '756'],
        ['1001', '757'],
        ['1002', '760'],
        ['1003', '762'],
        ['1004', '765'],
        ['1005', '767'],
        ['1006', '770'],
        ['1007', '772'],
        ['1008', '775'],
        ['1009', '777'],
        ['1010', '780'],
        ['1011', '782'],
        ['1012', '785'],
        ['1013', '787'],
        ['1014', '790'],
        ['1015', '792'],
        ['1016', '797'],
        ['1017', '800'],
        ['1018', '802'],
        ['1019', '807'],
        ['1020', '810'],
        ['1021', '812'],
        ['1022', '815'],
        ['1023', '817'],
        ['1024', '820'],
        ['1025', '822'],
        ['1026', '825'],
        ['1027', '827'],
        ['1028', '830'],
        ['1029', '832'],
        ['1030', '835'],
        ['1031', '837'],

        ['1100', '840'],
        ['1101', '841'],
        ['1102', '843'],
        ['1103', '846'],
        ['1104', '848'],
        ['1105', '851'],
        ['1106', '853'],
        ['1107', '856'],
        ['1108', '858'],
        ['1109', '861'],
        ['1110', '863'],
        ['1111', '866'],
        ['1112', '868'],
        ['1113', '871'],
        ['1114', '873'],
        ['1115', '876'],
        ['1116', '878'],
        ['1117', '881'],
        ['1118', '883'],
        ['1119', '886'],
        ['1120', '888'],
        ['1121', '891'],
        ['1122', '893'],
        ['1123', '896'],
        ['1124', '898'],
        ['1125', '901'],
        ['1126', '903'],
        ['1127', '906'],
        ['1128', '908'],
        ['1129', '911'],
        ['1130', '913'],

        ['1200', '916'],
        ['1201', '917'],
        ['1202', '919'],
        ['1203', '922'],
        ['1204', '924'],
        ['1205', '927'],
        ['1206', '929'],
        ['1207', '932'],
        ['1208', '934'],
        ['1209', '937'],
        ['1210', '939'],
        ['1211', '942'],
        ['1212', '944'],
        ['1213', '947'],
        ['1214', '949'],
        ['1215', '952'],
        ['1216', '954'],
        ['1217', '957'],
        ['1218', '959'],
        ['1219', '962'],
        ['1220', '964'],
        ['1221', '967'],
        ['1222', '969'],
        ['1223', '972'],
        ['1224', '974'],
        ['1225', '977'],
        ['1226', '983'],
        ['1227', '985'],
        ['1228', '990'],
        ['1229', '993'],
        ['1230', '995'],
        ['1231', '998']
      ]

      var middleInitial_NJ = [
        ['', '00'],
        ['A', '61'],
        ['B', '62'],
        ['C', '63'],
        ['D', '64'],
        ['E', '65'],
        ['F', '66'],
        ['G', '67'],
        ['H', '68'],
        ['I', '69'],
        ['J', '71'],
        ['K', '72'],
        ['L', '73'],
        ['M', '74'],
        ['N', '75'],
        ['O', '76'],
        ['P', '77'],
        ['Q', '78'],
        ['R', '79'],
        ['S', '82'],
        ['T', '83'],
        ['U', '84'],
        ['V', '85'],
        ['W', '86'],
        ['X', '87'],
        ['Y', '88'],
        ['Z', '89']
      ]

      var eyeColor_NJ = [
        ['?', '0'],
        ['Black', '1'],
        ['Brown', '2'],
        ['Grey', '3'],
        ['Blue', '4'],
        ['Hazel', '5'],
        ['Green', '6'],
        ['Black', '7'],
        ['?', '8'],
        ['Pink', '9']
      ]
var page = 1;
var current_type = 'all'

function psd_templates_change_type(type) {
  document.getElementById("empty_template").style.display = 'none';
  document.getElementById("search_inp_val").value = ''
  var all_nav_objects = document.getElementsByClassName('category_sel');
  for (let x = 0; x < all_nav_objects.length; x++) {
    all_nav_objects[x].classList.remove("current_cat_cel");
  }
  document.getElementById(type).classList.add("current_cat_cel");
  var all_objects = document.getElementsByClassName('all');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].style.display = 'none';
  }
  var objects = document.getElementsByClassName(type);
  for (let i = 0; i <= 12; i++) {
    if ( objects[i]  !== undefined ) {
      if ( objects[i].id != 'empty_template' ) {
        objects[i].style.display = 'inline-block';
      }
    } else {
      break;
    }
  }

  if ( objects.length == 0 ) {
    document.getElementById("empty_template").style.display = 'block';
  } else if( objects.length <= 12 ) {
  	document.getElementById('page_pagination').style.display = 'none';
  } else {
  	var page_qty = Math.ceil(objects.length / 12);
  	document.getElementById('page_pagination').style.display = 'block';

  	var new_paginator = '';

  	for (let p = 1; p <= page_qty; p++) {
  		var html_additionals = '';
  		if ( p == 1 ) {
  		  html_additionals = ' active';

  		}
  	   new_paginator += '<a class="paginator_page'+html_additionals+'" onclick="paginator('+p+');">'+p+'</a>';
    }

  	document.getElementById('page_pagination').innerHTML = new_paginator;
  }

  page = 1;
  current_type = type;
}


function search_template(what_search) {
  if(what_search.length >= 3) {
    var all_nav_objects = document.getElementsByClassName('category_sel');
    for (let x = 0; x < all_nav_objects.length; x++) {
        all_nav_objects[x].classList.remove("current_cat_cel");
    }
    var all_objects = document.getElementsByClassName('product_name');
    var all_objects_to_show = document.getElementsByClassName('all');
    var empty_yes = 0;
    for (let z = 0; z < all_objects.length; z++) {
        if( all_objects[z].innerHTML.toUpperCase().search(what_search.toUpperCase()) >= 0 && all_objects[z].id != 'empty_state' ) {
            all_objects_to_show[z].style.display = 'inline-block';
            empty_yes = 1;
        } else {
            all_objects_to_show[z].style.display = 'none';
        }
    }
    if (empty_yes == 0) {
      document.getElementById("empty_template").style.display = 'block';
      document.getElementById('page_pagination').innerHTML = '';
    }
    if (typeof dataLayer == 'object') { 
          dataLayer.push({ 'event':'template_search', 'search_string': what_search });
    }

  } else if ( what_search.length == 0 ) {
    psd_templates_change_type('all');
  }
}


function paginator(page_number) {
  var last_item = ( page_number * 12 );
  var first_elem = last_item - 12;

  if (page_number != 1) {
    first_elem += 1;
  }

  var elem_number = page_number - 1;

  var all_objects = document.getElementsByClassName('all');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].style.display = 'none';
  }

  var objects = document.getElementsByClassName(current_type);
  for (let i = first_elem; i <= last_item; i++) {
    if ( objects[i]  !== undefined ) {
      if ( objects[i].id != 'empty_template' ) {
        objects[i].style.display = 'inline-block';
      }
    } else {
      break;
    }
  }

  var all_pages_buttons = document.getElementsByClassName('paginator_page');
  for (let y = 0; y < all_pages_buttons.length; y++) {
    all_pages_buttons[y].classList.remove("active");
  }

  all_pages_buttons[elem_number].classList.add("active");

  page = page_number;

}

psd_templates_change_type('all');
const all_char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
const digits = '1234567890';
const languages = {'en': 
                    { 'auto': 'Auto',
                      'additional_data': 'Additional data',
                      'error_country': 'Please, select the country of the document',
                      'error_birth_country': 'Please, provide the country of birthday of the client',
                      'error_last_name': 'Please, provide the last name of the client',
                      'error_first_name': 'Please, provide the first name of the client',
                      'error_sex': 'Please, select the sex of the client',
                      'error_first_date': 'Please, provide the birthday date of the client',
                      'error_second_date': 'Please, provide the expiry date of the document',
                      'error_document_number': 'Please, provide the document number of the document',
                      'error_additional_data': 'Please, provide the additional data of the document',
                      'generate': 'Generate!',
                      'generated_b': 'Generated! Сheck telegram bot.',
                      'loading': 'Loading...',
                      'error': 'Unexpected error',
                      'format': 'Format',
                      'buy_label': 'Buy',
                      'text_buy_label': '<b>Attention!</b> You are generating barcodes for the template of the document showed above. Please, make sure that your have a right template or TEMPLATE_NAME from us.',
                      'light': ' Light',
                      'dark': '  Dark',
                      'new_generation': 'New generation!'
                    }, 
                   'cn': 
                    { 'auto': ' 汽车 ',
                      'additional_data': '附加数据',
                      'error_country': '请选择文件的国家',
                      'error_birth_country': '请提供客户的生日国家',
                      'error_last_name': '请提供客户的姓氏',
                      'error_first_name': '请提供客户的名字',
                      'error_sex': '请选择客户的性别',
                      'error_first_date': '请提供客户的生日日期',
                      'error_second_date': '请提供文件的到期日期',
                      'error_document_number': '请提供文件的文件编号',
                      'error_additional_data': '请提供文档的附加数据',
                      'generate': '产生!',
                      'generated_b': '已生成! 请检查电报机器人',
                      'loading': '正在加载...',
                      'error': '意外的错误',
                      'format': '格式',
                      'buy_label': '购买',
                      'text_buy_label': '<b>注意！</b>您正在为所显示文档的模板生成条形码。请确保您拥有正确的模板或从我们这里TEMPLATE_NAME。',
                      'light': '     光',
                      'dark': '   黑暗的',
                      'new_generation': '新一代!'
                   },  
                   'hi': 
                    { 'auto': 'ऑटो',
                      'additional_data': 'अतिरिक्त डेटा',
                      'error_country': 'कृपया, दस्तावेज़ का देश चुनें',
                      'error_birth_country': 'कृपया, ग्राहक के जन्मदिन का देश प्रदान करें',
                      'error_last_name': 'कृपया, ग्राहक का अंतिम नाम प्रदान करें',
                      'error_first_name': 'कृपया, क्लाइंट का पहला नाम प्रदान करें',
                      'error_sex': 'कृपया, ग्राहक के लिंग का चयन करें',
                      'error_first_date': 'कृपया, ग्राहक की जन्म तिथि प्रदान करें',
                      'error_second_date': 'कृपया, दस्तावेज़ की समाप्ति तिथि प्रदान करें',
                      'error_document_number': 'कृपया, दस्तावेज़ की दस्तावेज़ संख्या प्रदान करें',
                      'error_additional_data': 'कृपया, दस्तावेज़ का अतिरिक्त डेटा प्रदान करें',
                      'generate': 'उत्पन्न!',
                      'generated_b': 'उत्पन्न! कृपया, टेलीग्राम बॉट की जाँच करें।',
                      'loading': 'लोड हो रहा है...',
                      'error': 'अप्रत्याशित त्रुटि',
                      'format': 'प्रारूप',
                      'buy_label': 'खरीदें',
                      'text_buy_label': '<b>ध्यान दें!</b> आप दिखाए गए दस्तावेज़ के टेम्पलेट के लिए बारकोड बना रहे हैं। कृपया, सुनिश्चित करें कि आपके पास सही टेम्पलेट है या हमसे TEMPLATE_NAME।',
                      'light': '   रोशनी',
                      'dark': '   अँधेरा',
                      'new_generation': 'नई पीढ़ी!'
                   },  
                   'ru': 
                    { 'auto': 'Авто',
                      'additional_data': 'Дополнительные данные',
                      'error_country': 'Пожалуйста, выберите страну документа',
                      'error_birth_country': 'Пожалуйста, предоставьте страну рождения клиента',
                      'error_last_name': 'Пожалуйста, предоставьте фамилию клиента',
                      'error_first_name': 'Пожалуйста, предоставьте имя клиента',
                      'error_sex': 'Пожалуйста, выберите пол клиента',
                      'error_first_date': 'Пожалуйста, предоставьте дату рождения клиента',
                      'error_second_date': 'Пожалуйста, предоставьте дату окончания действительности документа',
                      'error_document_number': 'Пожалуйста, предоставьте номер документа',
                      'error_additional_data': 'Пожалуйста, предоставьте дополнительную информацию о документе',
                      'generate': 'Сгенирировать!',
                      'generated_b': 'Сгенерировано! Проверьте телеграмм бота.',
                      'loading': 'Загрузка',
                      'error': 'Неожиданная ошибка',
                      'format': 'Формат',
                      'buy_label': 'Купить',
                      'text_buy_label': '<b>Внимание!</b> Вы генерируете штрихкоды для шаблона документа, показанного выше. Пожалуйста, убедитесь, что у вас правильный шаблон или TEMPLATE_NAME у нас.',
                      'light': 'Светлая',
                      'dark': 'Тёмная',
                      'new_generation': 'Новая генерация!'
                   },  
                   'ua':
                    { 'auto': 'Авто',
                      'additional_data': 'Додаткові дані',
                      'error_country': 'Оберіть, будь ласка, країну документу',
                      'error_birth_country': 'Надайте, будь ласка, країну народження клієнта',
                      'error_last_name': 'Надайте, будь ласка, призвище клієнта',
                      'error_first_name': 'Надайте, будь ласка, ім\'я клієнта',
                      'error_sex': 'Оберіть, будь ласка, стать клієнта',
                      'error_first_date': 'Надайте, будь ласка, дату народження клієнта',
                      'error_second_date': 'Надайте, будь ласка, термін придатності документу',
                      'error_document_number': 'Надайте, будь ласка, номер документу',
                      'error_additional_data': 'Надайте, будь ласка, додаткову інформацію для документу',
                      'generate': 'Згенерувати!',
                      'generated_b': 'Згенеровано! Перевірте телеграм-бот.',
                      'loading': 'Завантаження...',
                      'error': 'Неочікувана помилка',
                      'format': 'Формат',
                      'buy_label': 'Купити',
                      'text_buy_label': '<b>Увага!</b> Ви генеруєте штрих-коди для шаблону документа, що показоно вище. Будь ласка, переконайтеся, що у вас є правильний шаблон, або TEMPLATE_NAME у нас.',
                      'light': 'Світла',
                      'dark': ' Темна',
                      'new_generation': 'Нова генерація!'
                    }, 
                  }


var country = '';


function new_toggleThemeColor() {
  var body = document.getElementById("body");
  if ( body.className == 'dark-mode') {
    body.className = "dark-mode"  == "light-mode" ? "dark-mode" : "light-mode";
  } else {
    body.className = "light-mode"  == "light-mode" ? "dark-mode" : "dark-mode";
  }
}


function toggleLight() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "dark-mode" ? "light-mode" : "light-mode";
}

function toggleDark() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "light-mode" ? "dark-mode" : "dark-mode";
}

$(".ld-mode > .btn").click(function(){
  $(".ld-mode > .btn").removeClass("active");
  $(this).addClass("active");
});

function makestr(length, what) {
    let result = '';
    const charactersLength = what.length;
    let counter = 0;
    while (counter < length) {
      result += what.charAt(Math.floor(Math.random() * charactersLength));
      counter += 1;
    }
    return result;
}

function delete_error() {
  for (var i = 0; i < document.getElementsByClassName('form_error').length; i++) {
    document.getElementsByClassName('form_error')[i].style.display = 'none';
  }
}

function change_lan(language) {
  active_language = language;
  switch(language) {  
    case 'en': 
      document.getElementById("div_with_copy").innerHTML = 'Copied!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Light';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Dark';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Please, pay attention that this is test form. For getting barcodes you required to have active subscription. You can <a href="https://t.me/pdf417mrz_bot">buy subscription</a> directly in bot.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Select Language';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Language';
      }
      document.getElementById("country_selector").innerHTML = 'Country';
      document.getElementById("country_option").innerHTML = 'Select country';
      document.getElementById("country_birth_selector").innerHTML = 'Country of birth';
      document.getElementById("lname_label").innerHTML = 'Last name';
      document.getElementById("fname_label").innerHTML = 'First name';
      document.getElementById("mname_label").innerHTML = 'Middle name';
      document.getElementById("sex_selector").innerHTML = 'Sex';
      document.getElementById("sex_option").innerHTML = 'Select sex';
      document.getElementById("u_option").innerHTML = 'Unknown';
      document.getElementById("m_option").innerHTML = 'Male';
      document.getElementById("f_option").innerHTML = 'Female';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Format: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Birthday date';
      if ( country == 'RUSINSIDE' ) {
        document.getElementById("expiry_selector").innerHTML = 'Issued date';
      } else {
        document.getElementById("expiry_selector").innerHTML = 'Expiry date';
      }
      document.getElementById("number_selector").innerHTML = 'Document number';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Auto';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Clear form!';
      }
      document.getElementById("final_button").innerHTML = 'Generate!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Additional data';
      }
    break;
    case 'cn':
      document.getElementById("div_with_copy").innerHTML = '复制了!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = '光';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '黑暗的';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = '请注意，这是测试表格。 要获取条形码，您需要有效订阅。 您可以直接在机器人中<a href="https://t.me/pdf417mrz_bot">购买订阅</a>。';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = '选择语言';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = '语言';
      }
      document.getElementById("country_selector").innerHTML = '国家';
      document.getElementById("country_option").innerHTML = '选择国家';
      document.getElementById("country_birth_selector").innerHTML = '出生国';
      document.getElementById("lname_label").innerHTML = '姓';
      document.getElementById("fname_label").innerHTML = '名';
      document.getElementById("mname_label").innerHTML = '中间名字';
      document.getElementById("sex_selector").innerHTML = '性别';
      document.getElementById("sex_option").innerHTML = '选择性别';
      document.getElementById("u_option").innerHTML = '未知';
      document.getElementById("m_option").innerHTML = '男性';
      document.getElementById("f_option").innerHTML = '女性';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = '格式: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = '生日日期';
      if ( country == 'RUSINSIDE' ) {
        document.getElementById("expiry_selector").innerHTML = '发行日期';
      } else {
        document.getElementById("expiry_selector").innerHTML = '有效期';
      }
      document.getElementById("number_selector").innerHTML = '文件号码';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = ' 汽车 ';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = '表格清晰!';
      }      
      document.getElementById("final_button").innerHTML = '产生';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = '附加数据';
      }
    break;
    case 'hi':
      document.getElementById("div_with_copy").innerHTML = 'नकल की गई!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'रोशनी';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'अँधेरा';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'कृपया ध्यान दें कि यह परीक्षण प्रपत्र है। बारकोड प्राप्त करने के लिए आपके पास सक्रिय सदस्यता होना आवश्यक है। आप सीधे बॉट में <a href="https://t.me/pdf417mrz_bot">सदस्यता खरीद सकते हैं</a>।';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'भाषा चुने';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'भाषा';
      }
      document.getElementById("country_selector").innerHTML = 'देश'; 
      document.getElementById("country_option").innerHTML = 'देश चुनें';
      document.getElementById("country_birth_selector").innerHTML = 'जन्म का देश';
      document.getElementById("lname_label").innerHTML = 'उपनाम';
      document.getElementById("fname_label").innerHTML = 'पहला नाम';
      document.getElementById("mname_label").innerHTML = 'मध्य नाम';
      document.getElementById("sex_selector").innerHTML = 'लिंग';
      document.getElementById("sex_option").innerHTML = 'लिंग का चयन करें';
      document.getElementById("u_option").innerHTML = 'अज्ञात';
      document.getElementById("m_option").innerHTML = 'नर';
      document.getElementById("f_option").innerHTML = 'महिला';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'प्रारूप: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'जन्मदिन की तारीख';
      if ( country == 'RUSINSIDE' ) {
        document.getElementById("expiry_selector").innerHTML = 'जारी करने की तारिख';
      } else {
        document.getElementById("expiry_selector").innerHTML = 'समाप्ति तिथि';
      }
      document.getElementById("number_selector").innerHTML = 'दस्तावेज़ संख्या';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'ऑटो';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'स्पष्ट प्रपत्र!';
      }   
      document.getElementById("final_button").innerHTML = 'बनाना!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'अतिरिक्त डेटा';
      }
    break;     
    case 'ru':
      document.getElementById("div_with_copy").innerHTML = 'Скопировано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Светлая';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Тёмная';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Обратите внимание, что это тестовая форма. Для получения штрих-кодов необходима активная подписка. Вы можете <a href="https://t.me/pdf417mrz_bot">купить подписку</a> прямо в боте.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Выбрать язык';
      } 
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Язык';
      }
      document.getElementById("country_selector").innerHTML = 'Страна';
      document.getElementById("country_option").innerHTML = 'Выбрать страну';
      document.getElementById("country_birth_selector").innerHTML = 'Страна рождения';
      document.getElementById("lname_label").innerHTML = 'Фамилия';
      document.getElementById("fname_label").innerHTML = 'Имя';
      document.getElementById("mname_label").innerHTML = 'Отчество'; 
      document.getElementById("sex_selector").innerHTML = 'Пол';
      document.getElementById("sex_option").innerHTML = 'Выбрать пол';
      document.getElementById("u_option").innerHTML = 'Неизвестно';
      document.getElementById("m_option").innerHTML = 'Мужчина';
      document.getElementById("f_option").innerHTML = 'Женщина';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата рождения';
      if ( country == 'RUSINSIDE' ) {
        document.getElementById("expiry_selector").innerHTML = 'Дата выдачи';
      } else {
        document.getElementById("expiry_selector").innerHTML = 'Действителен до';
      }
      document.getElementById("number_selector").innerHTML = 'Номер документа';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистить форму!';
      }  
      document.getElementById("final_button").innerHTML = 'Сгенерировать!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Дополнительные данные';
      }
    break;
    case 'ua':
      document.getElementById("div_with_copy").innerHTML = 'Скопійовано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Світла';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Темна';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Зверніть увагу, що це тестова форма. Для отримання штрих-кодів вам потрібна активна підписка. Ви можете <a href="https://t.me/pdf417mrz_bot">купити підписку</a> безпосередньо в боті.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Обрати мову';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Мова';
      }
      document.getElementById("country_selector").innerHTML = 'Країна';
      document.getElementById("country_option").innerHTML = 'Обрати країну';
      document.getElementById("country_birth_selector").innerHTML = 'Країна нарождения';
      document.getElementById("lname_label").innerHTML = 'Призвище';
      document.getElementById("fname_label").innerHTML = 'Ім\'я';
      document.getElementById("mname_label").innerHTML = 'По-батькові';
      document.getElementById("sex_selector").innerHTML = 'Стать';
      document.getElementById("sex_option").innerHTML = 'Обрати стать';
      document.getElementById("u_option").innerHTML = 'Невідомо';
      document.getElementById("m_option").innerHTML = 'Чоловік';
      document.getElementById("f_option").innerHTML = 'Жінка';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата народження';
      if ( country == 'RUSINSIDE' ) {
        document.getElementById("expiry_selector").innerHTML = 'Дата видачі';
      } else {
        document.getElementById("expiry_selector").innerHTML = 'Дійсний до';
      }
      document.getElementById("number_selector").innerHTML = 'Номер документу';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      } 
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистити форму!';
      }  
      document.getElementById("final_button").innerHTML = 'Згенерувати!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Додаткові дані';
      }
    break;   
  }

  var all_objects = document.getElementsByClassName('current_link');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].classList.remove("current_link");
  }

  if ( !generate_link.includes(" AND ") ) {
    document.getElementById("lang_"+language).classList.add("current_link");
  }

}

var generate_link = document.getElementById("act_generate").innerHTML;
var user_form = document.getElementById("user_form").innerHTML;

var active_language = document.getElementById("act_lang").innerHTML;
    change_lan(active_language);
    if( document.getElementById("lang") != null ) {
      document.getElementById("lang").value = active_language;
    }
    


function birth_country_keyup( birthday_country ) {
  var length = birthday_country.length;
  if( length > 3 ) {
    document.getElementById("country_of_birthday").value = birthday_country.substring(0,3).toUpperCase(); 
  } else {
    var last_letter = birthday_country.substring(length - 1, length);
     if ( last_letter.match(/[a-z]/i) ) {    
       document.getElementById("country_of_birthday").value = birthday_country.substring(0,length - 1) + last_letter.toUpperCase();
     }  
  }
}

function bd_onkeyup(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 1 && last_char != 1  && last_char != 0) {
      document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value + '/';
    } else if ( elem_length == 2 ) {
      var elem_month = parseInt(elem.value.substring(0,2));
      if ( elem_month >= 0 && elem_month <= 12) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = '';
      }
    } else if ( elem_length == 5 ) {
      var elem_day = parseInt(elem.value.substring(3,5));
      var elem_month = parseInt(elem.value.substring(0,2));

      if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3);
      }

    } else if ( elem_length == 10 ) {
      if ( elem.id == 'bdate' ) {
        document.getElementById('edate').focus();
      } else if ( elem.id == 'edate' && country == 'NLD') {
        var year_expiration = parseInt(document.getElementById("edate").value.substring(6,10));
        console.log(year_expiration);
        var issue_date = year_expiration - 10;
        if ( issue_date >= 2014 ) {
          document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><input class="inputer_with_auto inputer" type="text" id="additional_data"><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
        } else {
          document.getElementById("add_data_html").innerHTML = '';
        }
      }
    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 5 && e.which == 191  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3) + '0' + document.getElementById(elem.id).value.substring(3,4) + '/';
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } 
 
}

function bd_onkeyup_eur(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 2 ) {
      var elem_day = parseInt(elem.value.substring(0,2));
      if ( elem_day > 31 ) {
        document.getElementById(elem.id).value = prev_value;
      }
    } else if ( elem_length == 3 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 5 ) {

      var elem_day = parseInt(elem.value.substring(0,2));
      var elem_month = parseInt(elem.value.substring(3,5));

      if ( elem_month > 12 || elem_month < 1 ) {
        document.getElementById(elem.id).value = prev_value;
      } else if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '.';
        }
      } else {
        document.getElementById(elem.id).value = prev_value;
      }

    } else if ( elem_length == 6 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 10 ) {

      if ( elem.id == 'bdate' ) {
        document.getElementById('edate').focus();
      } else if ( elem.id == 'edate' && country == 'NLD') {
        var year_expiration = parseInt(document.getElementById("edate").value.substring(6,10));
        var issue_date = year_expiration - 10;
        if ( issue_date >= 2014 ) {
          document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><input class="inputer_with_auto inputer" type="text" id="additional_data"><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
        } else {
          document.getElementById("add_data_html").innerHTML = '';
        }
      }

    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }

  } else if ( elem_length == 2 && e.which == 190  ) {
    document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value.substring(0,1) + '.';
  } else if ( elem_length == 3 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value;
  } else if ( elem_length == 5 && e.which == 190  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,2) + '.0' + document.getElementById(elem.id).value.substring(3,4) + '.';
    
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 6 && e.which == 190 ) {
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.0' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    if ( elem.id == 'bdate' ) {
      document.getElementById('edate').focus();
    } else if ( elem.id == 'edate' && country == 'NLD') {
      var year_expiration = parseInt(document.getElementById("edate").value.substring(6,10));
      var issue_date = year_expiration - 10;
      if ( issue_date >= 2014 ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><input class="inputer_with_auto inputer" type="text" id="additional_data"><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }
    }
  } else if ( elem_length > 10 ) {
    document.getElementById(elem.id).value = '';
  }
 
}

function change_date_format() {

  if ( format_type == 'USA' ) {
    format_type = 'EUR';
    document.getElementById('bdate').placeholder='DD.MM.YYYY';
    document.getElementById('edate').placeholder='DD.MM.YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
  } else {
    format_type = 'USA'; 
    document.getElementById('bdate').placeholder='MM/DD/YYYY';
    document.getElementById('edate').placeholder='MM/DD/YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event)');
  }

  for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
    document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
  }

  if ( document.getElementById('bdate').value.length != 10 ) {
    document.getElementById('bdate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "/" + document.getElementById('bdate').value.substring(0,2)  + "/" + document.getElementById('bdate').value.substring(6,10);
      } else {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "." + document.getElementById('bdate').value.substring(0,2)  + "." + document.getElementById('bdate').value.substring(6,10);
      }
    } else {
      document.getElementById('bdate').value = '';
    }

  }

  if ( document.getElementById('edate').value.length != 10 ) {
    document.getElementById('edate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('edate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('edate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('edate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "/" + document.getElementById('edate').value.substring(0,2)  + "/" + document.getElementById('edate').value.substring(6,10);
      } else {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "." + document.getElementById('edate').value.substring(0,2)  + "." + document.getElementById('edate').value.substring(6,10);
      }
    } else {
      document.getElementById('edate').value = '';
    }

  }

}

var format_type = document.getElementById("date_format_u").innerHTML;

if ( format_type == 'USA' ) {
  document.getElementById('bdate').onclick ='MM/DD/YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event);');
  document.getElementById('edate').placeholder='MM/DD/YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event);');

} else {
  document.getElementById('bdate').placeholder='DD.MM.YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
  document.getElementById('edate').placeholder='DD.MM.YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
}

for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
  document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
}

function randomDate(start, end) {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

function addYears(date, years) {
  date.setFullYear(date.getFullYear() + years);

  return date;
}

function generate_bdate() {
  var bd = randomDate(new Date(1945, 0, 1), new Date(2006, 0, 1));

  var bgenday = String(bd.getDate());
  if (bgenday.length == 1 ) {
    bgenday = "0" + bgenday;
  }

  var bgenmonth = String(bd.getMonth() + 1);
  if (bgenmonth.length == 1 ) {
    bgenmonth = "0" + bgenmonth;
  }

  var bgenyear = String(bd.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('bdate').value= bgenmonth + '/' + bgenday + '/' + bgenyear;
  } else {
    document.getElementById('bdate').value= bgenday + '.' + bgenmonth + '.' + bgenyear;
  }

}

function generate_edate() {
  var enddate = addYears(new Date(), 4);
  var ed = randomDate(new Date(), enddate);

  var egenday = String(ed.getDate());
  if (egenday.length == 1 ) {
    egenday = "0" + egenday;
  }

  var egenmonth = String(ed.getMonth() + 1);
  if (egenmonth.length == 1 ) {
    egenmonth = "0" + egenmonth;
  }

  var egenyear = String(ed.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('edate').value= egenmonth + '/' + egenday + '/' + egenyear;
  } else {
    document.getElementById('edate').value= egenday + '.' + egenmonth + '.' + egenyear;
  }

}

if (  generate_link.includes(" AND ") ) {
  var country_selection = generate_link.split(' AND ')[0];
  document.getElementById("country").value = country_selection;
  select_country(country_selection);
  document.getElementById("country").disabled = true;
} 

function select_country(selection) {
  if ( selection == 'RUSINSIDE' ) {
    document.getElementById("country_of_birthday").value = 'RUS';
  } else {
    document.getElementById("country_of_birthday").value = selection;
  }
    
  country = selection;
  switch(active_language) {      
    case 'en':
      document.getElementById("expiry_selector").innerHTML = 'Expired date';
    break;
    case 'cn':
      document.getElementById("expiry_selector").innerHTML = '有效期';
    break;
    case 'hi':
      document.getElementById("expiry_selector").innerHTML = 'समाप्ति तिथि';
    break;
    case 'ru':
      document.getElementById("expiry_selector").innerHTML = 'Действителен до';
    break;
    case 'ua':
      document.getElementById("expiry_selector").innerHTML = 'Дійсний до';
    break;
  }
  switch (selection) {
    case 'USA':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2006';
    break;
    case 'ARM':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'AUS':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2014';
    break;
    case 'ARG':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'AUT':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2014';
    break;
    case 'BGD':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'BLR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'BEl':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'BRA':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2015';
    break; 
    case 'BGR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2010';
    break;
    case 'CAN':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2013';
    break;
    case 'CMR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'CHN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break; 
    case 'HRV':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'CZE':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'CZE':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'DNK':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'DOM':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'EGY':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'EST':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2014';
    break;            
    case 'FIN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2017';
    break;
    case 'FRA':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2006';
    break; 
    case 'GEO':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'DEU':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2017';
    break;
    case 'GRC':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'IND':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'IRL':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break; 
    case 'ISR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'ITA':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2010';
    break;
    case 'HUN':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'KAZ':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'KEN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'KGZ':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'LVA':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2015';
    break;      
    case 'LTU':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2011';
    break;
    case 'MLT':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'MEX':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'MDA':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'NLD':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2014';
    break;
    case 'NZL':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break; 
    case 'NOR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2011';
    break; 
    case 'POL':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2018';
    break;
    case 'PRT':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'ROU':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2008';
    break;
    case 'RUS':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2010';
    break;
    case 'RUSINSIDE':
      switch(active_language) {      
        case 'en':
          document.getElementById("expiry_selector").innerHTML = 'Issued date';
        break;
        case 'cn':
          document.getElementById("expiry_selector").innerHTML = '发行日期';
        break;
        case 'hi':
          document.getElementById("expiry_selector").innerHTML = 'जारी करने की तारिख';
        break;
        case 'ru':
          document.getElementById("expiry_selector").innerHTML = 'Дата выдачи';
        break;
        case 'ua':
          document.getElementById("expiry_selector").innerHTML = 'Дата видачі';
        break;
      }
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2010';
    break;                
    case 'SRB':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'SGP':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'SVN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2016';
    break;
    case 'ZAF':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'ESP':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2015';
    break; 
    case 'SWE':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2012';
    break;
    case 'CHE':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '';
    break;
    case 'TKM':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'UKR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2015';
    break;
    case 'GBR':
      document.getElementById("add_data_html").innerHTML = '';
      var revision = '2020';
    break;                     
    case 'UZB':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'VEN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'VNM':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additional_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additional_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;         
  }

  selected_revision( country, revision );

}

function selected_revision( sel_country, sel_revision ) {

  var revision_in_public_format = sel_revision;

  if ( revision_in_public_format == '' ) {
    revision_in_public_format = '2000'
  }

     
  var send_http_for_template = new XMLHttpRequest();
  var params_for_template = 'country='+sel_country+'&state=XX&revision='+revision_in_public_format+'&type=Passport';

         send_http_for_template.open('POST', 'https://pdf417mrz.xyz/api/find-template', true);
         send_http_for_template.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
         send_http_for_template.onreadystatechange = function() {
         if(send_http_for_template.readyState == 4 && send_http_for_template.status == 200) {

          var result_data_for_template = JSON.parse(send_http_for_template.responseText);
               
          switch (result_data_for_template.type) {
          case 1:
            var link_for_template = "https://pdf417mrz.xyz/";

            switch(active_language) {
             case 'cn':
              link_for_template += active_language+'/';
              var seo_link_name = '购买 '+result_data_for_template.title;
              break;
             case 'hi':
              link_for_template += active_language+'/';
              var seo_link_name = result_data_for_template.title+' खरीदें';
              break;
             case 'ru':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купить '+result_data_for_template.title;
              break;
             case 'ua':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купити '+result_data_for_template.title;
              break;
             default:
              var seo_link_name = 'Buy '+result_data_for_template.title;
              break;
            }

            link_for_template += 'psd-templates/'+result_data_for_template.handle;

            document.getElementById('left_column_result').innerHTML = '<div class="col-sm-6 col-md-3 col-lg-3"><div class="shop-item"><div class="shop-item-image"><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.front+'" alt="'+result_data_for_template.title+'"/><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.back+'" alt="'+result_data_for_template.title+' - Seond image"/><div class="shop-item-detail"><a href="'+link_for_template+'" target="_blank" class="btn btn-round btn-b"><span class="icon-basket">'+languages[active_language]['buy_label']+'</span></a></div></div><h4 class="shop-item-title font-alt"><a href="'+link_for_template+'">'+result_data_for_template.title+' - '+result_data_for_template.price+'$</a></h4>'+languages[active_language]['text_buy_label'].replace('TEMPLATE_NAME','<a target="_blank" href="'+link_for_template+'">'+seo_link_name+'</a>' )+'</div></div>';
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button><button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
            }
          break;
          default:
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button>';
            }
          break;
          }

         } else if (send_http_for_template.readyState == 4 && send_http_for_template.status == 404) {
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
            }
         }
        };

        send_http_for_template.send(params_for_template);      
}

function generate_document() {
  switch (country) {
    case 'USA':
      if ( document.getElementById("edate").value.length != 10  ) {      
        document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
      var year_expiration_checked_gen = parseInt(document.getElementById("edate").value.substring(6,10));
      var issue_date_add_gen = year_expiration_checked_gen - 10;
      if ( issue_date_add_gen >= 2021 ) {
        document.getElementById("doc_number").value = 'A00' + makestr(6, digits);
      } else if ( issue_date_add_gen >= 2016 && issue_date_add_gen < 2021 ) {
        document.getElementById("doc_number").value = '5' + makestr(8, digits);
      } else {
        document.getElementById("doc_number").value = makestr(9, digits);
      }      
    break;
    case 'ARM':
      document.getElementById("doc_number").value = 'A' + makestr(1, letters) + makestr(7, digits);
    break;
    case 'AUS':
      document.getElementById("doc_number").value = 'PA' + makestr(7, digits);
    break;
    case 'ARG':
      document.getElementById("doc_number").value = makestr(3, letters) + makestr(6, digits);
    break;
    case 'AUT':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'BGD':
      document.getElementById("doc_number").value = 'BN' + makestr(7, digits);
    break;
    case 'BLR':
      document.getElementById("doc_number").value = 'KB' + makestr(7, digits);
    break;
    case 'BEL':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'BRA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'BGR':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'CAN':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'CMR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'CHN':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'HRV':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'CZE':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'DNK':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'DOM':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'EGY':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(8, digits);
    break; 
    case 'EST':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;            
    case 'FIN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'FRA':
      if ( document.getElementById("edate").value.length != 10  ) {      
        document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
      var year_expiration_checked_gen = parseInt(document.getElementById("edate").value.substring(6,10));
      var issue_date_add_gen = year_expiration_checked_gen - 10;
      var issue_date_add_gen_string = String(issue_date_add_gen);

      var fra_series = ['CA','CK','DE','CH','BE','AD','CP','CT','CL','FD'];
      document.getElementById("doc_number").value = issue_date_add_gen_string.substring(2,4) + fra_series[Math.floor(Math.random()*fra_series.length)] + makestr(5, digits);
    break;
    case 'GEO':
      document.getElementById("doc_number").value = makestr(2, digits) + makestr(2, letters) + makestr(5, digits);
    break;
    case 'DEU':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(1, digits) + makestr(3, letters) + makestr(2, digits) + makestr(2, letters);
    break;
    case 'GRC':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'IND':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(7, digits);
    break;
    case 'IRL':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(7, digits);
    break;
    case 'ISR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'ITA':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'HUN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'KAZ':
      document.getElementById("doc_number").value = makestr(1, letters) +  makestr(8, digits);
    break;
    case 'KEN':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'KGZ':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break; 
    case 'LVA':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;               
    case 'LTU':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'MLT':
      document.getElementById("doc_number").value = makestr(7, digits);
    break;
    case 'MEX':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'MDA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'NLD':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(3, digits) + makestr(2, letters) + makestr(2, digits);
    break;
    case 'NZL':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(6, digits);
    break;
    case 'NOR':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'POL':
      document.getElementById("doc_number").value = makestr(2, letters) +  makestr(7, digits);
    break;
    case 'PRT':
      document.getElementById("doc_number").value = makestr(7, digits);
    break;
    case 'ROU':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'RUS':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'RUSINSIDE':
      document.getElementById("doc_number").value = makestr(10, digits);
    break;       
    case 'SRB':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'SGP':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits) + makestr(1, letters);
    break;
    case 'SVN':
      document.getElementById("doc_number").value = "P" + makestr(1, letters) + makestr(7, digits);
    break;
    case 'ZAF':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'ESP':
      document.getElementById("doc_number").value = 'P' + makestr(2, letters) + makestr(6, digits);
    break;
    case 'SWE':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'CHE':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'TKM':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;
    case 'UKR':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(6, digits);
    break;
    case 'GBR':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;            
    case 'UZB':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'VEN':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'VNM':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(7, digits);
    break;      
  } 
}


function document_number_copy(e) {
  if( document.getElementById("doc_number").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("doc_number").focus();
    document.getElementById("doc_number").select();

    navigator.clipboard.writeText(document.getElementById("doc_number").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_additional() {
  switch (country) {
    case 'USA':
      document.getElementById("additional_data").value = makestr(9, digits) + '<' + makestr(4, digits);
    break;
    case 'AUS':
      document.getElementById("additional_data").value = makestr(8, digits) + makestr(1, letters);
    break;
    case 'ARG':
      document.getElementById("additional_data").value = makestr(8, digits);
    break;
    case 'BLR':
      document.getElementById("additional_data").value = makestr(14, all_char);
    break;
    case 'BGR':
      document.getElementById("additional_data").value = makestr(10, digits);
    break;
    case 'CMR':
      if ( document.getElementById("sex").value.length != 1 ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);   
        return;
      }

      document.getElementById("additional_data").value =  document.getElementById("sex").value + makestr(7, digits);
    break;
    case 'CHN':
      document.getElementById("additional_data").value = makestr(14, letters);
    break;
    case 'CZE':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      }    

      document.getElementById("additional_data").value = document.getElementById("bdate").value.substring(8,10) + elem_month + elem_day + '/' + makestr(4, digits);
    break;
    case 'DNK':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      } 

      document.getElementById("additional_data").value = elem_day + elem_month + document.getElementById("bdate").value.substring(8,10) + '-' + makestr(4, digits);
    break;
    case 'DOM':
      document.getElementById("additional_data").value = makestr(3, digits) + "-" + makestr(7, digits) + "-" + makestr(1, digits);
    break;
    case 'EST':
      document.getElementById("additional_data").value = makestr(11, digits);
    break;       
    case 'FIN':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      }   
      document.getElementById("additional_data").value = elem_day + elem_month + document.getElementById("bdate").value.substring(8,10) + '-' + makestr(4, digits);
    break;
    case 'ISR':
      document.getElementById("additional_data").value = makestr(1, digits) + '-' + makestr(7, digits) + '-' + makestr(1, digits);
    break;
    case 'KAZ':
      document.getElementById("additional_data").value = makestr(12, digits);
    break;
    case 'KEN':
      document.getElementById("additional_data").value = makestr(7, digits);
    break;
    case 'KGZ':
      document.getElementById("additional_data").value = makestr(14, digits);
    break;
    case 'LVA':
      document.getElementById("additional_data").value = makestr(6, digits) + '-' +  makestr(5, digits);
    break;             
    case 'LTU':
      document.getElementById("additional_data").value = makestr(11, digits);
    break;
    case 'MLT':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("sex").value.length != 1 ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);   
        return;
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      }   
      document.getElementById("additional_data").value = document.getElementById("bdate").value.substring(8,10) + elem_month + elem_day + makestr(1, digits) + document.getElementById("sex").value;
    break;
    case 'MDA':
      document.getElementById("additional_data").value = makestr(13, digits);
    break;
    case 'NLD':
      document.getElementById("additional_data").value = makestr(9, digits);
    break;
    case 'NOR':
      document.getElementById("additional_data").value = makestr(14, digits);
    break;
    case 'PRT':
      document.getElementById("additional_data").value = makestr(8, digits);
    break;
    case 'ROU':
      document.getElementById("additional_data").value = makestr(13, digits);
    break;
    case 'RUSINSIDE':
      document.getElementById("additional_data").value = makestr(3, digits) + '-' + makestr(3, digits);
    break;                
    case 'SRB':
      document.getElementById("additional_data").value = makestr(13, digits);
    break;
    case 'SGP':
      document.getElementById("additional_data").value = "S" + makestr(7, digits) + makestr(1, letters);
    break;
    case 'SVN':
      document.getElementById("additional_data").value = makestr(13, digits);
    break;
    case 'ZAF':
      document.getElementById("additional_data").value = makestr(13, digits);
    break;
    case 'ESP':
      document.getElementById("additional_data").value = makestr(1, letters) + makestr(10, digits);
    break;
    case 'SWE':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      }      
      document.getElementById("additional_data").value = document.getElementById("bdate").value.substring(8,10) + elem_month + elem_day + '-' + makestr(4, digits);
    break;
    case 'TKM':
      document.getElementById("additional_data").value = makestr(2, letters) + makestr(8, digits);
    break;
    case 'UKR':
      if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var elem_day = document.getElementById('bdate').value.substring(3,5);
        var elem_month = document.getElementById('bdate').value.substring(0,2);
      } else {
        var elem_day = document.getElementById('bdate').value.substring(0,2);
        var elem_month = document.getElementById('bdate').value.substring(3,5);
      }    
      document.getElementById("additional_data").value = document.getElementById("bdate").value.substring(6,10) + elem_month + elem_day + '-' + makestr(5, digits);
    break;                 
    case 'UZB':
      document.getElementById("additional_data").value = makestr(14, digits);
    break;
    case 'VEN':
      document.getElementById("additional_data").value = makestr(8, digits);
    break;
    case 'VNM':
      document.getElementById("additional_data").value = makestr(9, digits);
    break;                  
  }     
}

function additional_number_copy(e) {
  if( document.getElementById("additional_data").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("additional_data").focus();
    document.getElementById("additional_data").select();

    navigator.clipboard.writeText(document.getElementById("additional_data").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}

function reset_form() {

  if (  generate_link.includes(" AND ") ) {
    document.getElementById('left_column_result').innerHTML = '';
    document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
  } else {
    document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
    document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
  }

  document.getElementById("true_good_form").reset();
  document.getElementById("add_data_html").innerHTML = '';
  if ( document.getElementById("final_button").disabled ) {
    document.getElementById("final_button").classList.add('generate_button');
    document.getElementById("final_button").classList.remove('stopped_button');
    document.getElementById("final_button").disabled = false;
    document.getElementById("final_button").innerHTML = languages[active_language]['generate']; 
  }
  document.getElementById("lang").value = active_language;
}

function generate(generation_type) {
  if ( document.getElementById("country").value.length != 3 && document.getElementById("country").value != 'RUSINSIDE'  ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("country_of_birthday").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_birth_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country_of_birthday").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("lname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_last_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("lname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("fname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_first_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("fname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("sex").value.length != 1 ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_sex'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("sex").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("bdate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("bdate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("edate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("edate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("doc_number").value.length <= 0  ) {
    document.getElementById("error_four").innerHTML = languages[active_language]['error_document_number'];
    document.getElementById("error_four").style.display = 'block';
    document.getElementById("doc_number").focus();
    setTimeout(delete_error, 3000);
    return;      
  }  

  if ( country == 'USA' || country == 'AUS' || country == 'BLR' || country == 'BGR' || country == 'CMR' ||
       country == 'CHN' || country == 'CZE' || country == 'DNK' || country == 'DOM' || country == 'EST' ||
       country == 'FIN' || country == 'ISR' || country == 'KAZ' || country == 'KEN' || country == 'KGZ' ||
       country == 'LVA' || country == 'LTU' || country == 'MLT' || country == 'MDA' || country == 'NOR' || 
       country == 'PRT' || country == 'ROU' || country == 'SRB' || country == 'SGP' || country == 'SVN' || 
       country == 'ZAF' || country == 'ESP' || country == 'SWE' || country == 'TKM' || country == 'UKR' ||
       country == 'UZB' || country == 'VEN' || country == 'VNM' || country == 'ARG' || country == 'RUSINSIDE' ) {
    if ( document.getElementById("additional_data").value.length <= 0  ) {
      document.getElementById("error_four").innerHTML = languages[active_language]['error_additional_data'];
      document.getElementById("error_four").style.display = 'block';
      document.getElementById("additional_data").focus();
      setTimeout(delete_error, 3000);
      return;      
    }    
  } else if ( country == 'NLD' ) {
    var year_expiration_checked = parseInt(document.getElementById("edate").value.substring(6,10));
    var issue_date_checked = year_expiration_checked - 10;
    if (  issue_date_checked >= 2014 ) {
      if ( document.getElementById("additional_data").value.length <= 0  ) {
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additional_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additional_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }  
    }
  }

  var country_ed = document.getElementById("country").value;
  var lname_ed = document.getElementById("lname").value.toUpperCase().replaceAll(' ', '');
  var name = document.getElementById("fname").value.toUpperCase().replaceAll(' ', '');
    if ( document.getElementById("mname").value.length > 0 ) {
      name += ' '+document.getElementById("mname").value.toUpperCase().replaceAll(' ', '');
    }
  var doc_num_ed = document.getElementById("doc_number").value;
  var birthday_country_ed = document.getElementById("country_of_birthday").value;
  if ( format_type == 'USA' ) {
    var bdate_ed = document.getElementById("bdate").value;
  } else {
    var bdate_ed = document.getElementById("bdate").value.substring(3,5) + '/' + document.getElementById("bdate").value.substring(0,2) + '/' + document.getElementById("bdate").value.substring(6,10);
  }
  var sex_ed = document.getElementById("sex").value;
  if ( format_type == 'USA' ) {
    var edate_ed = document.getElementById("edate").value;
  } else {
    var edate_ed = document.getElementById("edate").value.substring(3,5) + '/' + document.getElementById("edate").value.substring(0,2) + '/' + document.getElementById("edate").value.substring(6,10);
  } 

  var final_line = country_ed + ';' + lname_ed + ';' + name + ';' + doc_num_ed + ';' + birthday_country_ed + ';' + bdate_ed + ';' + sex_ed + ';' + edate_ed;
  
  if ( country == 'USA' || country == 'AUS' || country == 'BLR' || country == 'BGR' || country == 'CMR' ||
       country == 'CHN' || country == 'CZE' || country == 'DNK' || country == 'DOM' || country == 'EST' ||
       country == 'FIN' || country == 'ISR' || country == 'KAZ' || country == 'KEN' || country == 'KGZ' ||
       country == 'LVA' || country == 'LTU' || country == 'MLT' || country == 'MDA' || country == 'NOR' || 
       country == 'PRT' || country == 'ROU' || country == 'SRB' || country == 'SGP' || country == 'SVN' || 
       country == 'ZAF' || country == 'ESP' || country == 'SWE' || country == 'TKM' || country == 'UKR' ||
       country == 'UZB' || country == 'VEN' || country == 'VNM' || country == 'ARG' || country == 'RUSINSIDE' ) {
    final_line += ';' + document.getElementById("additional_data").value;
  } else if ( country == 'NLD' ) {
    var year_expiration_add = parseInt(document.getElementById("edate").value.substring(6,10));
    var issue_date_add = year_expiration_add - 10;
    if ( issue_date_add >= 2014 ) {
      final_line += ';' + document.getElementById("additional_data").value + ';2014';
    } else {
      final_line += ';0;2009';
    }
  }

  final_line += ';' + format_type;

  if ( generation_type == 1 ) {

    var send_http = new XMLHttpRequest();
    var params = 'user_form='+user_form+'&params='+final_line;

        send_http.open('POST', generate_link, true);
        send_http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        send_http.onreadystatechange = function() {
        if(send_http.readyState == 4 && send_http.status == 200) {
          var result_data = JSON.parse(send_http.responseText);
               
          switch (result_data.type) {
          case 1:
            document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
          break;
          default:
            document.getElementById("final_button").innerHTML = result_data.type + ' - ' +languages[active_language]['error']; 
          break;
          }

        }
        };

        send_http.send(params);  
   
    
        document.getElementById("final_button").classList.add('stopped_button');
        document.getElementById("final_button").classList.remove('generate_button');

        document.getElementById("final_button").disabled = true;
        document.getElementById("final_button").innerHTML = languages[active_language]['loading'];

  } else {
    window.location.href = "https://t.me/pdf417mrz_bot";
  }
  
}function pdf417_change_examples(country) {
  document.getElementById("empty_state").style.display = 'none';
  document.getElementById("search_inp_val").value = '';
  var all_nav_objects = document.getElementsByClassName('category_sel');
  for (let x = 0; x < all_nav_objects.length; x++) {
    all_nav_objects[x].classList.remove("current_cat_cel");
  }
  document.getElementById(country).classList.add("current_cat_cel");  
  var all_objects = document.getElementsByClassName('all');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].style.display = 'none';
  }
  var objects = document.getElementsByClassName(country);
  for (let i = 0; i < objects.length; i++) {
    if ( objects[i].id != 'empty_state' ) {
        objects[i].style.display = 'inline-block';
    }
  }
}

function search_pdf417(what_search) {
  if(what_search.length >= 2) {
    var all_nav_objects = document.getElementsByClassName('category_sel');
    for (let x = 0; x < all_nav_objects.length; x++) {
        all_nav_objects[x].classList.remove("current_cat_cel");
    }
    var all_objects = document.getElementsByClassName('all');
    var empty_yes = 0;
    for (let z = 0; z < all_objects.length; z++) {
        if( all_objects[z].innerHTML.search(what_search.toUpperCase()) > 0 && all_objects[z].id != 'empty_state' ) {
            all_objects[z].style.display = 'inline-block';
            empty_yes = 1;
        } else {
            all_objects[z].style.display = 'none';
        }
    }
    if (empty_yes == 0) {
      document.getElementById("empty_state").style.display = 'inline-block';
    }
    if (typeof dataLayer == 'object') { 
          dataLayer.push({ 'event':'pdf417_search', 'search_string': what_search });
    }
  } else if ( what_search.length == 0 ) {
    pdf417_change_examples('all');
  }
}


function mrz_change_examples(what_type) {
  document.getElementById("empty_state").style.display = 'none';
  document.getElementById("search_inp_val").value = '';
  var all_nav_objects = document.getElementsByClassName('category_sel');
  for (let x = 0; x < all_nav_objects.length; x++) {
    all_nav_objects[x].classList.remove("current_cat_cel");
  }
  document.getElementById(what_type).classList.add("current_cat_cel");  
  var all_objects = document.getElementsByClassName('all');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].style.display = 'none';
    if(all_objects[z].classList.contains("passport")) {
      all_objects[z].innerHTML = all_objects[z].innerHTML.replace("PASSPORT - ", "");
    } else if(all_objects[z].classList.contains("id")) {
      all_objects[z].innerHTML = all_objects[z].innerHTML.replace("ID-CARD - ", "");
    } else if(all_objects[z].classList.contains("visa")) {
      all_objects[z].innerHTML = all_objects[z].innerHTML.replace("VISA - ", "");
    }
  }
  var objects = document.getElementsByClassName(what_type);
  for (let i = 0; i < objects.length; i++) {
    if ( objects[i].id != 'empty_state' ) {
        objects[i].style.display = 'inline-block';
        if ( what_type == 'all' ) {
          if(document.getElementsByClassName('option_sel')[i].classList.contains("passport")) {         
            document.getElementsByClassName('option_sel')[i].innerHTML = "PASSPORT - " + document.getElementsByClassName('option_sel')[i].innerHTML;
          } else if(document.getElementsByClassName('option_sel')[i].classList.contains("id")) {
            document.getElementsByClassName('option_sel')[i].innerHTML = "ID-CARD - " +  document.getElementsByClassName('option_sel')[i].innerHTML;
          } else if(document.getElementsByClassName('option_sel')[i].classList.contains("visa")) {
            document.getElementsByClassName('option_sel')[i].innerHTML = "VISA - " + document.getElementsByClassName('option_sel')[i].innerHTML;
          }
        }
    }
  }
}


function search_mrz(what_search) {
  if(what_search.length >= 2) {
    var all_nav_objects = document.getElementsByClassName('category_sel');
    for (let x = 0; x < all_nav_objects.length; x++) {
        all_nav_objects[x].classList.remove("current_cat_cel");
    }
    var all_objects = document.getElementsByClassName('all');
    var empty_yes = 0;
    for (let z = 0; z < all_objects.length; z++) {     
        all_objects[z].style.display = 'none';
        if(all_objects[z].classList.contains("passport")) {
            all_objects[z].innerHTML = all_objects[z].innerHTML.replace("PASSPORT - ", "");
        } else if(all_objects[z].classList.contains("id")) {
            all_objects[z].innerHTML = all_objects[z].innerHTML.replace("ID-CARD - ", "");
        } else if(all_objects[z].classList.contains("visa")) {
            all_objects[z].innerHTML = all_objects[z].innerHTML.replace("VISA - ", "");
        }
    }    
    for (let z = 0; z < all_objects.length; z++) {
        if( all_objects[z].innerHTML.search(what_search.toUpperCase()) > 0 && all_objects[z].id != 'empty_state' ) {
            all_objects[z].style.display = 'inline-block';
            empty_yes = 1;
            if(document.getElementsByClassName('option_sel')[z].classList.contains("passport")) {         
              document.getElementsByClassName('option_sel')[z].innerHTML = "PASSPORT - " + document.getElementsByClassName('option_sel')[z].innerHTML;
            } else if(document.getElementsByClassName('option_sel')[z].classList.contains("id")) {
              document.getElementsByClassName('option_sel')[z].innerHTML = "ID-CARD - " +  document.getElementsByClassName('option_sel')[z].innerHTML;
            } else if(document.getElementsByClassName('option_sel')[z].classList.contains("visa")) {
              document.getElementsByClassName('option_sel')[z].innerHTML = "VISA - " + document.getElementsByClassName('option_sel')[z].innerHTML;
            }
        } 
    }
    if (empty_yes == 0) {
      document.getElementById("empty_state").style.display = 'inline-block';
    }
    if (typeof dataLayer == 'object') { 
          dataLayer.push({ 'event':'mrz_search', 'search_string': what_search });
    }
  } else if ( what_search.length == 0 ) {
    mrz_change_examples('all');
  }
}

function activate_navigation (what_nav) {

    var all_objects = document.getElementsByClassName('navigation_faq');

    for (let z = 0; z < all_objects.length; z++) {

        all_objects[z].classList.remove("active_navigation");

    }

    document.getElementById(what_nav).classList.add('active_navigation');

}

/* ---------------------------------------------- /*
 * Preloader
 /* ---------------------------------------------- */
(function(){
    $(window).on('load', function() {
        $('.loader').fadeOut();
        $('.page-loader').delay(350).fadeOut('slow');
    });

    $(document).ready(function() {

        /* ---------------------------------------------- /*
         * WOW Animation When You Scroll
         /* ---------------------------------------------- */

        wow = new WOW({
            mobile: false
        });
        wow.init();


        /* ---------------------------------------------- /*
         * Scroll top
         /* ---------------------------------------------- */

        $(window).scroll(function() {
            if ($(this).scrollTop() > 100) {
                $('.scroll-up').fadeIn();
            } else {
                $('.scroll-up').fadeOut();
            }
        });

        $('a[href="#totop"]').click(function() {
            $('html, body').animate({ scrollTop: 0 }, 'slow');
            return false;
        });


        /* ---------------------------------------------- /*
         * Initialization General Scripts for all pages
         /* ---------------------------------------------- */

        var homeSection = $('.home-section'),
            navbar      = $('.navbar-custom'),
            navHeight   = navbar.height(),
            worksgrid   = $('#works-grid'),
            width       = Math.max($(window).width(), window.innerWidth),
            mobileTest  = false;

        if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            mobileTest = true;
        }

        buildHomeSection(homeSection);
        navbarAnimation(navbar, homeSection, navHeight);
        navbarSubmenu(width);
        hoverDropdown(width, mobileTest);

        $(window).resize(function() {
            var width = Math.max($(window).width(), window.innerWidth);
            buildHomeSection(homeSection);
            hoverDropdown(width, mobileTest);
        });

        $(window).scroll(function() {
            effectsHomeSection(homeSection, this);
            navbarAnimation(navbar, homeSection, navHeight);
        });

        /* ---------------------------------------------- /*
         * Set sections backgrounds
         /* ---------------------------------------------- */

        var module = $('.home-section, .module, .module-small, .side-image');
        module.each(function(i) {
            if ($(this).attr('data-background')) {
                $(this).css('background-image', 'url(' + $(this).attr('data-background') + ')');
            }
        });

        /* ---------------------------------------------- /*
         * Home section height
         /* ---------------------------------------------- */

        function buildHomeSection(homeSection) {
            if (homeSection.length > 0) {
                if (homeSection.hasClass('home-full-height')) {
                    homeSection.height($(window).height());
                } else {
                    homeSection.height($(window).height() * 0.85);
                }
            }
        }


        /* ---------------------------------------------- /*
         * Home section effects
         /* ---------------------------------------------- */

        function effectsHomeSection(homeSection, scrollTopp) {
            if (homeSection.length > 0) {
                var homeSHeight = homeSection.height();
                var topScroll = $(document).scrollTop();
                if ((homeSection.hasClass('home-parallax')) && ($(scrollTopp).scrollTop() <= homeSHeight)) {
                    homeSection.css('top', (topScroll * 0.55));
                }
                if (homeSection.hasClass('home-fade') && ($(scrollTopp).scrollTop() <= homeSHeight)) {
                    var caption = $('.caption-content');
                    caption.css('opacity', (1 - topScroll/homeSection.height() * 1));
                }
            }
        }

        /* ---------------------------------------------- /*
         * Intro slider setup
         /* ---------------------------------------------- */

        if( $('.hero-slider').length > 0 ) {
            $('.hero-slider').flexslider( {
                animation: "fade",
                animationSpeed: 1000,
                animationLoop: true,
                prevText: '',
                nextText: '',
                before: function(slider) {
                    $('.titan-caption').fadeOut().animate({top:'-80px'},{queue:false, easing: 'swing', duration: 700});
                    slider.slides.eq(slider.currentSlide).delay(500);
                    slider.slides.eq(slider.animatingTo).delay(500);
                },
                after: function(slider) {
                    $('.titan-caption').fadeIn().animate({top:'0'},{queue:false, easing: 'swing', duration: 700});
                },
                useCSS: true
            });
        }


        /* ---------------------------------------------- /*
         * Rotate
         /* ---------------------------------------------- */

        $(".rotate").textrotator({
            animation: "dissolve",
            separator: "|",
            speed: 3000
        });


        /* ---------------------------------------------- /*
         * Transparent navbar animation
         /* ---------------------------------------------- */

        function navbarAnimation(navbar, homeSection, navHeight) {
            var topScroll = $(window).scrollTop();
            if (navbar.length > 0 && homeSection.length > 0) {
                if(topScroll >= navHeight) {
                    navbar.removeClass('navbar-transparent');
                } else {
                    navbar.addClass('navbar-transparent');
                }
            }
        }

        /* ---------------------------------------------- /*
         * Navbar submenu
         /* ---------------------------------------------- */

        function navbarSubmenu(width) {
            if (width > 767) {
                $('.navbar-custom .navbar-nav > li.dropdown').hover(function() {
                    var MenuLeftOffset  = $('.dropdown-menu', $(this)).offset().left;
                    var Menu1LevelWidth = $('.dropdown-menu', $(this)).width();
                    if (width - MenuLeftOffset < Menu1LevelWidth * 2) {
                        $(this).children('.dropdown-menu').addClass('leftauto');
                    } else {
                        $(this).children('.dropdown-menu').removeClass('leftauto');
                    }
                    if ($('.dropdown', $(this)).length > 0) {
                        var Menu2LevelWidth = $('.dropdown-menu', $(this)).width();
                        if (width - MenuLeftOffset - Menu1LevelWidth < Menu2LevelWidth) {
                            $(this).children('.dropdown-menu').addClass('left-side');
                        } else {
                            $(this).children('.dropdown-menu').removeClass('left-side');
                        }
                    }
                });
            }
        }

        /* ---------------------------------------------- /*
         * Navbar hover dropdown on desctop
         /* ---------------------------------------------- */

        function hoverDropdown(width, mobileTest) {
            if ((width > 767) && (mobileTest !== true)) {
                $('.navbar-custom .navbar-nav > li.dropdown, .navbar-custom li.dropdown > ul > li.dropdown').removeClass('open');
                var delay = 0;
                var setTimeoutConst;
                $('.navbar-custom .navbar-nav > li.dropdown, .navbar-custom li.dropdown > ul > li.dropdown').hover(function() {
                        var $this = $(this);
                        setTimeoutConst = setTimeout(function() {
                            $this.addClass('open');
                            $this.find('.dropdown-toggle').addClass('disabled');
                        }, delay);
                    },
                    function() {
                        clearTimeout(setTimeoutConst);
                        $(this).removeClass('open');
                        $(this).find('.dropdown-toggle').removeClass('disabled');
                    });
            } else {
                $('.navbar-custom .navbar-nav > li.dropdown, .navbar-custom li.dropdown > ul > li.dropdown').unbind('mouseenter mouseleave');
                $('.navbar-custom [data-toggle=dropdown]').not('.binded').addClass('binded').on('click', function(event) {
                    event.preventDefault();
                    event.stopPropagation();
                    $(this).parent().siblings().removeClass('open');
                    $(this).parent().siblings().find('[data-toggle=dropdown]').parent().removeClass('open');
                    $(this).parent().toggleClass('open');
                });
            }
        }

        /* ---------------------------------------------- /*
         * Navbar collapse on click
         /* ---------------------------------------------- */

        $(document).on('click','.navbar-collapse.in',function(e) {
            if( $(e.target).is('a') && $(e.target).attr('class') != 'dropdown-toggle' ) {
                $(this).collapse('hide');
            }
        });


        /* ---------------------------------------------- /*
         * Video popup, Gallery
         /* ---------------------------------------------- */

        $('.video-pop-up').magnificPopup({
            type: 'iframe'
        });

        $(".gallery-item").magnificPopup({
            delegate: 'a',
            type: 'image',
            gallery: {
                enabled: true,
                navigateByImgClick: true,
                preload: [0,1]
            },
            image: {
                titleSrc: 'title',
                tError: 'The image could not be loaded.'
            }
        });


        /* ---------------------------------------------- /*
         * Portfolio
         /* ---------------------------------------------- */

        var worksgrid   = $('#works-grid'),
            worksgrid_mode;

        if (worksgrid.hasClass('works-grid-masonry')) {
            worksgrid_mode = 'masonry';
        } else {
            worksgrid_mode = 'fitRows';
        }

        worksgrid.imagesLoaded(function() {
            worksgrid.isotope({
                layoutMode: worksgrid_mode,
                itemSelector: '.work-item'
            });
        });

        $('#filters a').click(function() {
            $('#filters .current').removeClass('current');
            $(this).addClass('current');
            var selector = $(this).attr('data-filter');

            worksgrid.isotope({
                filter: selector,
                animationOptions: {
                    duration: 750,
                    easing: 'linear',
                    queue: false
                }
            });

            return false;
        });


        /* ---------------------------------------------- /*
         * Testimonials
         /* ---------------------------------------------- */

        if ($('.testimonials-slider').length > 0 ) {
            $('.testimonials-slider').flexslider( {
                animation: "slide",
                smoothHeight: true
            });
        }


        /* ---------------------------------------------- /*
         * Post Slider
         /* ---------------------------------------------- */

        if ($('.post-images-slider').length > 0 ) {
            $('.post-images-slider').flexslider( {
                animation: "slide",
                smoothHeight: true,
            });
        }


        /* ---------------------------------------------- /*
         * Progress bar animations
         /* ---------------------------------------------- */

        $('.progress-bar').each(function(i) {
            $(this).appear(function() {
                var percent = $(this).attr('aria-valuenow');
                $(this).animate({'width' : percent + '%'});
                $(this).find('span').animate({'opacity' : 1}, 900);
                $(this).find('span').countTo({from: 0, to: percent, speed: 900, refreshInterval: 30});
            });
        });


        /* ---------------------------------------------- /*
         * Funfact Count-up
         /* ---------------------------------------------- */

        $('.count-item').each(function(i) {
            $(this).appear(function() {
                var number = $(this).find('.count-to').data('countto');
                $(this).find('.count-to').countTo({from: 0, to: number, speed: 1200, refreshInterval: 30});
            });
        });


        /* ---------------------------------------------- /*
         * Youtube video background
         /* ---------------------------------------------- */

        $(function(){
            $(".video-player").mb_YTPlayer();
        });

        $('#video-play').click(function(event) {
            event.preventDefault();
            if ($(this).hasClass('fa-play')) {
                $('.video-player').playYTP();
            } else {
                $('.video-player').pauseYTP();
            }
            $(this).toggleClass('fa-play fa-pause');
            return false;
        });

        $('#video-volume').click(function(event) {
            event.preventDefault();
            if ($(this).hasClass('fa-volume-off')) {
                $('.video-player').YTPUnmute();
            } else {
                $('.video-player').YTPMute();
            }
            $(this).toggleClass('fa-volume-off fa-volume-up');
            return false;
        });


        /* ---------------------------------------------- /*
         * Owl Carousel
         /* ---------------------------------------------- */

        $('.owl-carousel').each(function(i) {

            // Check items number
            if ($(this).data('items') > 0) {
                items = $(this).data('items');
            } else {
                items = 4;
            }

            // Check pagination true/false
            if (($(this).data('pagination') > 0) && ($(this).data('pagination') === true)) {
                pagination = true;
            } else {
                pagination = false;
            }

            // Check navigation true/false
            if (($(this).data('navigation') > 0) && ($(this).data('navigation') === true)) {
                navigation = true;
            } else {
                navigation = false;
            }

            // Build carousel
            $(this).owlCarousel( {
                navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'],
                nav: navigation,
                dots: pagination,
                loop: true,
                dotsSpeed: 400,
                items: items,
                navSpeed: 300,
                autoplay: 2000
            });

        });


        /* ---------------------------------------------- /*
         * Blog masonry
         /* ---------------------------------------------- */

        $('.post-masonry').imagesLoaded(function() {
            $('.post-masonry').masonry();
        });


        /* ---------------------------------------------- /*
         * Scroll Animation
         /* ---------------------------------------------- */

        $('.section-scroll').bind('click', function(e) {
            var anchor = $(this);
            $('html, body').stop().animate({
                scrollTop: $(anchor.attr('href')).offset().top - 50
            }, 1000);
            e.preventDefault();
        });

        /*===============================================================
         Working Contact Form
         ================================================================*/

        $("#contactForm").submit(function (e) {

            e.preventDefault();
            var $ = jQuery;

            var postData = $(this).serializeArray(),
                formURL = $(this).attr("action"),
                $cfResponse = $('#contactFormResponse'),
                $cfsubmit = $("#cfsubmit"),
                cfsubmitText = $cfsubmit.text();

            $cfsubmit.text("Sending...");


            $.ajax(
                {
                    url: formURL,
                    type: "POST",
                    data: postData,
                    success: function (data) {
                        $cfResponse.html(data);
                        $cfsubmit.text(cfsubmitText);
                        $('#contactForm input[name=name]').val('');
                        $('#contactForm input[name=email]').val('');
                        $('#contactForm textarea[name=message]').val('');
                    },
                    error: function (data) {
                        alert("Error occurd! Please try again");
                    }
                });

            return false;

        });


        /*===============================================================
         Working Request A Call Form
         ================================================================*/

        $("#requestACall").submit(function (e) {

            e.preventDefault();
            var $ = jQuery;

            var postData = $(this).serializeArray(),
                formURL = $(this).attr("action"),
                $cfResponse = $('#requestFormResponse'),
                $cfsubmit = $("#racSubmit"),
                cfsubmitText = $cfsubmit.text();

            $cfsubmit.text("Sending...");


            $.ajax(
                {
                    url: formURL,
                    type: "POST",
                    data: postData,
                    success: function (data) {
                        $cfResponse.html(data);
                        $cfsubmit.text(cfsubmitText);
                        $('#requestACall input[name=name]').val('');
                        $('#requestACall input[name=subject]').val('');
                        $('#requestACall textarea[name=phone]').val('');
                    },
                    error: function (data) {
                        alert("Error occurd! Please try again");
                    }
                });

            return false;

        });


        /*===============================================================
         Working Reservation Form
         ================================================================*/

        $("#reservationForm").submit(function (e) {

            e.preventDefault();
            var $ = jQuery;

            var postData = $(this).serializeArray(),
                formURL = $(this).attr("action"),
                $cfResponse = $('#reservationFormResponse'),
                $cfsubmit = $("#rfsubmit"),
                cfsubmitText = $cfsubmit.text();

            $cfsubmit.text("Sending...");


            $.ajax(
                {
                    url: formURL,
                    type: "POST",
                    data: postData,
                    success: function (data) {
                        $cfResponse.html(data);
                        $cfsubmit.text(cfsubmitText);
                        $('#reservationForm input[name=date]').val('');
                        $('#reservationForm input[name=time]').val('');
                        $('#reservationForm textarea[name=people]').val('');
                        $('#reservationForm textarea[name=email]').val('');
                    },
                    error: function (data) {
                        alert("Error occurd! Please try again");
                    }
                });

            return false;

        });


        /* ---------------------------------------------- /*
         * Subscribe form ajax
         /* ---------------------------------------------- */

        $('#subscription-form').submit(function(e) {

            e.preventDefault();
            var $form           = $('#subscription-form');
            var submit          = $('#subscription-form-submit');
            var ajaxResponse    = $('#subscription-response');
            var email           = $('input#semail').val();

            $.ajax({
                type: 'POST',
                url: 'assets/php/subscribe.php',
                dataType: 'json',
                data: {
                    email: email
                },
                cache: false,
                beforeSend: function(result) {
                    submit.empty();
                    submit.append('<i class="fa fa-cog fa-spin"></i> Wait...');
                },
                success: function(result) {
                    if(result.sendstatus == 1) {
                        ajaxResponse.html(result.message);
                        $form.fadeOut(500);
                    } else {
                        ajaxResponse.html(result.message);
                    }
                }
            });

        });


        /* ---------------------------------------------- /*
         * Google Map
         /* ---------------------------------------------- */

        if($("#map").length == 0 || typeof google == 'undefined') return;

        // When the window has finished loading create our google map below
        google.maps.event.addDomListener(window, 'load', init);

        var mkr = new google.maps.LatLng(40.6700, -74.2000);
        var cntr = (mobileTest) ? mkr : new google.maps.LatLng(40.6700, -73.9400);

        function init() {
            // Basic options for a simple Google Map
            // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions
            var mapOptions = {
                // How zoomed in you want the map to start at (always required)
                zoom: 11,
                scrollwheel: false,
                // The latitude and longitude to center the map (always required)
                center: cntr, // New York

                // How you would like to style the map.
                // This is where you would paste any style found on Snazzy Maps.
                styles: [
                    {
                        "featureType": "all",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                                "visibility": "on"
                            },
                            {
                                "saturation": "-11"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                                "saturation": "22"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "geometry.stroke",
                        "stylers": [
                            {
                                "saturation": "-58"
                            },
                            {
                                "color": "#cfcece"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "labels.text",
                        "stylers": [
                            {
                                "color": "#f8f8f8"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#999999"
                            },
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative",
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "featureType": "administrative.country",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                                "color": "#f9f9f9"
                            },
                            {
                                "visibility": "simplified"
                            }
                        ]
                    },
                    {
                        "featureType": "landscape",
                        "elementType": "all",
                        "stylers": [
                            {
                                "color": "#f2f2f2"
                            }
                        ]
                    },
                    {
                        "featureType": "landscape",
                        "elementType": "geometry",
                        "stylers": [
                            {
                                "saturation": "-19"
                            },
                            {
                                "lightness": "-2"
                            },
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "all",
                        "stylers": [
                            {
                                "visibility": "off"
                            }
                        ]
                    },
                    {
                        "featureType": "road",
                        "elementType": "all",
                        "stylers": [
                            {
                                "saturation": -100
                            },
                            {
                                "lightness": 45
                            }
                        ]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "all",
                        "stylers": [
                            {
                                "visibility": "simplified"
                            }
                        ]
                    },
                    {
                        "featureType": "road.arterial",
                        "elementType": "labels.icon",
                        "stylers": [
                            {
                                "visibility": "off"
                            }
                        ]
                    },
                    {
                        "featureType": "transit",
                        "elementType": "all",
                        "stylers": [
                            {
                                "visibility": "off"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "all",
                        "stylers": [
                            {
                                "color": "#d8e1e5"
                            },
                            {
                                "visibility": "on"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry.fill",
                        "stylers": [
                            {
                                "color": "#dedede"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text",
                        "stylers": [
                            {
                                "color": "#cbcbcb"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [
                            {
                                "color": "#9c9c9c"
                            }
                        ]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.stroke",
                        "stylers": [
                            {
                                "visibility": "off"
                            }
                        ]
                    }
                ]
            };

            // Get the HTML DOM element that will contain your map
            // We are using a div with id="map" seen below in the <body>
            var mapElement = document.getElementById('map');

            // Create the Google Map using our element and options defined above
            var map = new google.maps.Map(mapElement, mapOptions);

            // Let's also add a marker while we're at it
            var image = new google.maps.MarkerImage('assets/images/map-icon.png',
                new google.maps.Size(59, 65),
                new google.maps.Point(0, 0),
                new google.maps.Point(24, 42)
            );

            var marker = new google.maps.Marker({
                position: mkr,
                icon: image,
                title: 'Titan',
                infoWindow: {
                    content: '<p><strong>Rival</strong><br/>121 Somewhere Ave, Suite 123<br/>P: (123) 456-7890<br/>Australia</p>'
                },
                map: map,
            });
        }

    });
})(jQuery);


function getCookie(cname) {
  let name = cname + "=";
  let decodedCookie = decodeURIComponent(document.cookie);
  let ca = decodedCookie.split(';');
  for(let i = 0; i <ca.length; i++) {
    let c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}


const all_char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
const letters_ne = 'ABCEGHV';
const digits = '1234567890';
const digits_six = '0123456';
const digits_two = '012';
const digits_for_louisiana = '3456';
const letters_disc_ok = 'RD';
;

const languages = {
                   'en': 
                    { 
                      'select_country': 'Select country',
                      'select_state': 'Select state',
                      'select_type': 'Select type',
                      'doc_class_option': 'Select doc. class',
                      'none': 'NONE',
                      'inventory': 'Inventory',
                      'audit': 'Audit',
                      'auto': 'Auto',
                      'sel_doc_rest': 'Select doc. restriction',
                      'sel_doc_endr': 'Select doc. endorsement',
                      'sel_sex': 'Select sex',
                      'u_option': 'Unknown',
                      'm_option': 'Male',
                      'f_option': 'Female',
                      'o_option': 'Others',
                      'sel_hair': 'Select hair color',
                      'hair_col_bal': 'Bald',
                      'hair_col_blk': 'Black',
                      'hair_col_bln': 'Blonde',
                      'hair_col_brn': 'Brown',
                      'hair_col_gry': 'Gray',
                      'hair_col_red': 'Auburn',
                      'hair_col_sdy': 'Sandy',
                      'hair_col_whi': 'White',
                      'hair_col_unk': 'Unknown',
                      'sel_eyes': 'Select eyes color',
                      'eyes_col_blk': 'Black',
                      'eyes_col_blu': 'Blue',
                      'eyes_col_brn': 'Brown',
                      'eyes_col_gry': 'Gray',
                      'eyes_col_haz': 'Hazel',
                      'hair_col_mar': 'Maroon',
                      'eyes_col_pnk': 'Pink',
                      'eyes_col_dic': 'Dichromate',
                      'eyes_col_unk': 'Unknown',
                      'eyes_col_grn': 'Green',
                      'skin_col_ai': 'Alaskan or American Indian',
                      'skin_col_ap': 'Asian or Pacific Islander',
                      'skin_col_bk': 'Black',
                      'skin_col_w': 'White',
                      'skin_col_h': 'Hispanic Origin',
                      'skin_col_u': 'Unknown',     
                      'meter': 'm.',
                      'centimeter': 'cm.',
                      'weight': 'Weight',
                      'lbs': 'lbs',
                      'kg': 'kg',
                      'in_issue_office': 'Issuing Office (located under the photo)',
                      'ut_issue_office': 'Issuing Office (One letter on the front side of the document, to the right of the EYES field)',
                      'parish': 'Parish',
                      'address_line_2': 'Address line 2',
                      'sufix': 'Name Sufix',
                      'option_1': 'Option 1 (Lowest data row on the front side of DL)',
                      'option_2': 'Option 2 (Lowest data row on the front side of DL)',
                      'option_3': 'Option 3 (Lowest data row on the front side of DL)',
                      'state_birth': 'State of birth( Full name )',
                      'country': 'State county',
                      'additional': 'Additional data',
                      'error_country': 'Please, select the country of the document',
                      'error_state': 'Please, select the state which issued the document',
                      'error_birthday': 'Please, provide the birthday date of the client',
                      'error_lastname': 'Please, provide the last name of the client',
                      'error_first_name': 'Please, provide the first name of the client',
                      'error_eyes': 'Please, select color of the eyes of the client',
                      'error_issue': 'Please, provide the issue date of the document',
                      'error_type': 'Please, select type of the document',
                      'error_sex': 'Please, select the sex of the client',
                      'error_expiry': 'Please, provide the expiry date of the document',
                      'error_inventory': 'Please, provide the inventory of the document',
                      'error_issue_office': 'Please, provide the issue office code of the document',
                      'error_topdisc': 'Please, provide top line of the discriminator of the document',
                      'error_option1': 'Please, provide option 1 of the document',
                      'error_option2': 'Please, provide option 2 of the document',
                      'error_option3': 'Please, provide option 3 of the document',
                      'error_docnumber': 'Please, provide the document number of the document',
                      'error_audit': 'Please, provide the audit of the document',
                      'error_disc': 'Please, provide the discriminator of the document',
                      'error_class': 'Please, select class of the document',
                      'error_rest': 'Please, select restrictions of the document',
                      'error_endr': 'Please, select endorsements of the document',
                      'error_hair': 'Please, select hair color of the client',
                      'error_height': 'Please, provide the height of the client',
                      'error_weight': 'Please, provide the weight of the client',
                      'error_address': 'Please, provide address of the client',
                      'error_city': 'Please, provide city of the client',
                      'error_zip': 'Please, provide zip code of the client',
                      'error_region': 'Please, provide country of the state of the client',
                      'error_parish': 'Please, provide parish of the client',
                      'error_address2': 'Please, provide address line 2 of the client',
                      'error_sufix': 'Please, provide name sufix of the client',
                      'error_birthstate': 'Please, provide state of birthday of the client',
                      'error_dups': 'Please, provide dups of the document',
                      'error_additional': 'Please, provide additional data',
                      'generate': 'Generate!',
                      'generated_b': 'Generated! Сheck telegram bot.',
                      'loading': 'Loading...',
                      'error': 'Unexpected error',
                      'tries': 'Too many tries. Please, refresh the page and retry geneartion.',
                      'doesnotrequired': 'Not required',
                      'can_bc_phealthnum': 'Personal Health Number (Not mandatory)',
                      'can_on_vehicle_number': 'Vehicle Code',
                      'error_on_vehicle_number': 'Please, provide vehicle code of the client',
                      'format': 'Format',
                      'revision': 'Revision',
                      'error_revision': 'Please, select the revision of the document',
                      'sel_revision': 'Select revision',
                      'truncation': 'Name truncation',
                      'error_truncation': 'Please, select name truncation of the client',
                      'buy_label': 'Buy',
                      'text_buy_label': '<b>Attention!</b> You are generating barcodes for the template of the document showed above. Please, make sure that your have a right template or TEMPLATE_NAME from us.',
                      'light': ' Light',
                      'dark': '  Dark',
                      'new_generation': 'New generation!'
                    }, 
                   'cn': 
                    { 
                      'select_country': '选择国家',
                      'select_state': '选择状态',
                      'select_type': '选择类型',
                      'doc_class_option': '选择文档类别',
                      'none': '没有任何',
                      'inventory': '存货',
                      'audit': '审计',
                      'auto': ' 汽车 ',
                      'sel_doc_rest': '选择限制',
                      'sel_doc_endr': '选择违规行为',
                      'sel_sex': '选择性别',
                      'u_option': '未知',
                      'm_option': '男性',
                      'f_option': '女性',
                      'o_option': '其他的',
                      'sel_hair': '选择头发颜色',
                      'hair_col_bal': '秃',
                      'hair_col_blk': '黑色的',
                      'hair_col_bln': '金发女郎',
                      'hair_col_brn': '棕色的',
                      'hair_col_gry': '灰色的',
                      'hair_col_red': '奥本',
                      'hair_col_sdy': '沙',
                      'hair_col_whi': '白色的',
                      'hair_col_unk': '未知',
                      'sel_eyes': '选择眼睛颜色',
                      'eyes_col_blk': '深棕色',
                      'eyes_col_blu': '蓝色的',
                      'eyes_col_brn': '浅褐色',
                      'eyes_col_gry': '灰色的',
                      'eyes_col_haz': '博洛特尼',
                      'hair_col_mar': '勃艮第',
                      'eyes_col_pnk': '粉色的',
                      'eyes_col_dic': '重铬酸盐',
                      'eyes_col_unk': '未知',
                      'eyes_col_grn': '绿色的',
                      'skin_col_ai': '爱斯基摩人',
                      'skin_col_ap': '亚洲人',
                      'skin_col_bk': '黑色的',
                      'skin_col_w': '白色的',
                      'skin_col_h': '西班牙裔',
                      'skin_col_u': '未知',  
                      'meter': '米',
                      'centimeter': '厘米',
                      'weight': '重量',
                      'lbs': '磅',
                      'kg': '公斤',
                      'in_issue_office': '发证处（位于照片下方)',
                      'ut_issue_office': '签发局（证件正面 眼睛颜色 字段右侧的一个字母',
                      'parish': '教区',
                      'address_line_2': '地址行2',
                      'sufix': '名称后缀',
                      'option_1': '选项1 (DL 正面的最低数据行)',
                      'option_2': '选项2 (DL 正面的最低数据行)',
                      'option_3': '选项3 (DL 正面的最低数据行)',
                      'state_birth': '出生州（全名)',
                      'country': '地区',
                      'additional': '其他数据',
                      'error_country': '请选择文件的国家',
                      'error_state': '请选择签发该文件的州',
                      'error_birthday': '请提供客户的生日日期',
                      'error_lastname': '请提供客户的姓氏',
                      'error_first_name': '请提供客户的名字',
                      'error_eyes': '请选择顾客眼睛的颜色',
                      'error_issue': '请提供文件的发布日期',
                      'error_type': '请选择文件类型',
                      'error_sex': '请选择客户的性别',
                      'error_expiry': '请提供文件的到期日期',
                      'error_inventory': '请提供文件清单',
                      'error_issue_office': '请提供文件的签发办公室代码',
                      'error_topdisc': '请提供文件鉴别符的顶行',
                      'error_option1': '请提供文档的选项 1',
                      'error_option2': '请提供文档的选项 2',
                      'error_option3': '请提供文档的选项 3',
                      'error_docnumber': '请提供文件的文件编号',
                      'error_audit': '请提供文件的审核',
                      'error_disc': '请提供文件的鉴别符',
                      'error_class': '请提供文档的类别',
                      'error_rest': '请选择文档的限制',
                      'error_endr': '请选择文档的内含内容',
                      'error_hair': '请选择客户的发色',
                      'error_height': '请提供客户身高',
                      'error_weight': '请提供客户的体重',
                      'error_address': '请提供客户地址',
                      'error_city': '请提供客户所在城市',
                      'error_zip': '请提供客户的邮政编码',
                      'error_region': '请提供客户所在国家/地区',
                      'error_parish': '请提供客户的教区',
                      'error_address2': '请提供客户的地址第2行',
                      'error_sufix': '请提供客户的姓名后缀',
                      'error_birthstate': '请提供客户的生日状态',
                      'error_dups': '请提供文件的副本',
                      'error_additional': '请提供更多数据',
                      'generate': '产生!',
                      'generated_b': '已生成! 请检查电报机器人',
                      'loading': '正在加载...',
                      'error': '意外的错误',
                      'tries': '尝试太多了. 请刷新页面并重试生成.',
                      'doesnotrequired': '不需要',
                      'can_bc_phealthnum': '个人健康号码 (不是强制性的)',
                      'can_on_vehicle_number': '车辆代码',
                      'error_on_vehicle_number': '请提供客户车辆代码',
                      'format': '格式',
                      'revision': '版本',
                      'error_revision': '请选择文档的版本',
                      'sel_revision': '选择版本',
                      'truncation': '名称截断',
                      'error_truncation': '请选择客户端的名称截断',
                      'buy_label': '购买',
                      'text_buy_label': '<b>注意！</b>您正在为所显示文档的模板生成条形码。请确保您拥有正确的模板或从我们这里TEMPLATE_NAME。',
                      'light': '     光',
                      'dark': '   黑暗的',
                      'new_generation': '新一代!'
                    },   
                   'hi': 
                    { 
                      'select_country': 'देश चुनें',
                      'select_state': 'राज्य चुनें',
                      'select_type': 'प्रकार चुनें',
                      'doc_class_option': 'दस्तावेज़ वर्ग का चयन करें',
                      'none': 'कोई नहीं',
                      'inventory': 'भंडार',
                      'audit': 'अंकेक्षण',
                      'auto': 'ऑटो',
                      'sel_doc_rest': 'प्रतिबंध चुनें',
                      'sel_doc_endr': 'उल्लंघन चुनें',
                      'sel_sex': 'लिंग का चयन करें',
                      'u_option': 'अज्ञात',
                      'm_option': 'नर',
                      'f_option': 'महिला',
                      'o_option': 'अन्य',
                      'sel_hair': 'बालों का रंग चुनें',
                      'hair_col_bal': 'गंजा',
                      'hair_col_blk': 'काला',
                      'hair_col_bln': 'गोरा',
                      'hair_col_brn': 'भूरा',
                      'hair_col_gry': 'स्लेटी',
                      'hair_col_red': 'सुनहरा भूरा रंग',
                      'hair_col_sdy': 'रेतीले',
                      'hair_col_whi': 'सफ़ेद',
                      'hair_col_unk': 'अज्ञात',
                      'sel_eyes': 'आंखों का रंग चुनें',
                      'eyes_col_blk': 'गहरे भूरे रंग',
                      'eyes_col_blu': 'नीला',
                      'eyes_col_brn': 'हल्का भूरा',
                      'eyes_col_gry': 'स्लेटी',
                      'eyes_col_haz': 'बोलोटनी',
                      'hair_col_mar': 'बरगंडी',
                      'eyes_col_pnk': 'गुलाबी',
                      'eyes_col_dic': 'डाइक्रोमेट',
                      'eyes_col_unk': 'अज्ञात',
                      'eyes_col_grn': 'हरा',
                      'skin_col_ai': 'एस्किमो',
                      'skin_col_ap': 'एशियाई',
                      'skin_col_bk': 'काला',
                      'skin_col_w': 'सफ़ेद',
                      'skin_col_h': 'हिस्पैनिक',
                      'skin_col_u': 'अज्ञात', 
                      'meter': 'm.',
                      'centimeter': 'cm.',
                      'weight': 'वज़न',
                      'lbs': 'पाउंड',
                      'kg': 'किलोग्राम',
                      'in_issue_office': 'जारीकर्ता कार्यालय (फोटो के नीचे स्थित)',
                      'ut_issue_office': 'जारीकर्ता कार्यालय (दस्तावेज़ के सामने की ओर, आँखों का रंग फ़ील्ड के दाईं ओर एक पत्र)',
                      'parish': 'पैरिशिया',
                      'address_line_2': 'पता पंक्ति नं। 2',
                      'sufix': 'नाम प्रत्यय',
                      'option_1': 'विकल्प 1 (डीएल के सामने की ओर सबसे कम DL)',
                      'option_2': 'विकल्प 2 (डीएल के सामने की ओर सबसे कम DL)',
                      'option_3': 'विकल्प 3 (डीएल के सामने की ओर सबसे कम DL)',
                      'state_birth': 'जन्म राज्य (पूरा नाम)',
                      'country': 'क्षेत्र',
                      'additional': 'अतिरिक्त डेटा',
                      'error_country': 'कृपया, दस्तावेज़ का देश चुनें',
                      'error_state': 'कृपया, उस राज्य का चयन करें जिसने दस्तावेज़ जारी किया है',
                      'error_birthday': 'कृपया, ग्राहक की जन्म तिथि प्रदान करें',
                      'error_lastname': 'कृपया, ग्राहक का अंतिम नाम प्रदान करें',
                      'error_first_name': 'कृपया, क्लाइंट का पहला नाम प्रदान करें',
                      'error_eyes': 'कृपया ग्राहक की आंखों का रंग चुनें',
                      'error_issue': 'कृपया, दस्तावेज़ की जारी होने की तारीख प्रदान करें',
                      'error_type': 'कृपया दस्तावेज़ का प्रकार चुनें',
                      'error_sex': 'कृपया, ग्राहक के लिंग का चयन करें',
                      'error_expiry': 'कृपया, दस्तावेज़ की समाप्ति तिथि प्रदान करें',
                      'error_inventory': 'कृपया, दस्तावेज़ की सूची प्रदान करें',
                      'error_issue_office': 'कृपया दस्तावेज़ का निर्गम कार्यालय कोड प्रदान करें',
                      'error_topdisc': 'कृपया, दस्तावेज़ के विवेचक की शीर्ष पंक्ति प्रदान करें',
                      'error_option1': 'कृपया दस्तावेज़ का विकल्प 1 प्रदान करें',
                      'error_option2': 'कृपया दस्तावेज़ का विकल्प 2 प्रदान करें',
                      'error_option3': 'कृपया दस्तावेज़ का विकल्प 3 प्रदान करें',
                      'error_docnumber': 'कृपया, दस्तावेज़ की दस्तावेज़ संख्या प्रदान करें',
                      'error_audit': 'कृपया, दस्तावेज़ का ऑडिट प्रदान करें',
                      'error_disc': 'कृपया, दस्तावेज़ का विवेचक प्रदान करें',
                      'error_class': 'कृपया, दस्तावेज़ का वर्ग प्रदान करें',
                      'error_rest': 'कृपया, दस्तावेज़ के प्रतिबंधों का चयन करें',
                      'error_endr': 'कृपया, दस्तावेज़ के एंडोसेर्नेंट्स का चयन करें',
                      'error_hair': 'कृपया, ग्राहक के बालों का रंग चुनें',
                      'error_height': 'कृपया ग्राहक की ऊँचाई प्रदान करें',
                      'error_weight': 'कृपया ग्राहक का वजन बताएं',
                      'error_address': 'कृपया, ग्राहक का पता प्रदान करें',
                      'error_city': 'कृपया, ग्राहक का शहर बताएं',
                      'error_zip': 'कृपया, ग्राहक का ज़िप कोड प्रदान करें',
                      'error_region': 'कृपया, ग्राहक के राज्य का देश प्रदान करें',
                      'error_parish': 'कृपया, ग्राहक का पैरिश प्रदान करें',
                      'error_address2': 'कृपया, ग्राहक का पता पंक्ति 2 प्रदान करें',
                      'error_sufix': 'कृपया, ग्राहक का नाम उपसर्ग प्रदान करें',
                      'error_birthstate': 'कृपया, ग्राहक के जन्मदिन की स्थिति प्रदान करें',
                      'error_dups': 'कृपया, दस्तावेज़ का डुप्लिकेट प्रदान करें',
                      'error_additional': 'कृपया अतिरिक्त डेटा प्रदान करें',
                      'generate': 'उत्पन्न!',
                      'generated_b': 'उत्पन्न! कृपया, टेलीग्राम बॉट की जाँच करें।',
                      'loading': 'लोड हो रहा है...',
                      'error': 'अप्रत्याशित त्रुटि',
                      'tries': 'बहुत ज्यादा कोशिशें। कृपया, पेज को रीफ्रेश करें और जनरेशन का पुनः प्रयास करें।',
                      'doesnotrequired': 'आवश्यक नहीं',
                      'can_bc_phealthnum': 'व्यक्तिगत स्वास्थ्य संख्या (अनिवार्य नहीं)',
                      'can_on_vehicle_number': 'वाहन कोड',
                      'error_on_vehicle_number': 'कृपया, ग्राहक का वाहन कोड प्रदान करें',
                      'format': 'प्रारूप',
                      'revision': 'संशोधन',
                      'error_revision': 'कृपया, दस्तावेज़ का संशोधन चुनें',
                      'sel_revision': 'संशोधन चुनें',
                      'truncation': 'नाम काट-छाँट',
                      'error_truncation': 'कृपया, क्लाइंट का नाम काट-छाँट चुनें',
                      'buy_label': 'खरीदें',
                      'text_buy_label': '<b>ध्यान दें!</b> आप दिखाए गए दस्तावेज़ के टेम्पलेट के लिए बारकोड बना रहे हैं। कृपया, सुनिश्चित करें कि आपके पास सही टेम्पलेट है या हमसे TEMPLATE_NAME।',
                      'light': '   रोशनी',
                      'dark': '   अँधेरा',
                      'new_generation': 'नई पीढ़ी!'
                    },  
                   'ru': 
                    {
                      'select_country': 'Выбрать страну',
                      'select_state': 'Выбрать штат',
                      'select_type': 'Выбрать тип',
                      'doc_class_option': 'Выберите класс док-та',
                      'none': 'НЕТ',
                      'inventory': 'Инвентаризация',
                      'audit': 'Аудит',
                      'auto': 'Авто',
                      'sel_doc_rest': 'Выберите ограничения',
                      'sel_doc_endr': 'Выберите нарушения',
                      'sel_sex': 'Выбрать пол',
                      'u_option': 'Неизвестно',
                      'm_option': 'Мужчина',
                      'f_option': 'Женщина',
                      'o_option': 'Другие',
                      'sel_hair': 'Выберите цвет волос',
                      'hair_col_bal': 'Лысый',
                      'hair_col_blk': 'Чёрный',
                      'hair_col_bln': 'Блондин / ка',
                      'hair_col_brn': 'Русый',
                      'hair_col_gry': 'Седой',
                      'hair_col_red': 'Каштановый',
                      'hair_col_sdy': 'Рыжий',
                      'hair_col_whi': 'Белый',
                      'hair_col_unk': 'Неизвесный',
                      'sel_eyes': 'Выберите цвет глаз',
                      'eyes_col_blk': 'Тёмно-карий',
                      'eyes_col_blu': 'Голубой',
                      'eyes_col_brn': 'Светло-карий',
                      'eyes_col_gry': 'Серый',
                      'eyes_col_haz': 'Болотный',
                      'hair_col_mar': 'Бордовый',
                      'eyes_col_pnk': 'Розовый',
                      'eyes_col_dic': 'Дихромат',
                      'eyes_col_unk': 'Неизвесный',
                      'eyes_col_grn': 'Зелёный',
                      'skin_col_ai': 'Эскимос или Индеец',
                      'skin_col_ap': 'Азиат',
                      'skin_col_bk': 'Чёрный',
                      'skin_col_w': 'Белый',
                      'skin_col_h': 'Латиноамериканец',
                      'skin_col_u': 'Неизвесно',
                      'meter': 'м.',
                      'centimeter': 'см.',
                      'weight': 'Вес',
                      'lbs': 'фунтов',
                      'kg': 'килограм',
                      'in_issue_office': 'Офис выдачи (3 цифры под фото)',
                      'ut_issue_office': 'Выдавший орган (одна буква на лицевой стороне документа, справа от поля ЦВЕТ ГЛАЗ)',
                      'parish': 'Парафия',
                      'address_line_2': 'Адресная строка 2',
                      'sufix': 'Суффикс имени',
                      'option_1': 'Опция 1 (Самый низкий ряд данных на титульной стороне DL)',
                      'option_2': 'Опция 2 (Самый низкий ряд данных на титульной стороне DL)',
                      'option_3': 'Опция 3 (Самый низкий ряд данных на титульной стороне DL)',
                      'state_birth': 'Штат рождения( Полное название )',
                      'country': 'Регион штата',
                      'additional': 'Дополнительные данные',
                      'error_country': 'Пожалуйста, выберите страну документа',
                      'error_state': 'Пожалуйста, выберите штат, который выдал документ',
                      'error_birthday': 'Пожалуйста, предоставьте дату рождения клиента',
                      'error_lastname': 'Пожалуйста, предоставьте фамилию клиента',
                      'error_first_name': 'Пожалуйста, предоставьте имя клиента',
                      'error_eyes': 'Пожалуйста, выберите цвет глаз клиента',
                      'error_issue': 'Пожалуйста, укажите дату выдачи документа',
                      'error_type': 'Пожалуйста, выберите тип документа',
                      'error_sex': 'Пожалуйста, выберите пол клиента',
                      'error_expiry': 'Пожалуйста, предоставьте дату окончания действительности документа',
                      'error_inventory': 'Пожалуйста, предоставьте инвентарный номер документа',
                      'error_issue_office': 'Пожалуйста, укажите код офиса выдачи документа',
                      'error_topdisc': 'Пожалуйста, предоставьте первую линию дискриминатора документа',
                      'error_option1': 'Пожалуйста, предоставьте опцию 1 документа',
                      'error_option2': 'Пожалуйста, предоставьте опцию 2 документа',
                      'error_option3': 'Пожалуйста, предоставьте опцию 3 документа',
                      'error_docnumber': 'Пожалуйста, предоставьте номер документа',
                      'error_audit': 'Пожалуйста, предоставьте аудит документа',
                      'error_disc': 'Пожалуйста, предоставьте дискриминатор документа',
                      'error_class': 'Пожалуйста, выберите категорию ВУ',
                      'error_rest': 'Пожалуйста, выберите ограничения документа',
                      'error_endr': 'Пожалуйста, выберите нарушения клиента',
                      'error_hair': 'Пожалуйста, выберите цвет волос клиента',
                      'error_height': 'Пожалуйста, предоставьте рост клиента',
                      'error_weight': 'Пожалуйста, укажите вес клиента',
                      'error_address': 'Пожалуйста, укажите адрес клиента',
                      'error_city': 'Пожалуйста, укажите город клиента',
                      'error_zip': 'Пожалуйста, укажите почтовый индекс клиента',
                      'error_region': 'Пожалуйста, укажите регион штата клиента',
                      'error_parish': 'Пожалуйста, укажите парафию клиента',
                      'error_address2': 'Пожалуйста, укажите 2 ряд адреса клиента',
                      'error_sufix': 'Пожалуйста, укажите суфикс имени клиента',
                      'error_birthstate': 'Пожалуйста, укажите штат рождения клиента',
                      'error_dups': 'Пожалуйста, укажите dups документа',
                      'error_additional': 'Пожалуйста, предоставьте дополнительные данные',
                      'generate': 'Сгенирировать!',
                      'generated_b': 'Сгенерировано! Проверьте телеграмм бота.',
                      'loading': 'Загрузка',
                      'error': 'Неожиданная ошибка',
                      'tries': 'Слишком много попыток. Пожалуйста, обновите страницу и повторите генерацию.',
                      'doesnotrequired': 'Не требуется',
                      'can_bc_phealthnum': 'Персональный номер здоровья (Не требуется)',
                      'can_on_vehicle_number': 'Код автомобиля',
                      'error_on_vehicle_number': 'Пожалуйста, укажите код автомобиля клиента',
                      'format': 'Формат',
                      'revision': 'Ревизия',
                      'error_revision': 'Пожалуйста, выберите ревизию документа',
                      'sel_revision': 'Выберите ревизию',
                      'truncation': 'Сокращение имени',
                      'error_truncation': 'Пожалуйста, выберите сокращение имени клиента',
                      'buy_label': 'Купить',
                      'text_buy_label': '<b>Внимание!</b> Вы генерируете штрихкоды для шаблона документа, показанного выше. Пожалуйста, убедитесь, что у вас правильный шаблон или TEMPLATE_NAME у нас.',
                      'light': 'Светлая',
                      'dark': 'Тёмная',
                      'new_generation': 'Новая генерация!'
                    }, 
                   'ua':
                    { 
                      'select_country': 'Обрати країну',
                      'select_state': 'Обрати штат',
                      'select_type': 'Обрати тип',
                      'doc_class_option': 'Виберіть клас док-та',
                      'none': 'НЕМАЄ',
                      'inventory': 'Інвентарізація',
                      'audit': 'Аудит',
                      'auto': 'Авто',
                      'sel_doc_rest': 'Оберіть обмеження',
                      'sel_doc_endr': 'Оберіть порушення',
                      'sel_sex': 'Обрати стать',
                      'u_option': 'Невідомо',
                      'm_option': 'Чоловік',
                      'f_option': 'Жінка',
                      'o_option': 'Інші',
                      'sel_hair': 'Оберіть колір волосся',
                      'hair_col_bal': 'Лисий',
                      'hair_col_blk': 'Чорний',
                      'hair_col_bln': 'Блондин / ка',
                      'hair_col_brn': 'Русий',
                      'hair_col_gry': 'Сідий',
                      'hair_col_red': 'Каштановий',
                      'hair_col_sdy': 'Рудий',
                      'hair_col_whi': 'Білий',
                      'hair_col_unk': 'Невідомий',
                      'sel_eyes': 'Оберіть колір очей',
                      'eyes_col_blk': 'Темно-карий',
                      'eyes_col_blu': 'Блакитний',
                      'eyes_col_brn': 'Світло-карий',
                      'eyes_col_gry': 'Сірий',
                      'eyes_col_haz': 'Болотяний',
                      'hair_col_mar': 'Бордовий',
                      'eyes_col_pnk': 'Рожевий',
                      'eyes_col_dic': 'Біхромат',
                      'eyes_col_unk': 'Невідомий',
                      'eyes_col_grn': 'Зелений',
                      'skin_col_ai': 'Ескімос чи індіанець',
                      'skin_col_ap': 'Азіат',
                      'skin_col_bk': 'Чорний',
                      'skin_col_w': 'Білий',
                      'skin_col_h': 'Латиноамериканець',
                      'skin_col_u': 'Невідомо',
                      'meter': 'м.',
                      'centimeter': 'см.',
                      'weight': 'Вага',
                      'lbs': 'фунтів',
                      'kg': 'кілограм',
                      'in_issue_office': 'Офіс видачі (3 цифри під фото)',
                      'ut_issue_office': 'Офіс видачі (Одна літера на лицьовій стороні документа, праворуч від поля КОЛІР ОЧЕЙ)',
                      'parish': 'Парафія',
                      'address_line_2': 'Адреса, ряд 2',
                      'sufix': 'Суфікс імені',
                      'option_1': 'Опція 1 (Найнижчий ряд з данними на титульній стороні DL)',
                      'option_2': 'Опція 2 (Найнижчий ряд з данними на титульній стороні DL)',
                      'option_3': 'Опція 3 (Найнижчий ряд з данними на титульній стороні DL)',
                      'state_birth': 'Штат народження( Повна назва )',
                      'country': 'Регіон штату',
                      'additional': 'Додаткові дані',
                      'error_country': 'Оберіть, будь ласка, країну документу',
                      'error_state': 'Оберіть, будь ласка, штат що видав документу',
                      'error_birthday': 'Надайте, будь ласка, дату народження клієнта',
                      'error_lastname': 'Надайте, будь ласка, призвище клієнта',
                      'error_first_name': 'Надайте, будь ласка, ім\'я клієнта',
                      'error_eyes': 'Будь ласка, виберіть колір очей клієнта',
                      'error_issue': 'Надайте, будь ласка, дату видачі документа',
                      'error_type': 'Будь ласка, оберіть тип документу',
                      'error_sex': 'Оберіть, будь ласка, стать клієнта',
                      'error_expiry': 'Надайте, будь ласка, термін придатності документу',
                      'error_inventory': 'Надайте, будь ласка, інвентарний номер документу',
                      'error_issue_office': 'Надайте, будь ласка, код офісу видачі документу',
                      'error_topdisc': 'Надайте, будь ласка, першу лінію дискримінатору документу',
                      'error_option1': 'Надайте, будь ласка, опцію 1  документу',
                      'error_option2': 'Надайте, будь ласка, опцію 2  документу',
                      'error_option3': 'Надайте, будь ласка, опцію 3  документу',
                      'error_docnumber': 'Надайте, будь ласка, номер документу',
                      'error_audit': 'Надайте, будь ласка, аудит документу',
                      'error_disc': 'Надайте, будь ласка, дискримінатор документу',
                      'error_class': 'Оберіть, будь ласка, клас документу',
                      'error_rest': 'Оберіть, будь ласка, обмеження документу',
                      'error_endr': 'Оберіть, будь ласка, порушення клієнта',
                      'error_hair': 'Оберіть, будь ласка, колір волосся клієнта',
                      'error_height': 'Надайте, будь ласка, висоту клієнта',
                      'error_weight': 'Надайте, будь ласка, вагу клієнта',
                      'error_address': 'Надайте, будь ласка, адресу клієнта',
                      'error_city': 'Надайте, будь ласка, місто клієнта',
                      'error_zip': 'Надайте, будь ласка, поштовий індекс клієнта',
                      'error_region': 'Надайте, будь ласка, регіон штату клієнта',
                      'error_parish': 'Надайте, будь ласка, парафію клієнта',
                      'error_address2': 'Надайте, будь ласка, другий ряд адреси клієнта',
                      'error_sufix': 'Надайте, будь ласка, суфікс імені клієнта',
                      'error_birthstate': 'Надайте, будь ласка, штат народження клієнта',
                      'error_dups': 'Надайте, будь ласка, dups документу',
                      'error_additional': 'Надайте, будь ласка, додаткові дані',
                      'generate': 'Згенерувати!',
                      'generated_b': 'Згенеровано! Перевірте телеграм-бот.',
                      'loading': 'Завантаження...',
                      'error': 'Неочікувана помилка',
                      'tries': 'Забагато спроб. Будь ласка, оновіть сторінку та повторіть спробу генерації.',
                      'doesnotrequired': 'Необов\'язково',
                      'can_bc_phealthnum': 'Особистий номер здоров\'я (Необов\'язково)',
                      'can_on_vehicle_number': 'Код автомобіля',
                      'error_on_vehicle_number': 'Надайте, будь ласка, код автомобіля клієнта',
                      'format': 'Формат',
                      'revision': 'Ревізія',
                      'error_revision': 'Оберіть ревізію документа',
                      'sel_revision': 'Оберіть ревізію',
                      'truncation': 'Скорочення імені',
                      'error_truncation': 'Будь ласка, виберіть скорочення імені клієнта',
                      'buy_label': 'Купити',
                      'text_buy_label': '<b>Увага!</b> Ви генеруєте штрих-коди для шаблону документа, що показоно вище. Будь ласка, переконайтеся, що у вас є правильний шаблон, або TEMPLATE_NAME у нас.',
                      'light': 'Світла',
                      'dark': ' Темна',
                      'new_generation': 'Нова генерація!'
                    }
                  }

var active_language = document.getElementById("act_lang").innerHTML;
var generate_link = document.getElementById("act_generate").innerHTML;
var user_form = document.getElementById("user_form").innerHTML;


var state = '';
var usa_states = '<option>'+languages[active_language]['select_state']+'</option><option value="AL">Alabama</option><option value="AK">Alaska</option><option value="AZ">Arizona</option><option value="AR">Arkansas</option><option value="CA">California</option><option value="CO">Colorado</option><option value="CT">Connecticut</option><option value="DC">District of Columbia</option><option value="DE">Delaware</option><option value="FL">Florida</option><option value="GA">Georgia</option><option value="HI">Hawaii</option><option value="ID">Idaho</option><option value="IL">Illinois</option><option value="IN">Indiana</option><option value="IA">Iowa</option><option value="KS">Kansas</option><option value="KY">Kentucky</option><option value="LA">Lousiana</option><option value="ME">Maine</option><option value="MD">Maryland</option><option value="MA">Massachusetts</option><option value="MI">Michigan</option><option value="MN">Minnesota</option><option value="MS">Mississippi</option><option value="MO">Missouri</option><option value="MT">Montana</option><option value="NE">Nebraska</option><option value="NV">Nevada</option><option value="NH">New Hampshire</option><option value="NJ">New Jersey</option><option value="NM">New Mexico</option><option value="NY">New York</option><option value="NC">North Carolina</option><option value="ND">North Dakota</option><option value="OH">Ohio</option><option value="OK">Oklahoma</option><option value="OR">Oregon</option><option value="PA">Pennsylvania</option><option value="PR">Puerto Rico</option><option value="RI">Rhode Island</option><option value="SC">South Carolina</option><option value="SD">South Dakota</option><option value="TN">Tennessee</option><option value="TX">Texas</option><option value="UT">Utah</option><option value="VT">Vermont</option><option value="VA">Virginia</option><option value="WA">Washington</option><option value="WV">West Virginia</option><option value="WI">Wisconsin</option><option value="WY">Wyoming</option>';
var can_states = '<option>'+languages[active_language]['select_state']+'</option><option value="AB">Alberta</option><option value="BC">British Columbia</option><option value="MB">Manitoba</option><option value="NB">New Brunswick</option><option value="NL">Newfoundland and Labrador</option><option value="NS">Nova Scotia</option><option value="ON">Ontario</option><option value="PE">Prince Edward Island</option><option value="SK">Saskatchewan</option><option value="QC">Quebec</option>';
var doc_type = '';
var veteran = '';
var donor = '';
var safe = '';
var inventory = '';
var audit = '';


if( document.getElementById("lang") != null ) {
  document.getElementById("lang").value = active_language;
}

switch(active_language) {  
  case 'en':
    if( document.getElementById("language_selector") != null ) {
        document.getElementById("language_selector").innerHTML = 'Language';
    }
    if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Please, pay attention that this is test form. For getting barcodes you required to have active subscription. You can <a href="https://t.me/pdf417mrz_bot">buy subscription</a> directly in bot.';
    }
    document.getElementById("div_with_copy").innerHTML = 'Copied!';
    if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = ' Light';
    }
    if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '  Dark';
    }
    if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Language';
    }
    document.getElementById("country_selector").innerHTML = 'Country';
    document.getElementById("country_option").innerHTML = 'Select country';
    document.getElementById("state_selector").innerHTML = 'State';
    document.getElementById("state_option").innerHTML = 'Select state';
    document.getElementById("doc_selector").innerHTML = 'Document type';
    document.getElementById("doc_option").innerHTML = 'Select type';
    document.getElementById("lname_label").innerHTML = 'Last name';
    document.getElementById("fname_label").innerHTML = 'First name';
    document.getElementById("mname_label").innerHTML = 'Middle name';
    for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Format: '+format_type;
    }
    document.getElementById("birthday_selector").innerHTML = 'Birthday date';
    document.getElementById("issue_selector").innerHTML = 'Issue date';
    document.getElementById("expiry_selector").innerHTML = 'Expiry date';
    document.getElementById("number_selector").innerHTML = 'Document number';
    document.getElementById("doc_class_selector").innerHTML = 'Document class';
    document.getElementById("doc_class_txt").value = 'Select doc. class';
    document.getElementById("compliance_selector").innerHTML = 'Compliance ( The real id or no )';
    document.getElementById("badges_selector").innerHTML = 'Badges';
    document.getElementById("veteran_b").innerHTML = 'Veteran';
    document.getElementById("donor_b").innerHTML = 'Donor';
    document.getElementById("safe_b").innerHTML = 'Safe Driver';
    document.getElementById("restriction_selector").innerHTML = 'Restrictions';
    document.getElementById("restriction_txt").value = 'Select doc. restriction';
    document.getElementById("endosernent_selector").innerHTML = 'Endorsement';
    document.getElementById("endosernent_txt").value = 'Select doc. endorsement';
    document.getElementById("discriminator_selector").innerHTML = 'Discriminator'; 
    document.getElementById("inventory_selector").innerHTML = 'Inventory';
    document.getElementById("audit_selector").innerHTML = 'Audit';
    for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Auto';
    }
    document.getElementById("sex_selector").innerHTML = 'Sex';
    document.getElementById("sex_option").innerHTML = 'Select sex';
    document.getElementById("u_option").innerHTML = 'Unknown';
    document.getElementById("m_option").innerHTML = 'Male';
    document.getElementById("f_option").innerHTML = 'Female';
    document.getElementById("o_option").innerHTML = 'Others';
    document.getElementById("hair_selector").innerHTML = 'Hair color';
    document.getElementById("hair_option").innerHTML = 'Select hair color';
    document.getElementById("hair_col_bal").innerHTML = 'Bald';
    document.getElementById("hair_col_blk").innerHTML = 'Black';
    document.getElementById("hair_col_bln").innerHTML = 'Blonde';
    document.getElementById("hair_col_brn").innerHTML = 'Brown';
    document.getElementById("hair_col_gry").innerHTML = 'Gray';
    document.getElementById("hair_col_red").innerHTML = 'Auburn';
    document.getElementById("hair_col_sdy").innerHTML = 'Sandy';
    document.getElementById("hair_col_whi").innerHTML = 'White';
    document.getElementById("hair_col_unk").innerHTML = 'Unknown';
    document.getElementById("eyes_selector").innerHTML = 'Eyes color'; 
    document.getElementById("eyes_option").innerHTML = 'Select eyes color';
    document.getElementById("eyes_col_blk").innerHTML = 'Black';
    document.getElementById("eyes_col_blu").innerHTML = 'Blue';
    document.getElementById("eyes_col_brn").innerHTML = 'Brown';
    document.getElementById("eyes_col_gry").innerHTML = 'Gray';
    document.getElementById("eyes_col_haz").innerHTML = 'Hazel';
    document.getElementById("hair_col_mar").innerHTML = 'Maroon';
    document.getElementById("eyes_col_pnk").innerHTML = 'Pink';
    document.getElementById("eyes_col_dic").innerHTML = 'Dichromate';
    document.getElementById("eyes_col_unk").innerHTML = 'Unknown';
    document.getElementById("eyes_col_grn").innerHTML = 'Green'; 
    document.getElementById("height_selector").innerHTML = 'Height';
    document.getElementById("weight_label").innerHTML = 'Weight (lbs)';
    document.getElementById("skin_selector").innerHTML = 'Skin color';
    document.getElementById("skin_col_ai").innerHTML = 'Alaskan or American Indian';
    document.getElementById("skin_col_ap").innerHTML = 'Asian or Pacific Islander';
    document.getElementById("skin_col_bk").innerHTML = 'Black';
    document.getElementById("skin_col_w").innerHTML = 'White';
    document.getElementById("skin_col_h").innerHTML = 'Hispanic Origin';
    document.getElementById("skin_col_u").innerHTML = 'Unknown';
    document.getElementById("address_selector").innerHTML = 'Street and house number';
    document.getElementById("city_selector").innerHTML = 'City';
    document.getElementById("zip_selector").innerHTML = 'ZIP code';
    if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'New generation!';
    }
    document.getElementById("final_button").innerHTML = 'Generate!';
    document.getElementById("revision_selector").innerHTML = 'Revision';
    document.getElementById("rev_option").innerHTML = 'Select revision';
    document.getElementById("truncation_label").innerHTML = 'Name truncation';                       
  break;
  case 'cn':
    if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = '语言';
    }
    if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = '请注意，这是测试表格。 要获取条形码，您需要有效订阅。 您可以直接在机器人中<a href="https://t.me/pdf417mrz_bot">购买订阅</a>。';
    }
    document.getElementById("div_with_copy").innerHTML = '复制了!';
    if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = '     光';
    }
    if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '   黑暗的';
    }
    if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = '选择语言';
    }
    document.getElementById("country_selector").innerHTML = '国家';
    document.getElementById("country_option").innerHTML = '选择国家';
    document.getElementById("state_selector").innerHTML = '状态';
    document.getElementById("state_option").innerHTML = '选择状态';
    document.getElementById("doc_selector").innerHTML = '文件类型';
    document.getElementById("doc_option").innerHTML = '选择类型';
    document.getElementById("lname_label").innerHTML = '姓氏';
    document.getElementById("fname_label").innerHTML = '名字';
    document.getElementById("mname_label").innerHTML = '中间名字';
    for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = '格式: '+format_type;
    }
    document.getElementById("birthday_selector").innerHTML = '出生日期';
    document.getElementById("issue_selector").innerHTML = '发行日期';
    document.getElementById("expiry_selector").innerHTML = '有效期';
    document.getElementById("number_selector").innerHTML = '证件号码';
    document.getElementById("doc_class_selector").innerHTML = 'DL级别';
    document.getElementById("doc_class_txt").value = '选择文档类别';
    document.getElementById("compliance_selector").innerHTML = '符合身份证明';
    document.getElementById("badges_selector").innerHTML = '徽章';
    document.getElementById("veteran_b").innerHTML = '老将';
    document.getElementById("donor_b").innerHTML = '捐赠者';
    document.getElementById("safe_b").innerHTML = '安全驾驶';
    document.getElementById("restriction_selector").innerHTML = '限制';
    document.getElementById("restriction_txt").value = '选择限制';
    document.getElementById("endosernent_selector").innerHTML = '内皮';
    document.getElementById("endosernent_txt").value = '选择违规行为';
    document.getElementById("discriminator_selector").innerHTML = '证件鉴别器';
    document.getElementById("inventory_selector").innerHTML = '清单号';
    document.getElementById("audit_selector").innerHTML = '审计';
    for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = ' 汽车 ';
    }
    document.getElementById("sex_selector").innerHTML = '性别';
    document.getElementById("sex_option").innerHTML = '选择性别';
    document.getElementById("u_option").innerHTML = '未知';
    document.getElementById("m_option").innerHTML = '男性';
    document.getElementById("f_option").innerHTML = '女性';
    document.getElementById("o_option").innerHTML = '其他的';
    document.getElementById("hair_selector").innerHTML = '发色';
    document.getElementById("hair_option").innerHTML = '选择头发颜色';
    document.getElementById("hair_col_bal").innerHTML = '秃';
    document.getElementById("hair_col_blk").innerHTML = '黑色的';
    document.getElementById("hair_col_bln").innerHTML = '金发女郎';
    document.getElementById("hair_col_brn").innerHTML = '棕色的';
    document.getElementById("hair_col_gry").innerHTML = '灰色的';
    document.getElementById("hair_col_red").innerHTML = '奥本';
    document.getElementById("hair_col_sdy").innerHTML = '沙';
    document.getElementById("hair_col_whi").innerHTML = '白色的';
    document.getElementById("hair_col_unk").innerHTML = '未知';
    document.getElementById("eyes_selector").innerHTML = '眼睛颜色';
    document.getElementById("eyes_option").innerHTML = '选择眼睛颜色';
    document.getElementById("eyes_col_blk").innerHTML = '深棕色';
    document.getElementById("eyes_col_blu").innerHTML = '蓝色的';
    document.getElementById("eyes_col_brn").innerHTML = '浅褐色';
    document.getElementById("eyes_col_gry").innerHTML = '灰色的';
    document.getElementById("eyes_col_haz").innerHTML = '博洛特尼';
    document.getElementById("hair_col_mar").innerHTML = '勃艮第';
    document.getElementById("eyes_col_pnk").innerHTML = '粉色的';
    document.getElementById("eyes_col_dic").innerHTML = '重铬酸盐';
    document.getElementById("eyes_col_unk").innerHTML = '未知';
    document.getElementById("eyes_col_grn").innerHTML = '绿色的';
    document.getElementById("height_selector").innerHTML = '身高';
    document.getElementById("weight_label").innerHTML = '重量';
    document.getElementById("skin_selector").innerHTML = '肤色';
    document.getElementById("skin_col_ai").innerHTML = '爱斯基摩人';
    document.getElementById("skin_col_ap").innerHTML = '亚洲人';
    document.getElementById("skin_col_bk").innerHTML = '黑色的';
    document.getElementById("skin_col_w").innerHTML = '白色的';
    document.getElementById("skin_col_h").innerHTML = '西班牙裔';
    document.getElementById("skin_col_u").innerHTML = '未知';
    document.getElementById("address_selector").innerHTML = '街道';
    document.getElementById("city_selector").innerHTML = '城市';
    document.getElementById("zip_selector").innerHTML = '邮政编码';
    if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = '新一代!';
    }
    document.getElementById("final_button").innerHTML = '产生!'; 
    document.getElementById("revision_selector").innerHTML = '版本';
    document.getElementById("rev_option").innerHTML = '选择版本';
    document.getElementById("truncation_label").innerHTML = '名称截断';
  break;
  case 'hi':
    if( document.getElementById("language_selector") != null ) {
        document.getElementById("language_selector").innerHTML = 'भाषा';
    }
    if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'कृपया ध्यान दें कि यह परीक्षण प्रपत्र है। बारकोड प्राप्त करने के लिए आपके पास सक्रिय सदस्यता होना आवश्यक है। आप सीधे बॉट में <a href="https://t.me/pdf417mrz_bot">सदस्यता खरीद सकते हैं</a>।';
    }
    document.getElementById("div_with_copy").innerHTML = 'नकल की गई!';
    if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = '   रोशनी';
    }
    if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '   अँधेरा';
    }
    if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'भाषा';
    }
    document.getElementById("country_selector").innerHTML = 'देश'; 
    document.getElementById("country_option").innerHTML = 'देश चुनें';
    document.getElementById("state_selector").innerHTML = 'राज्य';
    document.getElementById("state_option").innerHTML = 'राज्य चुनें';
    document.getElementById("doc_selector").innerHTML = 'दस्तावेज़ संख्या';
    document.getElementById("doc_option").innerHTML = 'प्रकार चुनें';
    document.getElementById("lname_label").innerHTML = 'उपनाम';
    document.getElementById("fname_label").innerHTML = 'प्रथम नाम';
    document.getElementById("mname_label").innerHTML = 'मध्य नाम';
    for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'प्रारूप: '+format_type;
    }
    document.getElementById("birthday_selector").innerHTML = 'जन्म तिथि';
    document.getElementById("issue_selector").innerHTML = 'जारी करने की तारिख';
    document.getElementById("expiry_selector").innerHTML = 'समाप्ति तिथि';
    document.getElementById("number_selector").innerHTML = 'दस्तावेज़ संख्या';
    document.getElementById("doc_class_selector").innerHTML = 'DL श्रेणी';
    document.getElementById("doc_class_txt").value = 'दस्तावेज़ वर्ग का चयन करें';
    document.getElementById("compliance_selector").innerHTML = 'आईडी का अनुपालन';
    document.getElementById("badges_selector").innerHTML = 'बैज';
    document.getElementById("veteran_b").innerHTML = 'अनुभवी व्यक्ति';
    document.getElementById("donor_b").innerHTML = 'दाता';
    document.getElementById("safe_b").innerHTML = 'सुरक्षित ड्राइवर';
    document.getElementById("restriction_selector").innerHTML = 'प्रतिबंध';
    document.getElementById("restriction_txt").value = 'प्रतिबंध चुनें';
    document.getElementById("endosernent_selector").innerHTML = 'एंडोसेर्नेंट';
    document.getElementById("endosernent_txt").value = 'उल्लंघन चुनें';
    document.getElementById("discriminator_selector").innerHTML = 'Discriminator';
    document.getElementById("inventory_selector").innerHTML = 'भंडार';
    document.getElementById("audit_selector").innerHTML = 'अंकेक्षण';
    for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'ऑटो';
    }
    document.getElementById("sex_selector").innerHTML = 'लिंग';
    document.getElementById("sex_option").innerHTML = 'लिंग का चयन करें';
    document.getElementById("u_option").innerHTML = 'अज्ञात';
    document.getElementById("m_option").innerHTML = 'नर';
    document.getElementById("f_option").innerHTML = 'महिला';
    document.getElementById("o_option").innerHTML = 'अन्य';
    document.getElementById("hair_selector").innerHTML = 'लम्बाई';
    document.getElementById("hair_option").innerHTML = 'बालों का रंग चुनें';
    document.getElementById("hair_col_bal").innerHTML = 'गंजा';
    document.getElementById("hair_col_blk").innerHTML = 'काला';
    document.getElementById("hair_col_bln").innerHTML = 'गोरा';
    document.getElementById("hair_col_brn").innerHTML = 'भूरा';
    document.getElementById("hair_col_gry").innerHTML = 'स्लेटी';
    document.getElementById("hair_col_red").innerHTML = 'सुनहरा भूरा रंग';
    document.getElementById("hair_col_sdy").innerHTML = 'रेतीले';
    document.getElementById("hair_col_whi").innerHTML = 'सफ़ेद';
    document.getElementById("hair_col_unk").innerHTML = 'अज्ञात';
    document.getElementById("eyes_selector").innerHTML = 'आँखों का रंग';
    document.getElementById("eyes_option").innerHTML = 'आंखों का रंग चुनें';
    document.getElementById("eyes_col_blk").innerHTML = 'गहरे भूरे रंग';
    document.getElementById("eyes_col_blu").innerHTML = 'नीला';
    document.getElementById("eyes_col_brn").innerHTML = 'हल्का भूरा';
    document.getElementById("eyes_col_gry").innerHTML = 'स्लेटी';
    document.getElementById("eyes_col_haz").innerHTML = 'बोलोटनी';
    document.getElementById("hair_col_mar").innerHTML = 'बरगंडी';
    document.getElementById("eyes_col_pnk").innerHTML = 'गुलाबी';
    document.getElementById("eyes_col_dic").innerHTML = 'डाइक्रोमेट';
    document.getElementById("eyes_col_unk").innerHTML = 'अज्ञात';
    document.getElementById("eyes_col_grn").innerHTML = 'हरा';
    document.getElementById("height_selector").innerHTML = 'ऊंचाई';
    document.getElementById("weight_label").innerHTML = 'वजन (पाउंड)';
    document.getElementById("skin_selector").innerHTML = 'त्वचा का रंग';
    document.getElementById("skin_col_ai").innerHTML = 'एस्किमो';
    document.getElementById("skin_col_ap").innerHTML = 'एशियाई';
    document.getElementById("skin_col_bk").innerHTML = 'काला';
    document.getElementById("skin_col_w").innerHTML = 'सफ़ेद';
    document.getElementById("skin_col_h").innerHTML = 'हिस्पैनिक';
    document.getElementById("skin_col_u").innerHTML = 'अज्ञात';
    document.getElementById("address_selector").innerHTML = 'पता';
    document.getElementById("city_selector").innerHTML = 'शहर';
    document.getElementById("zip_selector").innerHTML = 'ज़िप कोड';
    if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'नई पीढ़ी!';
    }
    document.getElementById("final_button").innerHTML = 'उत्पन्न!';
    document.getElementById("revision_selector").innerHTML = 'संशोधन';
    document.getElementById("rev_option").innerHTML = 'संशोधन चुनें';
    document.getElementById("truncation_label").innerHTML = 'नाम काट-छाँट';
  break;     
  case 'ru':
    if( document.getElementById("language_selector") != null ) {
        document.getElementById("language_selector").innerHTML = 'Язык';
    }
    if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Обратите внимание, что это тестовая форма. Для получения штрих-кодов необходима активная подписка. Вы можете <a href="https://t.me/pdf417mrz_bot">купить подписку</a> прямо в боте.';
    }
    document.getElementById("div_with_copy").innerHTML = 'Скопировано!';
    if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Светлая';
    }
    if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Тёмная';
    } 
    if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Язык';
    }   
    document.getElementById("country_selector").innerHTML = 'Страна';
    document.getElementById("country_option").innerHTML = 'Выбрать страну';
    document.getElementById("state_selector").innerHTML = 'Штат';
    document.getElementById("state_option").innerHTML = 'Выбрать штат';
    document.getElementById("doc_selector").innerHTML = 'Тип документа';
    document.getElementById("doc_option").innerHTML = 'Выбрать тип';
    document.getElementById("lname_label").innerHTML = 'Фамилия';
    document.getElementById("fname_label").innerHTML = 'Имя';
    document.getElementById("mname_label").innerHTML = 'Отчество';
    for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
    }
    document.getElementById("birthday_selector").innerHTML = 'Дата рождения';
    document.getElementById("issue_selector").innerHTML = 'Дата выдачи';
    document.getElementById("expiry_selector").innerHTML = 'Действителен до';
    document.getElementById("number_selector").innerHTML = 'Номер документа';
    document.getElementById("doc_class_selector").innerHTML = 'Категория ВУ';
    document.getElementById("doc_class_txt").value = 'Выберите класс док-та';
    document.getElementById("compliance_selector").innerHTML = 'Тип cоответствия';
    document.getElementById("badges_selector").innerHTML = 'Ярлыки';
    document.getElementById("veteran_b").innerHTML = 'Ветеран';
    document.getElementById("donor_b").innerHTML = 'Донор';
    document.getElementById("safe_b").innerHTML = 'Безопасный';
    document.getElementById("restriction_selector").innerHTML = 'Ограничения';
    document.getElementById("restriction_txt").value = 'Выберите ограничения';
    document.getElementById("endosernent_selector").innerHTML = 'Нарушения';
    document.getElementById("endosernent_txt").value = 'Выберите нарушения';
    document.getElementById("discriminator_selector").innerHTML = 'Дискриминатор';
    document.getElementById("inventory_selector").innerHTML = 'Инвентарный номер';
    document.getElementById("audit_selector").innerHTML = 'Аудит';
    for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
    }
    document.getElementById("sex_selector").innerHTML = 'Пол';
    document.getElementById("sex_option").innerHTML = 'Выбрать пол';
    document.getElementById("u_option").innerHTML = 'Неизвестно';
    document.getElementById("m_option").innerHTML = 'Мужчина';
    document.getElementById("f_option").innerHTML = 'Женщина';
    document.getElementById("o_option").innerHTML = 'Другие';
    document.getElementById("hair_selector").innerHTML = 'Цвет волос';
    document.getElementById("hair_option").innerHTML = 'Выберите цвет волос';
    document.getElementById("hair_col_bal").innerHTML = 'Лысый';
    document.getElementById("hair_col_blk").innerHTML = 'Чёрный';
    document.getElementById("hair_col_bln").innerHTML = 'Блондин / ка';
    document.getElementById("hair_col_brn").innerHTML = 'Русый';
    document.getElementById("hair_col_gry").innerHTML = 'Седой';
    document.getElementById("hair_col_red").innerHTML = 'Каштановый';
    document.getElementById("hair_col_sdy").innerHTML = 'Рыжий';
    document.getElementById("hair_col_whi").innerHTML = 'Белый';
    document.getElementById("hair_col_unk").innerHTML = 'Неизвесный';
    document.getElementById("eyes_selector").innerHTML = 'Цвет глаз';
    document.getElementById("eyes_option").innerHTML = 'Выберите цвет глаз';
    document.getElementById("eyes_col_blk").innerHTML = 'Тёмно-карий';
    document.getElementById("eyes_col_blu").innerHTML = 'Голубой';
    document.getElementById("eyes_col_brn").innerHTML = 'Светло-карий';
    document.getElementById("eyes_col_gry").innerHTML = 'Серый';
    document.getElementById("eyes_col_haz").innerHTML = 'Болотный';
    document.getElementById("hair_col_mar").innerHTML = 'Бордовый';
    document.getElementById("eyes_col_pnk").innerHTML = 'Розовый';
    document.getElementById("eyes_col_dic").innerHTML = 'Дихромат';
    document.getElementById("eyes_col_unk").innerHTML = 'Неизвесный';
    document.getElementById("eyes_col_grn").innerHTML = 'Зелёный';
    document.getElementById("height_selector").innerHTML = 'Рост';
    document.getElementById("weight_label").innerHTML = 'Вес (фунтов)';
    document.getElementById("skin_selector").innerHTML = 'Цвет кожи';
    document.getElementById("skin_col_ai").innerHTML = 'Эскимосы или Индеец';
    document.getElementById("skin_col_ap").innerHTML = 'Азиат';
    document.getElementById("skin_col_bk").innerHTML = 'Чёрный';
    document.getElementById("skin_col_w").innerHTML = 'Белый';
    document.getElementById("skin_col_h").innerHTML = 'Латиноамериканец';
    document.getElementById("skin_col_u").innerHTML = 'Неизвесно';
    document.getElementById("address_selector").innerHTML = 'Улица и номер дома';
    document.getElementById("city_selector").innerHTML = 'Город';
    document.getElementById("zip_selector").innerHTML = 'Почтовый индекс';
    if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Новая генерация!';
    }
    document.getElementById("final_button").innerHTML = 'Сгенирировать!';
    document.getElementById("revision_selector").innerHTML = 'Ревизия';
    document.getElementById("rev_option").innerHTML = 'Выберите ревизию';
    document.getElementById("truncation_label").innerHTML = 'Сокращение имени';   
  break;
  case 'ua':
    if( document.getElementById("language_selector") != null ) {
        document.getElementById("language_selector").innerHTML = 'Мова';
    }
    if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Зверніть увагу, що це тестова форма. Для отримання штрих-кодів вам потрібна активна підписка. Ви можете <a href="https://t.me/pdf417mrz_bot">купити підписку</a> безпосередньо в боті.';
    }
    document.getElementById("div_with_copy").innerHTML = 'Скопійовано!';
    if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Світла ';
    }
    if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Темна ';
    }
    if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Мова';
    }   
    document.getElementById("country_selector").innerHTML = 'Країна';
    document.getElementById("country_option").innerHTML = 'Обрати країну';
    document.getElementById("state_selector").innerHTML = 'Штат';
    document.getElementById("state_option").innerHTML = 'Обрати штат';
    document.getElementById("doc_selector").innerHTML = 'Тип документу';
    document.getElementById("doc_option").innerHTML = 'Обрати тип';
    document.getElementById("lname_label").innerHTML = 'Прізвище';
    document.getElementById("fname_label").innerHTML = 'Ім\'я';
    document.getElementById("mname_label").innerHTML = 'По-батькові';
    for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
    }
    document.getElementById("birthday_selector").innerHTML = 'Дата народження';
    document.getElementById("issue_selector").innerHTML = 'Дата видачі';
    document.getElementById("expiry_selector").innerHTML = 'Дата закінчення дії';
    document.getElementById("number_selector").innerHTML = '№ документу';
    document.getElementById("doc_class_selector").innerHTML = 'Клас документа';
    document.getElementById("doc_class_txt").value = 'Виберіть клас док-та';
    document.getElementById("compliance_selector").innerHTML = 'Тип відповідності';
    document.getElementById("badges_selector").innerHTML = 'Значки';
    document.getElementById("veteran_b").innerHTML = 'Ветеран';
    document.getElementById("donor_b").innerHTML = 'Донор';
    document.getElementById("safe_b").innerHTML = 'Безпечний';
    document.getElementById("restriction_selector").innerHTML = 'Обмеження';
    document.getElementById("restriction_txt").value = 'Оберіть обмеження';
    document.getElementById("endosernent_selector").innerHTML = 'Порушення';
    document.getElementById("endosernent_txt").value = 'Оберіть порушення';
    document.getElementById("discriminator_selector").innerHTML = 'Дискримінатор';
    document.getElementById("inventory_selector").innerHTML = 'Інвентарний номер';
    document.getElementById("audit_selector").innerHTML = 'Аудит';
    for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
    }
    document.getElementById("sex_selector").innerHTML = 'Стать';
    document.getElementById("sex_option").innerHTML = 'Обрати стать';
    document.getElementById("u_option").innerHTML = 'Невідомо';
    document.getElementById("m_option").innerHTML = 'Чоловік';
    document.getElementById("f_option").innerHTML = 'Жінка';
    document.getElementById("o_option").innerHTML = 'Інші';
    document.getElementById("hair_selector").innerHTML = 'Колір волосся';
    document.getElementById("hair_option").innerHTML = 'Оберіть колір волосся';
    document.getElementById("hair_col_bal").innerHTML = 'Лисий';
    document.getElementById("hair_col_blk").innerHTML = 'Чорний';
    document.getElementById("hair_col_bln").innerHTML = 'Блондин / ка';
    document.getElementById("hair_col_brn").innerHTML = 'Русий';
    document.getElementById("hair_col_gry").innerHTML = 'Сідий';
    document.getElementById("hair_col_red").innerHTML = 'Каштановий';
    document.getElementById("hair_col_sdy").innerHTML = 'Рудий';
    document.getElementById("hair_col_whi").innerHTML = 'Білий';
    document.getElementById("hair_col_unk").innerHTML = 'Невідомий';
    document.getElementById("eyes_selector").innerHTML = 'Колір очей';
    document.getElementById("eyes_option").innerHTML = 'Оберіть колір очей';
    document.getElementById("eyes_col_blk").innerHTML = 'Темно-карий';
    document.getElementById("eyes_col_blu").innerHTML = 'Блакитний';
    document.getElementById("eyes_col_brn").innerHTML = 'Світло-карий';
    document.getElementById("eyes_col_gry").innerHTML = 'Сірий';
    document.getElementById("eyes_col_haz").innerHTML = 'Болотяний';
    document.getElementById("hair_col_mar").innerHTML = 'Бордовий';
    document.getElementById("eyes_col_pnk").innerHTML = 'Рожевий';
    document.getElementById("eyes_col_dic").innerHTML = 'Біхромат';
    document.getElementById("eyes_col_unk").innerHTML = 'Невідомий';
    document.getElementById("eyes_col_grn").innerHTML = 'Зелений';
    document.getElementById("height_selector").innerHTML = 'Зріст';
    document.getElementById("weight_label").innerHTML = 'Вага (фунтів)';
    document.getElementById("skin_selector").innerHTML = 'Колір шкіри';
    document.getElementById("skin_col_ai").innerHTML = 'Ескімос чи індіанець';
    document.getElementById("skin_col_ap").innerHTML = 'Азіат';
    document.getElementById("skin_col_bk").innerHTML = 'Чорний';
    document.getElementById("skin_col_w").innerHTML = 'Білий';
    document.getElementById("skin_col_h").innerHTML = 'Латиноамериканець';
    document.getElementById("skin_col_u").innerHTML = 'Невідомо';
    document.getElementById("address_selector").innerHTML = 'Вулиця та номер будинку';
    document.getElementById("city_selector").innerHTML = 'Місто';
    document.getElementById("zip_selector").innerHTML = 'Поштовий індекс';
    if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Нова генерація!';
    }
    document.getElementById("final_button").innerHTML = 'Згенерувати!';
    document.getElementById("revision_selector").innerHTML = 'Ревізія';
    document.getElementById("rev_option").innerHTML = 'Оберіть ревізію';
    document.getElementById("truncation_label").innerHTML = 'Скорочення імені';  
  break;

}

function change_lan(new_lang) {
  window.location.href = user_form + '?lang='+new_lang;
}

function new_toggleThemeColor() {
  var body = document.getElementById("body");
  if ( body.className == 'dark-mode') {
    body.className = "dark-mode"  == "light-mode" ? "dark-mode" : "light-mode";
  } else {
    body.className = "light-mode"  == "light-mode" ? "dark-mode" : "dark-mode";
  }
}

function toggleLight() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "dark-mode" ? "light-mode" : "light-mode";
}

function toggleDark() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = "light-mode"  == "light-mode" ? "dark-mode" : "dark-mode";
}

$(".ld-mode > .btn").click(function(){
  $(".ld-mode > .btn").removeClass("active");
  $(this).addClass("active");
});
 
function delete_error() {
  for (var i = 0; i < document.getElementsByClassName('form_error').length; i++) {
    document.getElementsByClassName('form_error')[i].style.display = 'none';
  }
}

function amerSoundex(input, strictRules) {
  var result = "";
  var lastcode = "";
  var first = true;
  for (var i=0; i<input.length; i++) {
    var ch = input.charAt(i).toLowerCase();
    if (ch < 'a' || ch > 'z') {
      continue;
    }
    switch (ch) {
      case 'b':
      case 'f':
      case 'p':
      case 'v':
        if (lastcode != "1") {
          result += "1";
          lastcode = "1";
        }
      break;
      case 'c':
      case 'g':
      case 'j':
      case 'k':
      case 'q':
      case 's':
      case 'x':
      case 'z':
        if (lastcode != "2") {
          result += "2";
          lastcode = "2";
        }
      break;
      case 'd':
      case 't':
        if (lastcode != "3") {
          result += "3";
          lastcode = "3";
        }
      break;
      case 'l':
        if (lastcode != "4") {
          result += "4";
          lastcode = "4";
        }
      break;
      case 'm':
      case 'n':
        if (lastcode != "5") {
          result += "5";
          lastcode = "5";
        }
      break;
      case 'r':
        if (lastcode != "6") {
          result += "6";
          lastcode = "6";
        }
      break;
      case 'a':
      case 'e':
      case 'i':
      case 'o':
      case 'u':
      case 'y':
        lastcode = "";
      break;
      case 'w':
      case 'h':
        if (!strictRules) {
          lastcode = "";
        }
      break;
    }
    if (first) {
      result = input.charAt(i).toUpperCase();
      first = false;
    }
    if (result.length >= 4) {
      break;
    }
  }
  if (result.length == 1) {
    result += "000";
  } else if (result.length == 2) {
    result += "00";
  } else if (result.length == 3) {
    result += "0";
  }
  return result;
}

function CalculateDL(lastname, middlename, firstname, state) {
    valid = true; // true until we learn otherwise
    var lastName = document.getElementById("lname").value.toLowerCase();
    var firstName = document.getElementById("fname").value.toLowerCase();
    var middleName = document.getElementById("mname").value.toLowerCase();
    if (format_type == 'ARG') {
      var month = document.getElementById("bdate").value.substring(3,5);
      var day = document.getElementById("bdate").value.substring(0,2);
    } else if (format_type == 'CAN') {
      var month = document.getElementById("bdate").value.substring(3,5);
      var day = document.getElementById("bdate").value.substring(8,10);
    } else if (format_type == 'USA') {
      var month = document.getElementById("bdate").value.substring(0,2);
      var day = document.getElementById("bdate").value.substring(3,5);
    }
   

    var lastCode = amerSoundex(lastName, true);
    if (lastCode == "") {
      lastCode = "0000"; // so that initial display of license doesn't look strange
    }

    var firstCode = "000";
    var middleCode = "000";
    var dobCode = "000";

    // MARYLAND, MICHIGAN, MINNESOTA

    if (state == "MD" || state == "MI" || state == "MN") {

      var fullyCoded = "";
      var firstUnused = "";

      // encode first and middle name

      for (var i=firstMiddleName_MD_MI_MN.length-1; i>=0; i--) { // start from end to get longest match
        var target = firstMiddleName_MD_MI_MN[i][0].toLowerCase();
        if (target.length > firstName.length) {
          continue;
        }
        if (firstName.substr(0, target.length) == target) {
          firstCode = String(firstMiddleName_MD_MI_MN[i][1]);
          fullyCoded = (firstName == target);
          if (!fullyCoded) {
            firstUnused = firstName.charAt(target.length);
          }
          break;
        }
      }
      while (firstCode.length < 3) {
        firstCode = "0" + firstCode;
      }

      if (middleName != "") {
        for (var i=firstMiddleName_MD_MI_MN.length-1; i>=0; i--) { // start from end to get longest match
          var target = firstMiddleName_MD_MI_MN[i][0].toLowerCase();
          if (target.length > middleName.length) {
            continue;
          }
          if (middleName.substr(0, target.length) == target) {
            middleCode = String(firstMiddleName_MD_MI_MN[i][1]);
            break;
          }
        }
      } else { // middle name is blank
        if (fullyCoded) {
          middleCode = "000";
        } else {
          for (var i=0; i<middleName_MD_MI_MN.length; i++) {
            if (middleName_MD_MI_MN[i][0] == firstUnused) {
              middleCode = String(middleName_MD_MI_MN[i][1]);
              break;
            }
          }
        }
      }
      while (middleCode.length < 3) {
        middleCode = "0" + middleCode;
      }

      // encode date of birth

      if (month != "00") { // don't encode dob if no month is specified
        var dob = month + day;
        for (var i=0; i<dob_MD_MI_MN.length; i++) {
          if (dob_MD_MI_MN[i][0] == dob) {
            dobCode = String(dob_MD_MI_MN[i][1]);
            break;
          }
        }
      }
      while (dobCode.length < 3) {
        dobCode = "0" + dobCode;
      }

      //document.getElementById('license').innerHTML = lastCode + "-" + firstCode + "-" + middleCode + "-" + dobCode;
      if (state == "MI") {
        return lastCode[0] + " " + lastCode.slice(-3) + " " + firstCode + " " + middleCode + " " + dobCode;
      } else if (state == "MD") {
        return lastCode[0] + "-" + lastCode.slice(-3) + "-" + firstCode + "-" + middleCode + "-" + dobCode;
      } else if (state == "MN") {
        return lastCode + firstCode + middleCode + dobCode;
      }


    // FLORIDA, ILLINOIS, WISCONSIN

    } else if (state == "FL" || state == "IL" || state == "WI") {

      // encode first and middle name

      if (firstName.length == 0) {
        firstCode = 0;
      } else {
        var found = false;
        for (var i=0; i<firstName_FL_IL_WI.length; i++) {
          if (firstName_FL_IL_WI[i][0].toLowerCase() == firstName) {
            firstCode = firstName_FL_IL_WI[i][1];
             found = true;
            break;
          }
        }
        if (!found) { // exact name was not found, go by the initial
          var firstInitial = firstName.charAt(0).toLowerCase();
          for (var i=0; i<firstInitial_FL_IL_WI.length; i++) {
            if (firstInitial_FL_IL_WI[i][0].toLowerCase() == firstInitial) {
              firstCode = firstInitial_FL_IL_WI[i][1];
              break;
            }
          }
        }
      }
      if (middleName.length == 0) {
        middleCode = "";
      } else {
        var middleInitial = middleName.charAt(0).toLowerCase();
        for (var i=0; i<middleInitial_FL_IL_WI.length; i++) {
          if (middleInitial_FL_IL_WI[i][0].toLowerCase() == middleInitial) {
            middleCode = middleInitial_FL_IL_WI[i][1];
            break;
          }
        }
      }
      firstCode = String(firstCode - (-middleCode));
      while (firstCode.length < 3) {
        firstCode = "0" + firstCode;
      }

      // encode year

      var yearCode = document.getElementById("bdate").value.substring(8,10);
      
      // encode dob and gender

      var multiplier = 0;
      var genderCode = 0;
      if (state == "FL" || state == "WI") {
        multiplier = 40;
        if (document.getElementById("sex").value == "F") {
          genderCode = 500;
        }
      } else if (state == "IL") {
        multiplier = 31;
        if (document.getElementById("sex").value == "F") {
          genderCode = 600;
        }
      }
      var dobCode = String((month-1)*multiplier - (-day) - (-genderCode));
      while (dobCode.length < 3) {
        dobCode = "0" + dobCode;
      }

      // format the license

      if (state == "FL") {
          return lastCode + "-" + firstCode + "-" + yearCode + "-" + dobCode + "-?";
      } else if (state == "IL") {
          return lastCode + "-" + firstCode + yearCode.charAt(0) + "-" + yearCode.charAt(1) + dobCode;
      } else if (state == "WI") {
          return lastCode + "-" + firstCode + yearCode.charAt(0) + "-" + yearCode.charAt(1) + dobCode + "-01";
      }

      // WASHINGTON

    } else if (state == "WA") {

      // encode name

      lastCode = lastName.toUpperCase();
      while (lastCode.length < 5) {
        lastCode += "*";
      }
      lastCode = lastCode.substr(0, 5);

      if (firstName == "") {
        firstCode = "*";
      } else {
        firstCode = firstName.charAt(0).toUpperCase();
      }

      if (middleName == "") {
        middleCode = "*";
      } else {
        middleCode = middleName.charAt(0).toUpperCase();
      }

      // encode dob
      
      var year =  document.getElementById("bdate").value.substring(6,10);
      year = year.substr(year.length - 2); // gets the last two digits of the year
      var yearCode = 100 - year;
      yearCode = "0" + yearCode; // so that it is at least two characters long
      yearCode = yearCode.substr(yearCode.length - 2); // so that year 00 doesn't give 100

      var monthCode1 = monthArray1_WA[Number(month)];
      var monthCode2 = monthArray2_WA[Number(month)];

      var dayCode = dayArray_WA[Number(day)];

      var license1 =
        lastCode + firstCode + middleCode + yearCode + monthCode1 + dayCode;
      var license2 =
        lastCode + firstCode + middleCode + yearCode + monthCode2 + dayCode;
      
      // compute checksum

      var checksum1 = 0;
      var checksum2 = 0;
      for (var i=0; i<license1.length; i++) { // both license1 and license2 are the same length
        if (i%2 == 1) {
          checksum1 = checksum1 - ChecksumDigit_WA(license1.charAt(i));              
          checksum2 = checksum2 - ChecksumDigit_WA(license2.charAt(i));              
        } else {
          checksum1 = checksum1 - (-ChecksumDigit_WA(license1.charAt(i)));              
          checksum2 = checksum2 - (-ChecksumDigit_WA(license2.charAt(i)));              
        }
      }
      checksum1 = checksum1 % 10;
      checksum2 = checksum2 % 10;

      license1 = license1.substr(0, 9) + checksum1 + license1.substr(9);
      license2 = license2.substr(0, 9) + checksum2 + license2.substr(9);

      document.getElementById('license').innerHTML = license1;
      document.getElementById('license2').innerHTML = license2;

    // NEW HAMPSHIRE

    } else if (state == "NH") {

      if (lastName == "") {
        lastCode = "00";
      } else if (lastName.length == 1) {
        lastCode = lastName.charAt(0) + "0";
      } else {
        lastCode = lastName.charAt(0) + lastName.charAt(lastName.length - 1);
      }
      if (firstName == "") {
        firstCode = "0";
      } else {
        firstCode = firstName.charAt(0);
      }
      var monthCode = month;
      var yearCode = document.getElementById("bdate").value.substring(6,10);
      yearCode = yearCode.substr(yearCode.length - 2);
      var dayCode = day;

      document.getElementById('license').innerHTML = monthCode + lastCode + firstCode + yearCode + dayCode + "?";

    // NEW JERSEY

    } else if (state == "NJ") {

      if (lastName == "") {
        lastCode = "?????";
      } else {
        lastCode = lastName.charAt(0).toUpperCase() + "????";
      }

      if (firstName.length == 0) {
        firstCode = "???";
      } else {
        var found = false;
        for (var i=0; i<firstName_NJ.length; i++) {
          if (firstName_NJ[i][0].toLowerCase() == firstName) {
            firstCode = firstName_NJ[i][1];
            found = true;
            break;
          }
        }
        if (!found) { // exact name was not found
          firstCode = "???";
        }
      }

      var middleInitial = "";
      if (middleName != "") {
        middleInitial = middleName.charAt(0).toUpperCase();
      }
      var middleInitialCode = "";
      for (var i=0; i<middleInitial_NJ.length; i++) {
        if (middleInitial_NJ[i][0] == middleInitial) {
          middleInitialCode = middleInitial_NJ[i][1];
          break;
        }
      }
      var monthCode = month;
      if (document.getElementById("sex").value == "F") {
        monthCode = String(50 + Number(monthCode));
      }
      var yearCode = document.getElementById("bdate").value.substring(6,10);
      var eyeColor = document.getElementById("inputEyeColorCode").value;
      var eyeColorCode = "??";
      for (var i=0; i<eyeColor_NJ.length; i++) {
        if (eyeColor_NJ[i][0] == eyeColor) {
          eyeColorCode = eyeColor_NJ[i][1];
          break;
        }
      }
      
      return lastCode + " " + firstCode + middleInitialCode + " " + monthCode + yearCode + eyeColorCode;

    } else {
      alert("invalid state 2");
    }
}

function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max) + 1;
  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

function makestr(length, what) {
    let result = '';
    const charactersLength = what.length;
    let counter = 0;
    while (counter < length) {
      result += what.charAt(Math.floor(Math.random() * charactersLength));
      counter += 1;
    }
    return result;
}

function toD(myNumber, len) {
  var myNumber_length = myNumber.toString().length;
  var possibleZeros = '00000000000000000000000';
  var differnceinlength = len - myNumber_length;
  if ( differnceinlength > 0 ) {
    var requestedwithzeros = possibleZeros.substring(0,differnceinlength) + myNumber.toString(); 
  } else {
    var requestedwithzeros =  myNumber.toString();
  }
  
  return requestedwithzeros;
}

function toW(myWord, len) {
  var myWord_length = myWord.toString().length;
  var possibleXs = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
  var differnceinlength = len - myWord_length;
  if ( differnceinlength > 0 ) {
    var requestedwithxs = myWord.toString() + possibleXs.substring(0,differnceinlength); 
  } else {
    var requestedwithxs =  myWord.substring(0,len);
  }
  
  return requestedwithxs;
}


function afterD(myNumber, len) {
  var myNumber_length = myNumber.toString().length;
  var possibleZeros = '00000000000000000000000';
  var differnceinlength = len - myNumber_length;
  if ( differnceinlength > 0 ) {
    var requestedwithzeros = myNumber.toString() + possibleZeros.substring(0,differnceinlength); 
  } else {
    var requestedwithzeros =  myNumber.toString();
  }
  
  return requestedwithzeros;
}


function bd_onkeyup(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 1 && last_char != 1  && last_char != 0) {
      document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value + '/';
    } else if ( elem_length == 2 ) {
      var elem_month = parseInt(elem.value.substring(0,2));
      if ( elem_month >= 0 && elem_month <= 12) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = '';
      }
    } else if ( elem_length == 5 ) {
      var elem_day = parseInt(elem.value.substring(3,5));
      var elem_month = parseInt(elem.value.substring(0,2));

      if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3);
      }

    } else if ( elem_length == 10 ) {
      if ( elem.id == 'bdate' ) {
        document.getElementById('idate').focus();
      } else if ( elem.id == 'idate') {
        if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
          select_revision();
        }
        document.getElementById('edate').focus();
      }
    }
  } else if ( elem_length == 5 && e.which == 191  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3) + '0' + document.getElementById(elem.id).value.substring(3,4) + '/';
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    if ( elem.id == 'bdate' ) {
      document.getElementById('idate').focus();
    } else if ( elem.id == 'idate') {
      if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
        select_revision();
      }
      document.getElementById('edate').focus();
    }
  }
 
}

function bd_onkeyup_arg(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 2 ) {
      var elem_day = parseInt(elem.value.substring(0,2));
      if ( elem_day > 31 ) {
        document.getElementById(elem.id).value = prev_value;
      }
    } else if ( elem_length == 3 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 5 ) {

      var elem_day = parseInt(elem.value.substring(0,2));
      var elem_month = parseInt(elem.value.substring(3,5));

      if ( elem_month > 12 || elem_month < 1 ) {
        document.getElementById(elem.id).value = prev_value;
      } else if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '.';
        }
      } else {
        document.getElementById(elem.id).value = prev_value;
      }

    } else if ( elem_length == 6 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 10 ) {
      if ( elem.id == 'bdate' ) {
        document.getElementById('idate').focus();
      } else if ( elem.id == 'idate') {
        if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
          select_revision();
        }
        document.getElementById('edate').focus();
      }
    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }

  } else if ( elem_length == 2 && e.which == 190  ) {
    document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value.substring(0,1) + '.';
  } else if ( elem_length == 3 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value;
  } else if ( elem_length == 5 && e.which == 190  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,2) + '.0' + document.getElementById(elem.id).value.substring(3,4) + '.';
    
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 6 && e.which == 190 ) {
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.0' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    if ( elem.id == 'bdate' ) {
      document.getElementById('idate').focus();
    } else if ( elem.id == 'idate') {
      if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
        select_revision();
      }
      document.getElementById('edate').focus();
    }
  } else if ( elem_length > 10 ) {
    document.getElementById(elem.id).value = prev_value;
  }
 
}

function bd_onkeyup_can(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 5 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 8 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 10 ) {
      var elem_day = parseInt(elem.value.substring(8,10));
      var elem_month = parseInt(elem.value.substring(5,7));

      if ( elem_month > 12 || elem_month < 1 ) {
        document.getElementById(elem.id).value = prev_value;
      } else if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          if ( elem.id == 'bdate' ) {       
            document.getElementById('idate').focus();
          } else if ( elem.id == 'idate') {
            if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
              select_revision();
            }
            document.getElementById('edate').focus();
          }
        }
      } else {
        document.getElementById(elem.id).value = prev_value;
      }

    }
  } else if ( elem_length == 4 && e.which == 189 || elem_length == 4 && e.which == 190  ) {
    document.getElementById(elem.id).value = '1' + document.getElementById(elem.id).value.substring(0,3) + '-';
  } else if ( elem_length == 5 && e.which == 189 || elem_length == 5 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value;
  } else if ( elem_length == 7 && e.which == 189 || elem_length == 7 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,4) + '-0' + document.getElementById(elem.id).value.substring(5,6) + '-';
  } else if ( elem_length == 8 && e.which == 189 || elem_length == 8 && e.which == 190 ) {
    var elem_month = parseInt(elem.value.substring(5,7));
    if ( elem_month > 12 ) {
      document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,4) + '-';
    } else {
      document.getElementById(elem.id).value = document.getElementById(elem.id).value;
    }
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    if ( elem.id == 'bdate' ) {
      document.getElementById('idate').focus();
    } else if ( elem.id == 'idate') { 
      if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision']) {
        select_revision();
      }  
      document.getElementById('edate').focus();
    }
  } else if ( elem_length > 10 ) {
    document.getElementById(elem.id).value = '';
  }

}

function change_date_format(new_format_type) {

  var prev_format_type = format_type;

  format_type = new_format_type;

  if ( format_type == 'ARG' ) {
    document.getElementById('bdate').placeholder='DD.MM.YYYY';
    document.getElementById('idate').placeholder='DD.MM.YYYY';
    document.getElementById('edate').placeholder='DD.MM.YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_arg(this, event)');
    document.getElementById('idate').setAttribute('onkeyup','bd_onkeyup_arg(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_arg(this, event)');
    var next_form = 'USA';
  } else if ( format_type == 'CAN' ) {
    document.getElementById('bdate').placeholder= 'YYYY-MM-DD';
    document.getElementById('idate').placeholder= 'YYYY-MM-DD';
    document.getElementById('edate').placeholder= 'YYYY-MM-DD';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_can(this, event)');
    document.getElementById('idate').setAttribute('onkeyup','bd_onkeyup_can(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_can(this, event)');
    var next_form = 'ARG';
  } else if ( format_type == 'USA' ) {
    document.getElementById('bdate').placeholder='MM/DD/YYYY';
    document.getElementById('idate').placeholder='MM/DD/YYYY';
    document.getElementById('edate').placeholder='MM/DD/YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    document.getElementById('idate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    var next_form = 'CAN';
  }

  for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
    document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
    document.getElementsByClassName('gen_button_new')[i].setAttribute('onclick','change_date_format("'+next_form+'")');
  }

  if ( document.getElementById("state").value != languages[active_language]['select_state']) {
    revisions( document.getElementById("state").value );
  }

  if ( document.getElementById('bdate').value.length != 10 ) {
    document.getElementById('bdate').value = '';
  } else {

    if (prev_format_type == 'ARG') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(3,5));

      var text_elem_day = document.getElementById('bdate').value.substring(0,2);
      var text_elem_month = document.getElementById('bdate').value.substring(3,5);
      var text_elem_year = document.getElementById('bdate').value.substring(6,10);

    } else if (prev_format_type == 'CAN') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(8,10));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(5,7));

      var text_elem_day = document.getElementById('bdate').value.substring(8,10);
      var text_elem_month = document.getElementById('bdate').value.substring(5,7);
      var text_elem_year = document.getElementById('bdate').value.substring(0,4);

    } else if (prev_format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(0,2));

      var text_elem_day = document.getElementById('bdate').value.substring(3,5);
      var text_elem_month = document.getElementById('bdate').value.substring(0,2);
      var text_elem_year = document.getElementById('bdate').value.substring(6,10);

    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'ARG') {
        document.getElementById('bdate').value = text_elem_day + "." + text_elem_month + "." + text_elem_year;
      } else if (format_type == 'CAN') {
        document.getElementById('bdate').value = text_elem_year + "-" + text_elem_month + "-" + text_elem_day;
      } else {
        document.getElementById('bdate').value = text_elem_month + "/" + text_elem_day + "/" + text_elem_year;
      }
    } else {
      document.getElementById('bdate').value = '';
    }

  }

  if ( document.getElementById('idate').value.length != 10 ) {
    document.getElementById('idate').value = '';
  } else {

    if (prev_format_type == 'ARG') {
      var elem_day = parseInt(document.getElementById('idate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('idate').value.substring(3,5));

      var text_elem_day = document.getElementById('idate').value.substring(0,2);
      var text_elem_month = document.getElementById('idate').value.substring(3,5);
      var text_elem_year = document.getElementById('idate').value.substring(6,10);

    } else if (prev_format_type == 'CAN') {
      var elem_day = parseInt(document.getElementById('idate').value.substring(8,10));
      var elem_month = parseInt(document.getElementById('idate').value.substring(5,7));

      var text_elem_day = document.getElementById('idate').value.substring(8,10);
      var text_elem_month = document.getElementById('idate').value.substring(5,7);
      var text_elem_year = document.getElementById('idate').value.substring(0,4);

    } else if (prev_format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('idate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('idate').value.substring(0,2));

      var text_elem_day = document.getElementById('idate').value.substring(3,5);
      var text_elem_month = document.getElementById('idate').value.substring(0,2);
      var text_elem_year = document.getElementById('idate').value.substring(6,10);

    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'ARG') {
        document.getElementById('idate').value = text_elem_day + "." + text_elem_month + "." + text_elem_year;
      } else if (format_type == 'CAN') {
        document.getElementById('idate').value = text_elem_year + "-" + text_elem_month + "-" + text_elem_day;
      } else {
        document.getElementById('idate').value = text_elem_month + "/" + text_elem_day + "/" + text_elem_year;
      }

      if ( document.getElementById("state").value != languages[active_language]['select_state']) {
        revisions( document.getElementById("state").value );
      }

    } else {
      document.getElementById('idate').value = '';
    }

  }

  if ( document.getElementById('edate').value.length != 10 ) {
    document.getElementById('edate').value = '';
  } else {

    if (prev_format_type == 'ARG') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('edate').value.substring(3,5));

      var text_elem_day = document.getElementById('edate').value.substring(0,2);
      var text_elem_month = document.getElementById('edate').value.substring(3,5);
      var text_elem_year = document.getElementById('edate').value.substring(6,10);

    } else if (prev_format_type == 'CAN') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(8,10));
      var elem_month = parseInt(document.getElementById('edate').value.substring(5,7));

      var text_elem_day = document.getElementById('edate').value.substring(8,10);
      var text_elem_month = document.getElementById('edate').value.substring(5,7);
      var text_elem_year = document.getElementById('edate').value.substring(0,4);

    } else if (prev_format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('edate').value.substring(0,2));

      var text_elem_day = document.getElementById('edate').value.substring(3,5);
      var text_elem_month = document.getElementById('edate').value.substring(0,2);
      var text_elem_year = document.getElementById('edate').value.substring(6,10);

    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'ARG') {
        document.getElementById('edate').value = text_elem_day + "." + text_elem_month + "." + text_elem_year;
      } else if (format_type == 'CAN') {
        document.getElementById('edate').value = text_elem_year + "-" + text_elem_month + "-" + text_elem_day;
      } else {
        document.getElementById('edate').value = text_elem_month + "/" + text_elem_day + "/" + text_elem_year;
      }
    } else {
      document.getElementById('edate').value = '';
    }

  }


}


var format_type = 'USA';
change_date_format('USA');


function randomDate(start, end) {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

function addYears(date, years) {
  date.setFullYear(date.getFullYear() + years);

  return date;
}

function minusYears(date, years) {
  date.setFullYear(date.getFullYear() - years);

  return date;
}

function generate_bdate() {
  var bd = randomDate(new Date(1945, 0, 1), new Date(2006, 0, 1));

  var bgenday = String(bd.getDate());
  if (bgenday.length == 1 ) {
    bgenday = "0" + bgenday;
  }

  var bgenmonth = String(bd.getMonth() + 1);
  if (bgenmonth.length == 1 ) {
    bgenmonth = "0" + bgenmonth;
  }

  var bgenyear = String(bd.getFullYear());

  if ( format_type == 'ARG' ) {
    document.getElementById('bdate').value= bgenday + '.' + bgenmonth + '.' + bgenyear;
  } else if (format_type == 'CAN') {
    document.getElementById('bdate').value= bgenyear + '-' + bgenmonth + '-' + bgenday;
  } else {
    document.getElementById('bdate').value= bgenmonth + '/' + bgenday + '/' + bgenyear;
  }

  if ( document.getElementById("bdate").value.length == 10 &&
       document.getElementById("idate").value.length == 10 && 
       document.getElementById("country").value != languages[active_language]['select_country'] &&
       document.getElementById("state").value != languages[active_language]['select_state'] ) {
    issue_date(); 
  } 

}

function generate_edate() {
  var startdate = minusYears(new Date(), 2);
  var sd = randomDate(startdate, new Date());
  var sday = sd.getDay();


  while ( sday < 1 || sday > 5) {

    startdate = minusYears(new Date(), 2);
    sd = randomDate(startdate, new Date());
    sday = sd.getDay();

  }

  var egenday = String(sd.getDate());
  if (egenday.length == 1 ) {
    egenday = "0" + egenday;
  }

  var egenmonth = String(sd.getMonth() + 1);
  if (egenmonth.length == 1 ) {
    egenmonth = "0" + egenmonth;
  }

  var egenyear = String(sd.getFullYear());

  if ( format_type == 'ARG' ) {
    document.getElementById('idate').value = egenday + '.' + egenmonth + '.' + egenyear;
  } else if (format_type == 'CAN') {
    document.getElementById('idate').value = egenyear + '-' + egenmonth + '-' + egenday;
  } else {
    document.getElementById('idate').value = egenmonth + '/' + egenday + '/' + egenyear;
  }

  if ( document.getElementById('revision').length > 1 && document.getElementById('revision').value == languages[active_language]['sel_revision'] ) {
    select_revision();
  } 


  if ( document.getElementById("bdate").value.length == 10 &&
       document.getElementById("idate").value.length == 10 && 
       document.getElementById("country").value != languages[active_language]['select_country'] &&
       document.getElementById("state").value != languages[active_language]['select_state'] ) {
    issue_date(); 
  } 

}


function select_country() {
  if ( document.getElementById("country").value == 'USA' ) {
  	document.getElementById("state").innerHTML = usa_states;
    document.getElementById("weight_label").innerHTML = languages[active_language]['weight'] + ' (' + languages[active_language]['lbs']  + ')';
    document.getElementById("height_label_one").innerHTML = "'";
    document.getElementById("height_label_two").innerHTML = '"';
   
    document.getElementById("doc_type").disabled = 0;

    document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>';   
    document.getElementById("hair").value = languages[active_language]['sel_hair'];
    document.getElementById("hair").disabled = 0;

    document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
    document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
    document.getElementById("eyes").disabled = 0; 

    document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
    document.getElementById("scin_color").value = 'W';
    document.getElementById("scin_color").disabled = 0; 

    document.getElementById("restriction").disabled = 0;
    document.getElementById("restriction_txt").value = languages[active_language]['sel_doc_rest'];
    document.getElementById("restriction_txt").disabled = 0;

    document.getElementById("endosernent").disabled = 0;
    document.getElementById("endosernent_txt").value = languages[active_language]['sel_doc_endr'];
    document.getElementById("endosernent_txt").disabled = 0;

    document.getElementById("height_one").value = "";
    document.getElementById("height_one").disabled = 0;
    document.getElementById("height_two").value = "";
    document.getElementById("height_two").disabled = 0;

    document.getElementById("weight").value = "";
    document.getElementById("weight").disabled = 0;

    document.getElementById("address").value = "";
    document.getElementById("address").disabled = 0;

    document.getElementById("city").value = "";
    document.getElementById("city").disabled = 0;

    document.getElementById("zipcode").value = "";
    document.getElementById("zipcode").disabled = 0;

    if( format_type != 'USA' ) {
       change_date_format('USA');
    }

  } else if ( document.getElementById("country").value == 'CAN' ) {
    document.getElementById("state").innerHTML = can_states;
    document.getElementById("weight_label").innerHTML = languages[active_language]['weight'] + ' (' + languages[active_language]['kg']  + ')';
    document.getElementById("height_label_one").innerHTML = languages[active_language]['meter']; 
    document.getElementById("height_label_two").innerHTML = languages[active_language]['centimeter'];
    
    document.getElementById("doc_type").disabled = 0;
    
    document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>';   
    document.getElementById("hair").value = languages[active_language]['sel_hair'];
    document.getElementById("hair").disabled = 0;

    document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
    document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
    document.getElementById("eyes").disabled = 0; 

    document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
    document.getElementById("scin_color").value = 'W';
    document.getElementById("scin_color").disabled = 0; 

    document.getElementById("restriction").disabled = 0;
    document.getElementById("restriction_txt").value = languages[active_language]['sel_doc_rest'];
    document.getElementById("restriction_txt").disabled = 0;

    document.getElementById("endosernent").disabled = 0;
    document.getElementById("endosernent_txt").value = languages[active_language]['sel_doc_endr'];
    document.getElementById("endosernent_txt").disabled = 0;

    document.getElementById("height_one").value = "";
    document.getElementById("height_one").disabled = 0;
    document.getElementById("height_two").value = "";
    document.getElementById("height_two").disabled = 0;

    document.getElementById("weight").value = "";
    document.getElementById("weight").disabled = 0;

    document.getElementById("address").value = "";
    document.getElementById("address").disabled = 0;

    document.getElementById("city").value = "";
    document.getElementById("city").disabled = 0;

    document.getElementById("zipcode").value = "";
    document.getElementById("zipcode").disabled = 0;

    if( format_type != 'CAN' ) {
       change_date_format('CAN');
    }

  } else if ( document.getElementById("country").value == 'ARG' ) {
    document.getElementById("state").innerHTML = '<option value="All">All states</option>';
    document.getElementById("weight_label").innerHTML = languages[active_language]['weight'] + ' (' + languages[active_language]['kg']  + ')';
    document.getElementById("height_label_one").innerHTML = languages[active_language]['meter']; 
    document.getElementById("height_label_two").innerHTML = languages[active_language]['centimeter'];

    var possible_classes = '<option>'+languages[active_language]['doc_class_option']+'</option><option value="A">A</option><option value="B">B</option><option value="D">D</option>';
    document.getElementById("doc_class").innerHTML = possible_classes;
    document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
    document.getElementById("inventory_gen_b").setAttribute('onclick', 'generate_inventory()');
    document.getElementById('aud_html').innerHTML = '';
    document.getElementById('adds_row').innerHTML = ''; 
   
    document.getElementById("doc_type").value = 'ID';
    document.getElementById("doc_type").disabled = 1;

    document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
    document.getElementById("hair").value = 'UNK';
    document.getElementById("hair").disabled = 1; 

    document.getElementById("eyes").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
    document.getElementById("eyes").value = 'UNK';
    document.getElementById("eyes").disabled = 1; 

    document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
    document.getElementById("scin_color").value = 'U';
    document.getElementById("scin_color").disabled = 1; 

    var possible_restriction = '<option value="NONE">'+languages[active_language]['none']+'</option>';
    var possible_endorsment = '<option value="NONE">'+languages[active_language]['none']+'</option>'; 
    
    document.getElementById("restriction").innerHTML = possible_restriction;
    document.getElementById("restriction").disabled = 1;
    document.getElementById("restriction_txt").value = "NONE";
    document.getElementById("restriction_txt").disabled = 1;

    document.getElementById("endosernent").innerHTML = possible_endorsment;  
    document.getElementById("endosernent").disabled = 1; 
    document.getElementById("endosernent_txt").value = "NONE";
    document.getElementById("endosernent_txt").disabled = 1;

    document.getElementById("height_one").value = languages[active_language]['doesnotrequired'];
    document.getElementById("height_one").disabled = 1;
    document.getElementById("height_two").value = languages[active_language]['doesnotrequired'];
    document.getElementById("height_two").disabled = 1;

    document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
    document.getElementById("weight").disabled = 1;

    document.getElementById("address").value = languages[active_language]['doesnotrequired'];
    document.getElementById("address").disabled = 1;

    document.getElementById("city").value = languages[active_language]['doesnotrequired'];
    document.getElementById("city").disabled = 1;

    document.getElementById("zipcode").value = languages[active_language]['doesnotrequired'];
    document.getElementById("zipcode").disabled = 1;

    if( format_type != 'ARG' ) {
       change_date_format('ARG');
    }
     
  }
  selected_revision();
}

function dateDiffInDays(a, b) {
  const _MS_PER_DAY = 1000 * 60 * 60 * 24;
  // Discard the time and time-zone information.
  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());
 
  return Math.floor((utc2 - utc1) / _MS_PER_DAY);
}



function revisions(state) {
  var array_revisions = [];

  if ( document.getElementById("revision").value != languages[active_language]['sel_revision'] ) {
    var temp_revision = document.getElementById("revision").value;
  } else {
    var temp_revision = 'NO';
  }

  if ( document.getElementById("country").value == 'USA' ) {
    switch(state) {
      case 'AL':
        array_revisions.push('11012014');
        array_revisions.push('11062009');
        array_revisions.push('01012001');
      break;
      case 'AK':
        array_revisions.push('11012018');
        array_revisions.push('02062014');
      break;
      case 'AZ':
        array_revisions.push('02282023');
        array_revisions.push('02142014');
        array_revisions.push('01012000');
      break;
      case 'AR':
        array_revisions.push('03012018');
        array_revisions.push('01012001');
      break;
      case 'CA':
        array_revisions.push('08292017');
        array_revisions.push('04162010');
        array_revisions.push('01012001');
      break;
      case 'CO':
        array_revisions.push('02282022');
        array_revisions.push('10302015');
        array_revisions.push('06012013');
        array_revisions.push('01012001');
      break;
      case 'CT':
        array_revisions.push('02102017');
        array_revisions.push('01012000');
      break;
      case 'DC':
        array_revisions.push('01022015');
        array_revisions.push('09172013');
        array_revisions.push('01012000');
      break;
      case 'DE':
        array_revisions.push('08022017');
        array_revisions.push('08022010');
        array_revisions.push('01012000');
      break;
      case 'FL':
        array_revisions.push('03012020');
        array_revisions.push('05012019');
        array_revisions.push('03162017');
        array_revisions.push('06012014');
        array_revisions.push('09012012');
        array_revisions.push('07012011');
        array_revisions.push('01012000');
      break;
      case 'GA':
        array_revisions.push('01022019');
        array_revisions.push('07012015');
        array_revisions.push('05162014');
        array_revisions.push('01012000');
      break;
      case 'HI':
        array_revisions.push('01012020');
      break;
      case 'ID':
        array_revisions.push('01312023');
        array_revisions.push('09152016');
        array_revisions.push('04012015');
        array_revisions.push('01012000');
      break;
      case 'IL':
        array_revisions.push('09172015');
        array_revisions.push('01012000');
      break;
      case 'IN':
        array_revisions.push('07242018');
        array_revisions.push('09212009');
        array_revisions.push('01012000');
      break;
      case 'IA':
        array_revisions.push('06292017');
        array_revisions.push('07252011');
        array_revisions.push('01012000');
      break;
      case 'KS':
        array_revisions.push('02242017');
        array_revisions.push('06012012');
        array_revisions.push('01012000');
      break;
      case 'KY':
        array_revisions.push('08312018');
        array_revisions.push('03162012');
        array_revisions.push('01012000');
      break;
      case 'LA':
        array_revisions.push('02102015');
        array_revisions.push('07252013');
        array_revisions.push('01012000');
      break;
      case 'ME':
        array_revisions.push('01042019');
        array_revisions.push('01012000');
      break;
      case 'MD':
        array_revisions.push('08262019');
        array_revisions.push('06202016');
        array_revisions.push('01012000');
      break;
      case 'MA':
        array_revisions.push('02222016');
        array_revisions.push('07152009');
        array_revisions.push('01012000');
      break;
      case 'MI':
        array_revisions.push('01022024');
        array_revisions.push('07012012');
        array_revisions.push('01212011');
        array_revisions.push('01012000');
      break;
      case 'MN':
        array_revisions.push('10232017');
        array_revisions.push('01012000');
      break;
      case 'MS':
        array_revisions.push('09152023');
        array_revisions.push('05142021');
        array_revisions.push('02222016');
        array_revisions.push('01012000');
      break;
      case 'MO':
        array_revisions.push('01272020');
        array_revisions.push('12102012');
        array_revisions.push('01012000');
      break;
      case 'MT':
        array_revisions.push('10072015');
        array_revisions.push('01012000');
      break;
      case 'NE':
        array_revisions.push('04052021');
        array_revisions.push('02282017');
        array_revisions.push('07082009');
        array_revisions.push('01012000');
      break;
      case 'NV':
        array_revisions.push('05242021');
        array_revisions.push('10102008');
        array_revisions.push('01012000');
      break;
      case 'NH':
        array_revisions.push('06092016');
        array_revisions.push('01012000');
      break;
      case 'NJ':
        array_revisions.push('01082020');
        array_revisions.push('07232010');
        array_revisions.push('01012000');
      break;
      case 'NM':
        array_revisions.push('11012020');
        array_revisions.push('08232019');
        array_revisions.push('06162016');
        array_revisions.push('11152015');
        array_revisions.push('01012000');
      break;
      case 'NY':
        array_revisions.push('03072022');
        array_revisions.push('09282017');
        array_revisions.push('01012010');
        array_revisions.push('01012001');
      break;
      case 'NC':
        array_revisions.push('10242014');
        array_revisions.push('01012000');
      break;
      case 'ND':
        array_revisions.push('04302018');
        array_revisions.push('01082014');
        array_revisions.push('01012000');
      break;
      case 'OH':
        array_revisions.push('07012018');
        array_revisions.push('12042013');
        array_revisions.push('01012000');
      break;
      case 'OK':
        array_revisions.push('01132020');
        array_revisions.push('01012000');
      break;
      case 'OR':
        array_revisions.push('12082018');
        array_revisions.push('07092018');
        array_revisions.push('02202013');
        array_revisions.push('01012000');
      break;
      case 'PA':
        array_revisions.push('03252022');
        array_revisions.push('06072016');
        array_revisions.push('01012000');
      break;
      case 'PR':
        array_revisions.push('01012016');
      break;
      case 'RI':
        array_revisions.push('01262016');
        array_revisions.push('01012000');
      break;
      case 'SC':
        array_revisions.push('01012018');
        array_revisions.push('01012000');
      break;
      case 'SD':
        array_revisions.push('06292017');
        array_revisions.push('01012000');
      break;
      case 'TN':
        array_revisions.push('12022011');
        array_revisions.push('10292010');
        array_revisions.push('01012000');
      break;
      case 'TX':
        array_revisions.push('07162021');
        array_revisions.push('02232020');
        array_revisions.push('10102016');
        array_revisions.push('05012007');
        array_revisions.push('01012000');
      break;
      case 'UT':
        array_revisions.push('06012021');
        array_revisions.push('04152016');
        array_revisions.push('01012013');
        array_revisions.push('01012000');
      break;
      case 'VT':
        array_revisions.push('10162018');
        array_revisions.push('02202013');
        array_revisions.push('01012000');
      break;
      case 'VA':
        array_revisions.push('12102008');
        array_revisions.push('01012000');
      break;
      case 'WA':
        array_revisions.push('11122019');
        array_revisions.push('09042018');
        array_revisions.push('02092016');
        array_revisions.push('09162009');
        array_revisions.push('01012000');
      break;
      case 'WV':
        array_revisions.push('06042019');
        array_revisions.push('12182014');
        array_revisions.push('01012000');
      break;
      case 'WI':
        array_revisions.push('06012023');
        array_revisions.push('09012015');
        array_revisions.push('03162012');
        array_revisions.push('01012000');
      break;
      case 'WY':
        array_revisions.push('11142018');
        array_revisions.push('06082014');
        array_revisions.push('01012000');
      break;
    }
  } else if ( document.getElementById("country").value == 'CAN' ) {
    switch(state) {
      case 'AB':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'BC':
        array_revisions.push('05122022');
        array_revisions.push('03082020');
        array_revisions.push('01012000');
      break;
      case 'MB':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'NB':
        array_revisions.push('01012016');
        array_revisions.push('01012000');           
      break;
      case 'NL':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'NS':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'ON':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'PE':
        array_revisions.push('01012016');
        array_revisions.push('01012000');
      break;
      case 'QC':
        array_revisions.push('08012015');
        array_revisions.push('10012009');
      break;
      case 'SK':
        array_revisions.push('01012016');
        array_revisions.push('01012000'); 
      break;
    }
  } else {
    array_revisions.push('01012022');
  }
  
  var revisions_html = "<option id='rev_option'>"+languages[active_language]['sel_revision']+"</option>";
  var revision_selected = 0;

  array_revisions.forEach(function(element, index, array_revisions) {
    var bgenmonth = element.substring(0, 2);
    var bgenday = element.substring(2, 4);
    var bgenyear = element.substring(4);

    if ( format_type == 'ARG' ) {
      var formated_date = bgenday + '.' + bgenmonth + '.' + bgenyear;
    } else if (format_type == 'CAN') {
      var formated_date = bgenyear + '-' + bgenmonth + '-' + bgenday;
    } else {
      var formated_date = bgenmonth + '/' + bgenday + '/' + bgenyear;
    } 

    revisions_html += "<option value='"+element+"'";
    if ( element == temp_revision ) {
      revisions_html += " selected";
    }
    revisions_html += ">"+formated_date+"</option>";


  });

  document.getElementById("revision").innerHTML = revisions_html;


}


function select_revision() {

  if ( format_type == 'ARG') {
    var isu_year = document.getElementById("idate").value.substring(6,10);
    var isu_mouth = document.getElementById("idate").value.substring(3,5);
    var isu_day = document.getElementById("idate").value.substring(0,2);
  } else if ( format_type == 'CAN') {
    var isu_year = document.getElementById("idate").value.substring(0,4);
    var isu_mouth = document.getElementById("idate").value.substring(5,7);
    var isu_day = document.getElementById("idate").value.substring(8,10);
  } else if ( format_type == 'USA') {
    var isu_year = document.getElementById("idate").value.substring(6,10);
    var isu_mouth = document.getElementById("idate").value.substring(0,2);
    var isu_day = document.getElementById("idate").value.substring(3,5);
  }

  for (var i = 1; i < document.getElementById('revision').length; i++) {
    var elem_value = document.getElementById('revision')[i].value;
    console.log(elem_value);
    var item_month = elem_value.substring(0, 2);
    var item_day = elem_value.substring(2, 4);
    var item_year = elem_value.substring(4);

    if ( new Date ( parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day) )  >= new Date ( parseInt(item_year) ,  parseInt(item_month) - 1, parseInt(item_day) ) ) {
      document.getElementById('revision').value  = document.getElementById('revision')[i].value;
      break;
    }
  
  }

  selected_revision();

}


function select_state() {
  state = document.getElementById("state").value;

  if ( doc_type == 'ID' ) {

    var possible_classes = '<option value="NONE">'+languages[active_language]['none']+'</option>';

    document.getElementById("doc_class").innerHTML = possible_classes;
    document.getElementById("doc_class").disabled = 1;
    document.getElementById("doc_class_txt").value = "NONE";
    document.getElementById("doc_class_txt").disabled = 1;

    var possible_restriction = '<option value="NONE">'+languages[active_language]['none']+'</option>';
    
    document.getElementById("restriction").innerHTML = possible_restriction; 
    document.getElementById("restriction").disabled = 1;
    document.getElementById("restriction_txt").value = "NONE";
    document.getElementById("restriction_txt").disabled = 1;

    var possible_endorsment = '<option value="NONE">'+languages[active_language]['none']+'</option>'; 

        
    document.getElementById("endosernent").innerHTML = possible_endorsment; 
    document.getElementById("endosernent").disabled = 1;
    document.getElementById("endosernent_txt").value = "NONE";
    document.getElementById("endosernent_txt").disabled = 1;

  } else {

    if( document.getElementById("country").value == 'USA' ) {

      switch(state) {
      case 'AL':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="P">P</option><option value="N">N</option><option value="T">T</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';
  
        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'AK':
        document.getElementById('inv_html').innerHTML = '';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'AZ':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'AR':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'CA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="A">A</option><option value="C">C</option><option value="CM1">CM1</option>';
        var possible_restriction = '<option value=""></option><option value="01">01</option><<option value="M">M</option><option value="NONE">NONE</option>'; 
        var possible_endorsment = '<option value=""></option><option value="P">P</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'CO':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="R">R</option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>'; 
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0; 

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'CT':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="Q">Q</option><option value="P">P</option><option value="F">F</option><option value="N">N</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-6"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ct_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1; 

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'DC':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="0">0</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="O">O</option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1; 

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'DE':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="M">M</option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="de_address2" value=""></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'FL':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="E">E</option><option value="B">B</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("eyes").value = 'UNK';
        document.getElementById("eyes").disabled = 1;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'GA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="G">G</option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['country']+'</div><input class="inputer" type="text" id="country_ge" value="Brooks" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'HI':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="3">3</option><option value="NONE">NONE</option>';
        var possible_restriction = '<option value=""></option><option value="F">F</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="hi_address2" value=""></div>';
  
        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'ID':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="M">M</option>';
        document.getElementById('adds_row').innerHTML = '';


        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'IL':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="F">F</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'IN':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="F">F</option><option value="9">9</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="2">2</option><option value="L">L</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="in_issuecode" value="527" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="in_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'IA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'KS':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'KY':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="E">E</option>';
        var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'LA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="E">E</option>';
        var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="la_issueoffice" value="034" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['parish']+'</div><input class="inputer" type="text" id="la_parish" value="52" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="la_address2" value="NONE" required></div>';  
        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break; 
      case 'ME':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="me_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="V">V</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'MD':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option><option value="CM">CM</option>';
        var possible_restriction = '<option value="NONE"></option><option value="A">A</option><option value="B">B</option><option value="U">U</option><option value="T">T</option><option value="AU">AU</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value="NONE"></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'MA': 
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="ma_address2" value="NONE" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;  
      case 'MI':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="E">E</option><option value="O">O</option><option value="E,O">E,O</option>';
        var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="CY">CY</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="mi_address2" value="NONE" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("eyes").value = 'UNK';
        document.getElementById("eyes").disabled = 1;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = languages[active_language]['doesnotrequired'];
        document.getElementById("height_one").disabled = 1;
        document.getElementById("height_two").value = languages[active_language]['doesnotrequired'];
        document.getElementById("height_two").disabled = 1;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'MN':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="2">2</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'MS':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="R">R</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'MO':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="E">E</option><option value="F">F</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'MT':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="YES">YES</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'NE':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="O">O</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ne_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'NV':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="CM">CM</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="nv_address2" value=""></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="nv_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0; 

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'NH':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="nh_address2" value="NONE" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'NJ':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['option_1']+'</div><input class="inputer" type="text" id="nj_option1" value="WV" required></div><div class= "col-4"><div class="label_pdf">'+languages[active_language]['option_2']+'</div><input class="inputer" type="text" id="nj_option2" value="REN" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['option_3']+'</div><input class="inputer" type="text" id="nj_option3" value="24.00" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break; 
      case 'NM':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="W">W</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;          
      case 'NY':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'NC':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'ND':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
        var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="nd_option_1" value="'+makestr(3, digits)+'" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'OH':
        document.getElementById('inv_html').innerHTML = '';
        document.getElementById('aud_html').innerHTML = '';  
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="oh_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['state_birth']+'</div><input class="inputer" type="text" id="oh_state_birth" value="Ohio" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="oh_address2" value=""></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'OK':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ok_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option></select></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['country']+'</div><input class="inputer" type="text" id="ok_state_birth" value="OK" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['additional']+'</div><input class="inputer" type="text" id="ok_additional" value="77.00" required></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'OR':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option>';
        var possible_restriction = '<option value=""></option><option value="D">D</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="or_address2" value=""></div><div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="or_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option></select></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'PA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option>';
        var possible_restriction = '<option value=""></option><option value="L">L</option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-6"><div class="label_pdf">Dups</div><input class="inputer" type="text" id="pa_dups" value="00"></div><div class= "col-6"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="pa_is_office" value="603"></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'PR':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="3">3</option>';
        var possible_restriction = '<option value=""></option><option value="7">7</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'RI':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="10">10</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'SC':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0;
      break;
      case 'SD':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="1">1</option>';
        var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'TN':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="01">01</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="tn_address2" value=""></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'TX':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option><option value="CM">CM</option><option value="A">A</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="X">X</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="tx_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option></select></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
        document.getElementById("scin_color").value = 'W';
        document.getElementById("scin_color").disabled = 0;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'UT':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="B">B</option>';
        var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="MN">MN</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['ut_issue_office']+'</div><input class="inputer" type="text" id="ut_is_office" value="H" required></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'VT':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'VA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="C">C</option><option value="X">X</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'WA':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'WV':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="E">E</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="2">2</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'WI':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="D">D</option><option value="DM">DM</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="J">J</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'WY':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        var possible_classes = '<option value=""></option><option value="A">A</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;               
      }
    } else if ( document.getElementById("country").value == 'CAN' ) {
      switch(state) { 
      case 'AB':    
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="5">5</option><option value="6">6</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 
      break;
      case 'BC':    
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = ''; 
        var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="06">06</option><option value="07">07</option><option value="08">08</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="28">28</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="51">51</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="06">06</option><option value="07">07</option><option value="08">08</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="28">28</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="51">51</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['can_bc_phealthnum']+'</div><input class="inputer" type="text" id="bc_phn" value="" placeholder="1234 123 123"></div>';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = "";
        document.getElementById("weight").disabled = 0; 

        document.getElementById("discriminator").value = "NONE";
      break;
      case 'MB':    
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="5F">5F</option><option value="6">6</option><option value="6F">6F</option><option value="7">7</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="N">N</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
        document.getElementById("hair").value = languages[active_language]['sel_hair'];
        document.getElementById("hair").disabled = 0;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'NB':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="5">5</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="01">01</option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'NL':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="05">05</option>';
        var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'NS':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="5">5</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'ON':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="G2">G2</option><option value="G">G</option><option value="GM">GM</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="X">X</option><option value="Z">Z</option>';
        var possible_endorsment = '<option value=""></option><option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['can_on_vehicle_number']+'</div><input class="inputer" type="text" id="on_vnumber" value="NONE"></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("eyes").value = 'UNK';
        document.getElementById("eyes").disabled = 1;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'PE':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="5">5</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'SK':
        document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="7">7</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option><option value="C">C</option><option value="D">D</option><option value="E">E</option><option value="F">F</option><option value="G">G</option><option value="H">H</option><option value="J">J</option><option value="K">K</option><option value="L">L</option><option value="M">M</option><option value="N">N</option><option value="T">T</option><option value="W">W</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option><option value="C">C</option><option value="D">D</option><option value="E">E</option><option value="F">F</option><option value="G">G</option><option value="H">H</option><option value="J">J</option><option value="K">K</option><option value="L">L</option><option value="M">M</option><option value="N">N</option><option value="T">T</option><option value="W">W</option>';
        document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="sk_address_2" value=""></div>';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;
      case 'QC':
        document.getElementById('inv_html').innerHTML = '';
        document.getElementById('aud_html').innerHTML = '';
        var possible_classes = '<option value=""></option><option value="5">5</option><option value="4C">4C</option><option value="4B">4B</option><option value="6A">6A</option>';
        var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
        var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
        document.getElementById('adds_row').innerHTML = '';

        document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("hair").value = 'UNK';
        document.getElementById("hair").disabled = 1;

        document.getElementById("eyes").innerHTML = '<option id="eyes_option">'+languages[active_language]['sel_eyes']+'</option><option value="BLK" id="eyes_col_blk">BLK</option><option value="BLU" id="eyes_col_blu">BLU</option><option value="BRO" id="eyes_col_brn">BRO</option><option value="GRY" id="eyes_col_gry">GRY</option><option value="HAZ" id="eyes_col_haz">HAZ</option><option value="MAR" id="hair_col_mar">MAR</option><option value="PNK" id="eyes_col_pnk">PNK</option><option value="DIC" id="eyes_col_dic">DIC</option><option value="UNK" id="eyes_col_unk">UNK</option><option value="GRN" id="eyes_col_grn">GRN</option>';
        document.getElementById("eyes").value = languages[active_language]['sel_eyes'];
        document.getElementById("eyes").disabled = 0;

        document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
        document.getElementById("scin_color").value = 'U';
        document.getElementById("scin_color").disabled = 1;

        document.getElementById("height_one").value = "";
        document.getElementById("height_one").disabled = 0;
        document.getElementById("height_two").value = "";
        document.getElementById("height_two").disabled = 0;

        document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
        document.getElementById("weight").disabled = 1;
      break;                 
      }
    }
  
    document.getElementById("doc_class").innerHTML = possible_classes;
    document.getElementById("doc_class").disabled = 0;
    document.getElementById("doc_class_txt").value = languages[active_language]['doc_class_option'];
    document.getElementById("doc_class_txt").disabled = 0;

    document.getElementById("restriction").innerHTML = possible_restriction;
    document.getElementById("restriction").disabled = 0;
    document.getElementById("restriction_txt").value = languages[active_language]['sel_doc_rest'];
    document.getElementById("restriction_txt").disabled = 0;


    document.getElementById("endosernent").innerHTML = possible_endorsment;
    document.getElementById("endosernent").disabled = 0;
    document.getElementById("endosernent_txt").value = languages[active_language]['sel_doc_endr'];
    document.getElementById("endosernent_txt").disabled = 0;

  }

  document.getElementById("doc_num_gen_b").setAttribute('onclick', 'generate_doc_number()');
  document.getElementById("doc_number").value = '';

  document.getElementById("discriminator_gen_b").setAttribute('onclick', 'generate_discriminator()');
  document.getElementById("discriminator").value = '';
  
  inventory = '';
  if( document.getElementById("inventory_selector") != null ) {
    document.getElementById("inventory").value = '';
    document.getElementById("inventory_gen_b").setAttribute('onclick', 'generate_inventory()');
  }
  
  audit = '';
  if( document.getElementById("audit_selector") != null ) {
    document.getElementById("audit").value = '';
    document.getElementById("audit_gen_b").setAttribute('onclick', 'generate_audit()'); 
  }
  
  revisions(state);
  selected_revision();
  
}

if (  generate_link.includes(" AND ") && generate_link.includes("any-state") === false ) {
  var country_selection = generate_link.split(' AND ')[0];
  document.getElementById("country").value = country_selection;
  select_country();
  document.getElementById("country").disabled = true;
  var state_selection = generate_link.split(' AND ')[1];
  document.getElementById("state").value = state_selection;
  select_state();
  document.getElementById("state").disabled = true;
} 

function select_doc_type() {
  doc_type = document.getElementById("doc_type").value;
  if ( doc_type == 'DL' ) {
  if( document.getElementById("country").value == 'USA' ) {  
  switch(state) {
    case 'AL':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="P">P</option><option value="N">N</option><option value="T">T</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'AK':
      document.getElementById('inv_html').innerHTML = '';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';      
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'AZ':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';      
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'AR':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';      
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'CA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="A">A</option><option value="C">C</option><option value="CM1">CM1</option>';
      var possible_restriction = '<option value=""></option><option value="01">01</option><option value="M">M</option><option value="NONE">NONE</option>'; 
      var possible_endorsment = '<option value=""></option><option value="P">P</option><option value="NONE">NONE</option>';     
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'CO':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="R">R</option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>'; 
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';  
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'CT':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="Q">Q</option><option value="P">P</option><option value="F">F</option><option value="N">N</option><option value="NONE">NONE</option>';    
      document.getElementById('adds_row').innerHTML = '<div class="col-6"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ct_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break;
    case 'DC':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="0">0</option><option value="NONE">NONE</option>'; 
      var possible_endorsment = '<option value=""></option><option value="O">O</option><option value="M">M</option><option value="NONE">NONE</option>';        
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'DE':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';       
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="de_address2" value=""></div>';    
    break;
    case 'FL':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="E">E</option><option value="B">B</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break; 
    case 'GA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="G">G</option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['country']+'</div><input class="inputer" type="text" id="country_ge" value="Brooks" required></div>';
    break;
    case 'HI':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="3">3</option><option value="NONE">NONE</option>';
      var possible_restriction = '<option value=""></option><option value="F">F</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="hi_address2" value=""></div>';
    break;
    case 'ID':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="M">M</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break; 
    case 'IL':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="F">F</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'IN':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="F">F</option><option value="9">9</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="2">2</option><option value="L">L</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="in_issuecode" value="527" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="in_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break;
    case 'IA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break; 
    case 'KS':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;  
    case 'KY':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="E">E</option>';
      var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'LA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="E">E</option>';
      var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="la_issueoffice" value="034" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['parish']+'</div><input class="inputer" type="text" id="la_parish" value="52" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="la_address2" value="NONE" required></div>';
    break;
    case 'ME':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="me_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="V">V</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break; 
    case 'MD':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option><option value="CM">CM</option>';
      var possible_restriction = '<option value="NONE"></option><option value="A">A</option><option value="B">B</option><option value="U">U</option><option value="T">T</option><option value="AU">AU</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value="NONE"></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'MA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="ma_address2" value="NONE" required></div>';
    break;
    case 'MI':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="E">E</option><option value="O">O</option><option value="E,O">E,O</option>';
      var possible_restriction = '<option value=""></option><option value="C">C</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="CY">CY</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="mi_address2" value="NONE" required></div>';
    break;
    case 'MN':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="2">2</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'MS':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="R">R</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'MO':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="E">E</option><option value="F">F</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'MT':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="YES">YES</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'NE':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="O">O</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ne_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break; 
    case 'NV':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option><option value="CM">CM</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="nv_address2" value=""></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="nv_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break;
    case 'NH':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="nh_address2" value="NONE" required></div>';
    break;
    case 'NJ':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['option_1']+'</div><input class="inputer" type="text" id="nj_option1" value="WV" required></div><div class= "col-4"><div class="label_pdf">'+languages[active_language]['option_2']+'</div><input class="inputer" type="text" id="nj_option2" value="REN" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['option_3']+'</div><input class="inputer" type="text" id="nj_option3" value="24.00" required></div>';
    break;
    case 'NM':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="W">W</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = ''; 
    break;                                     
    case 'NY':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="E">E</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'NC':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';    
    break;
    case 'ND':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
      var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="nd_option_1" value="'+makestr(3, digits)+'" required></div>';
    break;
    case 'OH':
      document.getElementById('inv_html').innerHTML = '';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class="col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="oh_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['state_birth']+'</div><input class="inputer" type="text" id="oh_state_birth" value="Ohio" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="oh_address2" value=""></div>';
    break;
    case 'OK':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="ok_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option></select></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['country']+'</div><input class="inputer" type="text" id="ok_state_birth" value="OK" required></div><div class="col-4"><div class="label_pdf">'+languages[active_language]['additional']+'</div><input class="inputer" type="text" id="ok_additional" value="77.00" required></div>';
    break;
    case 'OR':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option>';
      var possible_restriction = '<option value=""></option><option value="D">D</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="M">M</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="or_address2" value=""></div><div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="or_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option><option vale="I">I</option><option vale="II">II</option><option vale="III">III</option></select></div>';
    break;
    case 'PA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option>';
      var possible_restriction = '<option value=""></option><option value="L">L</option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-6"><div class="label_pdf">Dups</div><input class="inputer" type="text" id="pa_dups" value="00"></div><div class= "col-6"><div class="label_pdf">'+languages[active_language]['in_issue_office']+'</div><input class="inputer" type="text" id="pa_is_office" value="603"></div>';
    break;
    case 'RI':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="10">10</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'PR':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="3">3</option>';
      var possible_restriction = '<option value=""></option><option value="7">7</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'SC':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'SD':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="1">1</option>';
      var possible_restriction = '<option value=""></option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'TN':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="01">01</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="tn_address2" value=""></div>';
    break;
    case 'TX':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="C">C</option><option value="M">M</option><option value="CM">CM</option><option value="A">A</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="X">X</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['sufix']+'</div><select class="inputer select_pdf" id="tx_name_sufix" required><option vale="NONE" selected>NONE</option><option vale="JR">JR</option><option vale="SR">SR</option><option vale="1ST">1ST</option><option vale="2ST">2ST</option><option vale="3ST">3ST</option><option vale="4ST">4ST</option><option vale="5ST">5ST</option><option vale="6ST">6ST</option></select></div>';
    break;
    case 'UT': 
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="B">B</option>';
      var possible_restriction = '<option value=""></option><option value="A">A</option><option value="B">B</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="MN">MN</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['ut_issue_office']+'</div><input class="inputer" type="text" id="ut_is_office" value="H" required></div>';
    break; 
    case 'VT':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'VA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="M">M</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="C">C</option><option value="X">X</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'WA':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="A">A</option><option value="NONE">NONE</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'WV':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="E">E</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="2">2</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'WI':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="D">D</option><option value="DM">DM</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="B">B</option><option value="J">J</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'WY':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '<div class="label_pdf" id="audit_selector">'+languages[active_language]['audit']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="audit" onclick="audit_number_copy(event)"></label><button type="button" id="audit_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      var possible_classes = '<option value=""></option><option value="A">A</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {  
    case 'AB':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="5">5</option><option value="6">6</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'BC':    
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = ''; 
      var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="06">06</option><option value="07">07</option><option value="08">08</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="28">28</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="51">51</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="06">06</option><option value="07">07</option><option value="08">08</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="28">28</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="51">51</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['can_bc_phealthnum']+'</div><input class="inputer" type="text" id="bc_phn" value="" placeholder="1234 123 123"></div>';
    break;
    case 'MB':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="5F">5F</option><option value="6">6</option><option value="6F">6F</option><option value="7">7</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="N">N</option>';
      document.getElementById('adds_row').innerHTML = '';
    break; 
    case 'NB':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="5">5</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="01">01</option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'NL':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="05">05</option>';
      var possible_restriction = '<option value=""></option><option value="1">1</option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'NS':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="5">5</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'ON':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="G2">G2</option><option value="G">G</option><option value="GM">GM</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="X">X</option><option value="Z">Z</option>';
      var possible_endorsment = '<option value=""></option><option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['can_on_vehicle_number']+'</div><input class="inputer" type="text" id="on_vnumber" value="NONE"></div>';
    break;
    case 'PE':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="5">5</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
    case 'SK':
      document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="7">7</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option><option value="C">C</option><option value="D">D</option><option value="E">E</option><option value="F">F</option><option value="G">G</option><option value="H">H</option><option value="J">J</option><option value="K">K</option><option value="L">L</option><option value="M">M</option><option value="N">N</option><option value="T">T</option><option value="W">W</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option><option value="A">A</option><option value="B">B</option><option value="C">C</option><option value="D">D</option><option value="E">E</option><option value="F">F</option><option value="G">G</option><option value="H">H</option><option value="J">J</option><option value="K">K</option><option value="L">L</option><option value="M">M</option><option value="N">N</option><option value="T">T</option><option value="W">W</option>';
      document.getElementById('adds_row').innerHTML = '<div class= "col-4"><div class="label_pdf">'+languages[active_language]['address_line_2']+'</div><input class="inputer" type="text" id="sk_address_2" value=""></div>';
    break;
    case 'QC':
      document.getElementById('inv_html').innerHTML = '';
      document.getElementById('aud_html').innerHTML = '';
      var possible_classes = '<option value=""></option><option value="5">5</option><option value="4C">4C</option><option value="4B">4B</option><option value="6A">6A</option>';
      var possible_restriction = '<option value=""></option><option value="NONE">NONE</option>';
      var possible_endorsment = '<option value=""></option><option value="NONE">NONE</option>';
      document.getElementById('adds_row').innerHTML = '';
    break;
  }  
  }

  document.getElementById("doc_class").innerHTML = possible_classes;
  document.getElementById("doc_class").disabled = 0;
  document.getElementById("doc_class_txt").value = languages[active_language]['doc_class_option'];
  document.getElementById("doc_class_txt").disabled = 0;

  document.getElementById("restriction").innerHTML = possible_restriction;
  document.getElementById("restriction").disabled = 0;
  document.getElementById("restriction_txt").value = languages[active_language]['sel_doc_rest'];
  document.getElementById("restriction_txt").disabled = 0;

  document.getElementById("endosernent").innerHTML = possible_endorsment;
  document.getElementById("endosernent").disabled = 0;
  document.getElementById("endosernent_txt").value = languages[active_language]['sel_doc_endr'];
  document.getElementById("endosernent_txt").disabled = 0;


  } else if ( doc_type == 'ID' ) {
  var possible_classes = '<option value="">'+languages[active_language]['none']+'</option>';
  var possible_restriction = '<option value="NONE">'+languages[active_language]['none']+'</option>';
  var possible_endorsment = '<option value="NONE">'+languages[active_language]['none']+'</option>'; 

  document.getElementById("doc_class").innerHTML = possible_classes;
  document.getElementById("doc_class").disabled = 1;
  document.getElementById("doc_class_txt").value = "NONE";
  document.getElementById("doc_class_txt").disabled = 1;

  document.getElementById("restriction").innerHTML = possible_restriction; 
  document.getElementById("restriction").disabled = 1;
  document.getElementById("restriction_txt").value = "NONE";
  document.getElementById("restriction_txt").disabled = 1; 

  document.getElementById("endosernent").innerHTML = possible_endorsment;   
  document.getElementById("endosernent").disabled = 1;

  document.getElementById("endosernent_txt").value = "NONE";
  document.getElementById("endosernent_txt").disabled = 1;
  } 

  document.getElementById("doc_num_gen_b").setAttribute('onclick', 'generate_doc_number()');
  document.getElementById("doc_number").value = '';

  document.getElementById("discriminator_gen_b").setAttribute('onclick', 'generate_discriminator()');
  document.getElementById("discriminator").value = '';
  
  inventory = '';
  if( document.getElementById("inventory_selector") != null ) {
    document.getElementById("inventory").value = '';
    document.getElementById("inventory_gen_b").setAttribute('onclick', 'generate_inventory()');
  }

  audit = '';
  if( document.getElementById("audit_selector") != null ) {
    document.getElementById("audit").value = '';
    document.getElementById("audit_gen_b").setAttribute('onclick', 'generate_audit()'); 
  }

  selected_revision();

}

function selected_revision() {
  if ( document.getElementById("revision").value != languages[active_language]['sel_revision'] &&
       document.getElementById("country").value != languages[active_language]['select_country'] &&
       document.getElementById("doc_type").value != languages[active_language]['select_type'] &&
       document.getElementById("state").value != languages[active_language]['select_state'] ) {

     if( document.getElementById("country").value == 'USA' ) {
       switch(state) {
         case 'AK':
           if ( document.getElementById("revision").value == '11012018' ) {
             document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
             document.getElementById("hair").value = languages[active_language]['sel_hair'];
             document.getElementById("hair").disabled = 0;

             document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
             document.getElementById("scin_color").value = 'W';
             document.getElementById("scin_color").disabled = 0;

             document.getElementById("weight").value = "";
             document.getElementById("weight").disabled = 0;

             document.getElementById('inv_html').innerHTML = '<div class="label_pdf" id="inventory_selector">'+languages[active_language]['inventory']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto" type="text" id="inventory" onclick="inventory_number_copy(event)"></label><button type="button" onclick="generate_inventory();" id="inventory_gen_b" class="gen_button">'+languages[active_language]['auto']+'</button></div>';
           } else {
             document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
             document.getElementById("hair").value = 'UNK';
             document.getElementById("hair").disabled = 1;

             document.getElementById("eyes").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
             document.getElementById("eyes").value = 'UNK';
             document.getElementById("eyes").disabled = 1;

             document.getElementById("height_one").value = languages[active_language]['doesnotrequired'];
             document.getElementById("height_one").disabled = 1;
             document.getElementById("height_two").value = languages[active_language]['doesnotrequired'];
             document.getElementById("height_two").disabled = 1;

             document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
             document.getElementById("weight").disabled = 1;

             document.getElementById('inv_html').innerHTML = '';
           }
         break;
         case 'AR':
           if (  document.getElementById("revision").value == '03012018' ) {
             document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
             document.getElementById("scin_color").value = 'U';
             document.getElementById("scin_color").disabled = 1;
           } else {
             document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
             document.getElementById("scin_color").value = 'W';
             document.getElementById("scin_color").disabled = 0;
           }
         break;
         case 'CO':
           if ( document.getElementById("revision").value == '02282022' || document.getElementById("revision").value == '10302015' ) {
             document.getElementById("hair").innerHTML = '<option id="hair_option">'+languages[active_language]['sel_hair']+'</option> <option value="BAL" id="hair_col_bal">BAL</option><option value="BLK" id="hair_col_blk">BLK</option><option value="BLN" id="hair_col_bln">BLN</option><option value="BRO" id="hair_col_brn">BRO</option> <option value="GRY" id="hair_col_gry">GRY</option><option value="RED" id="hair_col_red">RED</option><option value="SDY" id="hair_col_sdy">SDY</option><option value="WHI" id="hair_col_whi">WHI</option><option value="UNK" id="hair_col_unk">UNK</option>'; 
             document.getElementById("hair").value = languages[active_language]['sel_hair'];
             document.getElementById("hair").disabled = 0;

             document.getElementById("scin_color").innerHTML = '<option id="skin_col_ai" value="AI">'+languages[active_language]['skin_col_ai']+'</option><option id="skin_col_ap" value="AP">'+languages[active_language]['skin_col_ap']+'</option><option id="skin_col_bk" value="BK">'+languages[active_language]['skin_col_bk']+'</option><option id="skin_col_w" value="W">'+languages[active_language]['skin_col_w']+'</option><option id="skin_col_h" value="H">'+languages[active_language]['skin_col_h']+'</option><option id="skin_col_u" value="U">'+languages[active_language]['skin_col_u']+'</option>';
             document.getElementById("scin_color").value = 'W';
             document.getElementById("scin_color").disabled = 0;

             document.getElementById("weight").value = "";
             document.getElementById("weight").disabled = 0;
           } else {
             document.getElementById("hair").innerHTML = '<option value="UNK">'+languages[active_language]['doesnotrequired']+'</option>';
             document.getElementById("hair").value = 'UNK';
             document.getElementById("hair").disabled = 1;

             document.getElementById("scin_color").innerHTML = '<option value="U">'+languages[active_language]['doesnotrequired']+'</option>';
             document.getElementById("scin_color").value = 'U';
             document.getElementById("scin_color").disabled = 1;

             document.getElementById("weight").value = languages[active_language]['doesnotrequired'];
             document.getElementById("weight").disabled = 1;
           }
         break;
       }     

     }

     var revision_in_public_format = document.getElementById('revision').value.substring(0,2)+"/"+document.getElementById('revision').value.substring(2,4)+"/"+document.getElementById('revision').value.substring(4,8);
    
     var send_http_for_template = new XMLHttpRequest();
     var params_for_template = 'country='+document.getElementById("country").value+'&state='+document.getElementById("state").value+'&revision='+revision_in_public_format+'&type=DL';

         send_http_for_template.open('POST', 'https://pdf417mrz.xyz/api/find-template', true);
         send_http_for_template.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
         send_http_for_template.onreadystatechange = function() {
         if(send_http_for_template.readyState == 4 && send_http_for_template.status == 200) {

          var result_data_for_template = JSON.parse(send_http_for_template.responseText);
               
          switch (result_data_for_template.type) {
          case 1:
            var link_for_template = "https://pdf417mrz.xyz/";

            switch(active_language) {
             case 'cn':
              link_for_template += active_language+'/';
              var seo_link_name = '购买 '+result_data_for_template.title;
              break;
             case 'hi':
              link_for_template += active_language+'/';
              var seo_link_name = result_data_for_template.title+' खरीदें';
              break;
             case 'ru':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купить '+result_data_for_template.title;
              break;
             case 'ua':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купити '+result_data_for_template.title;
              break;
             default:
              var seo_link_name = 'Buy '+result_data_for_template.title;
              break;
            }

            link_for_template += 'psd-templates/'+result_data_for_template.handle;

            document.getElementById('left_column_result').innerHTML = '<div class="col-sm-6 col-md-3 col-lg-3"><div class="shop-item"><div class="shop-item-image"><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.front+'" alt="'+result_data_for_template.title+' - Front"/><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.back+'" alt="'+result_data_for_template.title+' - Back"/><div class="shop-item-detail"><a href="'+link_for_template+'" target="_blank" class="btn btn-round btn-b"><span class="icon-basket">'+languages[active_language]['buy_label']+'</span></a></div></div><h4 class="shop-item-title font-alt"><a href="'+link_for_template+'">'+result_data_for_template.title+' - '+result_data_for_template.price+'$</a></h4>'+languages[active_language]['text_buy_label'].replace('TEMPLATE_NAME','<a target="_blank" href="'+link_for_template+'">'+seo_link_name+'</a>' )+'</div></div>';
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button><button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
            }
          break;
          default:
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button>';
            }
          break;
          }

         } else if (send_http_for_template.readyState == 4 && send_http_for_template.status == 404) {
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
            }
         }
        };

        send_http_for_template.send(params_for_template);      

  } else {
    if (  generate_link.includes(" AND ") ) {
      document.getElementById('left_column_result').innerHTML = '';
      document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
    } else {
      document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
      document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
    }    
  }
}

function only_numbers( input_id ) {
  var new_value = document.getElementById(input_id).value;
  var new_good_value = new_value.replace(/[^\d.-]/g, '');
  document.getElementById(input_id).value = new_good_value;
}


function birthday_date_doc_n() {
  if( document.getElementById("bdate").value.length >= 10 ) {
    if ( state == 'CT' ) {
      generate_doc_number();
    } 
  }
}

function birthday_date_discriminator() {
  if( document.getElementById("bdate").value.length >= 10 ) {  
    if ( state == 'AZ' ) {
      generate_discriminator();
    } 
  }
}

function sex_discriminator() {
  if ( state == 'AZ' ) {
    generate_discriminator();
  } 
}

function issue_date() {
  if ( document.getElementById("bdate").value.length == 0 ) {
    document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
    document.getElementById("error_third_row").style.display = 'block';
    document.getElementById("bdate").focus();
    setTimeout(delete_error, 3000);
    return;
  } else if ( document.getElementById("idate").value.length == 0 ) {
    document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
    document.getElementById("error_third_row").style.display = 'block';
    document.getElementById("idate").focus();
    setTimeout(delete_error, 3000);
    return;
  } else if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;  
  } else if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( format_type == 'ARG') {
    var bth_year = document.getElementById("bdate").value.substring(6,10);
    var isu_year = document.getElementById("idate").value.substring(6,10);
    var bth_mouth = document.getElementById("bdate").value.substring(3,5);
    var isu_mouth = document.getElementById("idate").value.substring(3,5);
    var bth_day = document.getElementById("bdate").value.substring(0,2);
    var isu_day = document.getElementById("idate").value.substring(0,2);
  } else if ( format_type == 'CAN') {
    var bth_year = document.getElementById("bdate").value.substring(0,4);
    var isu_year = document.getElementById("idate").value.substring(0,4);
    var bth_mouth = document.getElementById("bdate").value.substring(5,7);
    var isu_mouth = document.getElementById("idate").value.substring(5,7);
    var bth_day = document.getElementById("bdate").value.substring(8,10);
    var isu_day = document.getElementById("idate").value.substring(8,10);
  } else if ( format_type == 'USA') {
    var bth_year = document.getElementById("bdate").value.substring(6,10);
    var isu_year = document.getElementById("idate").value.substring(6,10);
    var bth_mouth = document.getElementById("bdate").value.substring(0,2);
    var isu_mouth = document.getElementById("idate").value.substring(0,2);
    var bth_day = document.getElementById("bdate").value.substring(3,5);
    var isu_day = document.getElementById("idate").value.substring(3,5);
  }

  if( document.getElementById("country").value == 'USA' ) { 
  switch(state) {
    case 'AL':
      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = isu_mouth;
      var exp_day = isu_day;
    break;
    case 'AK':

      if (  document.getElementById("revision").value == '11012018' ) {
        var exp_year = parseInt(isu_year) + 8 ;
      } else {
        var exp_year = parseInt(isu_year) + 5;
      }

      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;  
    case 'AZ':
      var az_year_difference = parseInt(isu_year) - parseInt(bth_year);
      if ( az_year_difference >= 65 ) {
        var exp_year = parseInt(isu_year) + 5;
        var exp_moth = bth_mouth;
        var exp_day = bth_day;
      } else {
        var exp_year = parseInt(bth_year) + 65;
        var exp_moth = bth_mouth;
        var exp_day = bth_day;
      }
    break;
    case 'AR':
      var exp_year = parseInt(isu_year) + 8;
      if ( parseInt(bth_mouth) > parseInt(isu_mouth) ) {
        exp_year = exp_year - 1;
      } else if ( parseInt(bth_mouth) == parseInt(isu_mouth) ) {
        if ( parseInt(bth_day) > parseInt(isu_day) ) {
           exp_year = exp_year - 1;
        }   
      } 

      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break;
    case 'CA':
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'CO':      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break;
    case 'CT':

      var exp_year = parseInt(isu_year) + getRandomInt(5, 7);
      if ( parseInt(bth_mouth) > parseInt(isu_mouth) ) {
        exp_year = exp_year - 1;
      } else if ( parseInt(bth_mouth) == parseInt(isu_mouth) ) {
        if ( parseInt(bth_day) > parseInt(isu_day) ) {
           exp_year = exp_year - 1;
        }   
      } 

      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break; 
    case 'DC':      
      var exp_year = parseInt(isu_year) + getRandomInt(6, 8);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break;          
    case 'DE':

      var exp_year = parseInt(isu_year) + 8;
      if ( parseInt(bth_mouth) > parseInt(isu_mouth) ) {
        exp_year = exp_year - 1;
      } else if ( parseInt(bth_mouth) == parseInt(isu_mouth) ) {
        if ( parseInt(bth_day) > parseInt(isu_day) ) {
           exp_year = exp_year - 1;
        }   
      } 

      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break;
    case 'FL':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'GA':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'HI':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'ID':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 62  ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 8;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'IL':

      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    
    break;
    case 'IN':
      
      var exp_year = parseInt(isu_year) + 6;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    
    break;
    case 'IA':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    
    break; 
    case 'KS':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 62 || dif_years < 21  ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 6;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break; 
    case 'KY':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 62 || dif_years < 21  ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 8;
      }
      var exp_moth = toD(parseInt(bth_mouth) + 1, 2);
      var exp_day = bth_day;

    break;
    case 'LA':

      var exp_year = parseInt(isu_year) + parseInt(makestr(1, digits_for_louisiana));
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'ME':
 
      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 65  ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 6;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MD':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MA':
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MI':
      
      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MN':
      
      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MS':

      if (  document.getElementById("revision").value == '09152023' ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 5;
      }

      var exp_moth = bth_mouth;
      var exp_day = bth_day;
    break;
    case 'MO':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 70 || dif_years < 21  ) {
        var exp_year = parseInt(isu_year) + 3;
      } else {
        var exp_year = parseInt(isu_year) + 6;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MT':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 75 ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 8;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break; 
    case 'NE':

      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NV':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NH':

      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NJ':

      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NM':

      if ( parseInt(isu_day) == 1 ) {
        var exp_year = parseInt(isu_year) + 8;
        var exp_moth = parseInt(isu_mouth) - 1;
        if ( exp_moth == 0 ) {
          exp_year = exp_year - 1;
          exp_moth = '12';
          exp_day = '31';
        } else {
          if ( exp_moth == 2 ) {
            var exp_day = '28';
          } else if ( exp_moth == 1 || exp_moth == 3 || exp_moth == 5 || exp_moth == 7 || exp_moth == 8 || exp_moth == 10 || exp_moth == 12 ) {
            var exp_day = '31';
          } else {
            var exp_day = '30';       
          }
        }
      } else {
        var exp_year = parseInt(isu_year) + 8;
        var exp_moth = isu_mouth;
        var exp_day = parseInt(isu_day) - 1;     
      }

    break;     
    case 'NY':

      var exp_year = parseInt(isu_year) + getRandomInt(2, 8);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NC':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'ND':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 78 ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 6;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'OH':

      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'OK':

      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      if ( exp_moth == '02' ) {
        var exp_day = '28';
      } else if ( exp_moth == '01' || exp_moth == '03' || exp_moth == '05' || exp_moth == '07' || exp_moth == '08' || exp_moth == '10' || exp_moth == '12' ) {
        var exp_day = '31';
      } else {
        var exp_day = '30';       
      }
     
    break;
    case 'OR':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'PA':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years >= 65  ) {
        var exp_year = parseInt(isu_year) + 2;
      } else {
        var exp_year = parseInt(isu_year) + 4;
      }

      if ( bth_mouth == '02' ) {
        if( bth_day == '28' ) {
          var exp_moth = '03';
          var exp_day = '01';
        } else {
          var exp_moth = bth_mouth;
          var exp_day = parseInt(bth_day) + 1;
        }
        var exp_day = '28';
      } else if ( bth_mouth == '01'|| bth_mouth == '03' || bth_mouth == '05' || bth_mouth == '07' || bth_mouth == '08' || bth_mouth == '10' || bth_mouth == '12'  ) {
        if( bth_day == '31' ) {
          if ( bth_mouth == '12'  ) {
            exp_year = exp_year + 1;
            var exp_moth = '01';  
          } else {
            var exp_moth = parseInt(bth_mouth) + 1;  
          }          
          var exp_day = '01';  
        } else {
          var exp_moth = bth_mouth;
          var exp_day = parseInt(bth_day) + 1;         
        }
      } else {
        if( bth_day == '30' ) {
          var exp_moth = parseInt(bth_mouth) + 1;  
          var exp_day = '01';   
        } else {
          var exp_moth = bth_mouth;
          var exp_day = parseInt(bth_day) + 1;         
        }
      }
    break;
    case 'PR':

      var exp_year = parseInt(isu_year) + getRandomInt(6, 8);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'RI':

      var dif_years = new Date().getFullYear() - parseInt(bth_year);
      if( dif_years > 73  ) {
        var exp_year = parseInt(isu_year) + 2;
      } else if( dif_years > 71 && dif_years <= 73  ) {
        var exp_year = parseInt(isu_year) + 3;
      } else if( dif_years > 70 && dif_years <= 71  ) {
        var exp_year = parseInt(isu_year) + 4;
      } else {
        var exp_year = parseInt(isu_year) + 5;
      }
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'SC':

      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = isu_mouth;
      var exp_day = isu_day;

    break;
    case 'SD':
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'TN':
      
      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = isu_mouth;
      var exp_day = isu_day;

    break;
    case 'TX':

      if (  document.getElementById("revision").value == '07162021' ) {
        var exp_year = parseInt(isu_year) + getRandomInt(6, 9);
      } else {
        var exp_year = parseInt(isu_year) + 6;
      }

      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'UT':

      if (  document.getElementById("revision").value == '06012021' ) {
        var exp_year = parseInt(isu_year) + 8;
      } else {
        var exp_year = parseInt(isu_year) + 5;
      }

      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'VT':
      
      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'VA':
      
      var exp_year = parseInt(isu_year) + 8;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'WA':
      
      var exp_year = parseInt(isu_year) + getRandomInt(4, 6);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'WV':
      
      var exp_year = parseInt(isu_year) + getRandomInt(3, 5);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'WI':
      
      var exp_year = parseInt(isu_year) + getRandomInt(5, 9);
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'WY':
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;      
  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {
    case 'AB':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'BC':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'MB':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = parseInt(isu_mouth) - getRandomInt(0, 3);
      if (exp_moth <= 0) {
        exp_moth = '01';
      } else {
        var exp_moth = String(exp_moth);
        if (exp_moth.length == 1 ) {
          exp_moth = "0" + exp_moth;
        }
      }

      var exp_day = parseInt(isu_day) - getRandomInt(5, 15);
      if (exp_day <= 0) {
        exp_day = '01';
      } else {
        var exp_day = String(exp_day);
        if (exp_day.length == 1 ) {
          exp_day = "0" + exp_day;
        }        
      }

    break;
    case 'NB':    
      
      var exp_year = parseInt(isu_year) + 4;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NL':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'NS':    

      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'ON':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;     
    case 'PE':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;
    case 'SK':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      if ( exp_moth == '02' ) {
        var exp_day = '28';
      } else if ( exp_moth == '01'|| exp_moth == '03' || exp_moth == '05' || exp_moth == '07' || exp_moth == '08' || exp_moth == '10' || exp_moth == '12'  ) {
        var exp_day = '31';
      } else {
        var exp_day = '30';
      }
      
    break;
    case 'QC':    
      
      var exp_year = parseInt(isu_year) + 5;
      var exp_moth = bth_mouth;
      var exp_day = bth_day;

    break;    
  }
  } else if ( document.getElementById("country").value == 'ARG' ) {

    var exp_year = parseInt(isu_year) + 15;
    var exp_moth = bth_mouth;
    var exp_day = bth_day;

  }

  if (format_type == 'ARG') {
    var exp_data = toD(exp_day, 2) + '.' + toD(exp_moth, 2) + '.' + exp_year;
  } else if ( format_type == 'CAN') {
    var exp_data = exp_year + '-' + toD(exp_moth, 2) + '-' + toD(exp_day, 2);
  } else if ( format_type == 'USA') {
    var exp_data = toD(exp_moth, 2) + '/' + toD(exp_day, 2) + '/' + exp_year;
  } 
  
  document.getElementById("edate").value = exp_data;  
 
}

function generate_doc_number() {
  if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if( document.getElementById("country").value == 'USA' ) { 
  switch(state) {
    case 'AL':
      var doc_num = makestr(8, digits);
    break;
    case 'AK':
      var doc_num = makestr(7, digits);
    break; 
    case 'AZ':
      var doc_num = "D" + makestr(8, digits);
    break;
    case 'AR':
      var doc_num = '9' + makestr(8, digits);
    break;
    case 'CO':
      var doc_num = '17-' + makestr(3, digits) + '-' + makestr(4, digits);
    break;
    case 'CA':
      var doc_num = makestr(1, letters) + makestr(7, digits);
    break;
    case 'CT':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
      } else if ( format_type == 'CAN') {
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
      } else if ( format_type == 'USA') {
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
      }
      var doc_num = bth_mouth + makestr(7, digits);
    break; 
    case 'DC':
      var doc_num = makestr(7, digits);
    break;
    case 'DE':
      var doc_num = "2" + makestr(6, digits);
    break;
    case 'FL':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

      var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(3, digits_six) + '-' + makestr(3, digits_six) + '-' + bth_year + '-' + makestr(1, digits) + bth_day + '-0';  
    break;
    case 'GA':
      var doc_num = '0' + makestr(8, digits);
    break; 
    case 'HI':
      if ( document.getElementById("doc_type").value == languages[active_language]['select_type']  ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_type'];
        document.getElementById("error_first_row").style.display = 'block'; 
        document.getElementById("doc_type").focus();
        setTimeout(delete_error, 3000);
        return;      
      }

      if ( document.getElementById("doc_type").value == 'DL' ) {
        var doc_num_pref = "H00";
      } else {
        var doc_num_pref = "S00";
      }

      var doc_num = doc_num_pref + makestr(6, digits);
    break;  
    case 'ID':
      var doc_num = makestr(2, letters) + makestr(6, digits) + makestr(1, letters);
    break;
    case 'IL':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("doc_type").value == languages[active_language]['select_type']  ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_type'];
        document.getElementById("error_first_row").style.display = 'block'; 
        document.getElementById("doc_type").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 

      if ( document.getElementById("doc_type").value == 'DL' ) {
        var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(3, digits) + '-' + makestr(4, digits) + '-' + makestr(4, digits);
      } else {
        var doc_num = makestr(4, digits) + '-' + makestr(4, digits) + '-' + makestr(3, digits) + document.getElementById("lname").value.substring(0,1).toUpperCase();
      }
    break;
    case 'IN':
      var doc_num = makestr(4, digits) + '-' + makestr(2, digits) + '-' + makestr(4, digits);
    break;
    case 'IA':
      var doc_num = makestr(3, digits) + makestr(2, letters) + makestr(4, digits);
    break;
    case 'KS':
      var doc_num = 'K0' + makestr(1, digits_two) + '-' + makestr(2, digits) + '-' + makestr(4, digits);
    break;
    case 'KY':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
      var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(2, digits) + '-' + makestr(3, digits) + '-' + makestr(3, digits);
    break;
    case 'LA':
      var doc_num = "00" + makestr(7, digits);
    break;    
    case 'ME':
      var doc_num = makestr(7, digits);
    break;
    case 'MD':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      }      
      var doc_num = CalculateDL(document.getElementById("lname").value, document.getElementById("mname").value, document.getElementById("fname").value, "MD");
    break;
    case 'MA':  
      var doc_num = "S" + makestr(8, digits);
    break;
    case 'MI':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      }       
      var doc_num = CalculateDL(document.getElementById("lname").value, document.getElementById("mname").value, document.getElementById("fname").value, "MI");
    break; 
    case 'MN':
      var doc_num = makestr(1, letters) + makestr(3, digits) + '-' + makestr(3, digits) + '-' + makestr(3, digits) + '-' + makestr(3, digits);
    break;
    case 'MS':
      var doc_num = "80" + makestr(7, digits);
    break;
    case 'MO':
      var doc_num = makestr(1, letters) + makestr(9, digits);
    break;
    case 'MT':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }      
      var doc_num = bth_mouth + makestr(3, digits) + bth_year + "41" + bth_day;
    break;
    case 'NE':
      var doc_num = "H1" + makestr(7, digits);
    break;
    case 'NV':
      var doc_num = "1" + makestr(9, digits);
    break;
    case 'NH':
      var doc_num = 'NHL' + makestr(8, digits);
    break;
    case 'NJ':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("eyes").value == languages[active_language]['sel_eyes']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_eyes'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("eyes").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
      }

      if ( document.getElementById("sex").value == 'F' ) {
        var true_b_date = parseInt(bth_mouth) + 50; 
        true_b_date = true_b_date.toString();
      } else {
        var true_b_date = bth_mouth;       
      }
      
      switch( document.getElementById("eyes").value ) {
        case 'BLK':
         var eye_co = '1';
        break;
        case 'BRO':
         var eye_co = '2';
        break;
        case 'BRN':
         var eye_co = '2';
        break;
        case 'GRY':
         var eye_co = '3';
        break;
        case 'BLU':
         var eye_co = '4';
        break;
        case 'HAZ':
         var eye_co = '5';
        break;
        case 'HZL':
         var eye_co = '5';
        break;
        default:
         var eye_co = '6';
        break;         
      } 

      var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(4, digits) + ' ' + makestr(5, digits) + ' ' + true_b_date + bth_year + eye_co;
    break;
    case 'NM':
      var doc_num = '0' + makestr(8, digits);
    break;        
    case 'NY':
      var doc_num = makestr(9, digits);
    break;
    case 'NC':
      var doc_num = '0000' + makestr(8, digits);
    break;
    case 'ND':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }

      var part_of_dl_nd = toW(document.getElementById("lname").value.substring(0,3).toUpperCase(), 3);

      var doc_num = part_of_dl_nd + '-' + bth_year + '-' + makestr(4, digits);
    break;
    case 'OH':
      var doc_num = makestr(2, letters) + makestr(6, digits);
    break;
    case 'OK':
      var doc_num = makestr(1, letters) + "08" + makestr(7, digits);
    break;
    case 'OR':
      var doc_num = makestr(7, digits);
    break;
    case 'PA':
      var doc_num = "3" + makestr(7, digits);
    break;
    case 'PR':
      var doc_num = makestr(7, digits);
    break;
    case 'RI':
      var doc_num = makestr(7, digits);
    break;
    case 'SC':
      var doc_num = '10' + makestr(7, digits);
    break;
    case 'SD':
      var doc_num = '01' + makestr(6, digits);
    break;
    case 'TN':
      var doc_num = '12' + makestr(7, digits);
    break;
    case 'TX':
      var doc_num = '2' + makestr(7, digits);
    break;
    case 'UT':
      var doc_num = '1' + makestr(8, digits);
    break;
    case 'VT':
      var doc_num = makestr(8, digits);
    break;
    case 'VA':
      var doc_num = makestr(1, letters) + makestr(8, digits);
    break;
    case 'WA':
      if ( document.getElementById("doc_type").value == languages[active_language]['select_type']  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_type'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("doc_type").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
      var doc_num = 'W' + document.getElementById("doc_type").value +  makestr(8, all_char) + "B";
    break;
    case 'WV':
      var doc_num = makestr(1, letters) + makestr(6, digits);
    break;
    case 'WI':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);
        return;      
      }

      var doc_num = CalculateDL(document.getElementById("lname").value, document.getElementById("mname").value, document.getElementById("fname").value, "WI");
    break;
    case 'WY':
      var doc_num = makestr(6, digits) + '-' + makestr(3, digits);
    break;         
  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {
    case 'AB':
      var doc_num = makestr(6, digits) + '-' + makestr(3, digits);
    break;
    case 'BC':
      var doc_num =  makestr(7, digits);
    break;
    case 'MB':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      }

      if ( document.getElementById("mname").value.length == 0 ) {
        var midle_name_letter = '*';
      } else {
        var midle_name_letter = document.getElementById("mname").value.substring(0,1).toUpperCase();
      }
      var doc_num = document.getElementById("lname").value.substring(0,2).toUpperCase() + "-" +  document.getElementById("lname").value.substring(2,4).toUpperCase() + "-" + document.getElementById("lname").value.substring(4,5).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + "-" + midle_name_letter + makestr(3, digits) + makestr(2, all_char);
    break;
    case 'NB':
      var doc_num = makestr(7, digits);
    break;
    case 'NL':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }    
      var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + bth_year + bth_mouth + bth_day + makestr(2, digits) + "1";
    break;
    case 'NS':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }    
      var doc_num = toW(document.getElementById("lname").value.toUpperCase(), 5) + bth_day + bth_mouth + bth_year + "00" + makestr(1, digits);
    break;
    case 'ON':
      if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,9) + '-' + document.getElementById("bdate").value.substring(9,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,3) + '-' + document.getElementById("bdate").value.substring(3,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,9) + '-' + document.getElementById("bdate").value.substring(9,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

      if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'A' ) {
        var second_chr = '0';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'B' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'C' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'D' ) {
        var second_chr = '1';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'E' ) {
        var second_chr = '2';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'F' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'G' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'H' ) {
        var second_chr = '3';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'I' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'J' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'K' ) {
        var second_chr = '4';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'L' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'M' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'N' ) {
        var second_chr = '5';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'O' ) {
        var second_chr = '6';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'P' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'Q' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'R' ) {
        var second_chr = '7';
      } else if ( document.getElementById("lname").value.substring(1,2).toUpperCase() == 'S' ||
                  document.getElementById("lname").value.substring(1,2).toUpperCase() == 'T' ) {
        var second_chr = '8';
      } else {
        var second_chr = '9';
      }

      if ( document.getElementById("mname").value.length == 0  ) {
        var mname_in = '0';   
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'A' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'B' ) {
        var mname_in = '1';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'C' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'D' ) {
        var mname_in = '2';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'E' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'F' ) {
        var mname_in = '3';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'G' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'H' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'I' ) {
        var mname_in = '4';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'J' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'K' ) {
        var mname_in = '5';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'L' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'M' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'N' ) {
        var mname_in = '6';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'O' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'P' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Q' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'R' ) {
        var mname_in = '7';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'S' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'T' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'U' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'V' ) {
        var mname_in = '8';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'W' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'X' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Y' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Z' ) {
        var mname_in = '9';
      } 


      var doc_num = document.getElementById("lname").value.substring(0,1).toUpperCase() + second_chr + makestr(3, digits) + "-" + makestr(3, digits) + mname_in + bth_year + bth_mouth + bth_day;
    break;
    case 'PE':
      var doc_num = makestr(6, digits);
    break;
    case 'SK':
      var doc_num = "3" + makestr(7, digits);
    break;
    case 'QC':
       if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_doc_n()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

             if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'A' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'B' ) {
        var fname_in = '1';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'C' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'D' ) {
        var fname_in = '2';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'E' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'F' ) {
        var fname_in = '3';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'G' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'H' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'I' ) {
        var fname_in = '4';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'J' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'K' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'L' ) {
        var fname_in = '5';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'M' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'N' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'O' ) {
        var fname_in = '6';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'P' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'Q' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'R' ) {
        var fname_in = '7';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'S' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'T' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'U' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'V' ) {
        var fname_in = '8';
      } else if ( document.getElementById("fname").value.substring(0,1).toUpperCase() == 'W' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'X' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'Y' ||
                  document.getElementById("fname").value.substring(0,1).toUpperCase() == 'Z' ) {
        var fname_in = '9';
      } 

      if ( document.getElementById("mname").value.length == 0  ) {
        var mname_in = '0';   
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'A' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'B' ) {
        var mname_in = '1';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'C' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'D' ) {
        var mname_in = '2';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'E' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'F' ) {
        var mname_in = '3';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'G' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'H' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'I' ) {
        var mname_in = '4';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'J' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'K' ) {
        var mname_in = '5';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'L' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'M' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'N' ) {
        var mname_in = '6';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'O' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'P' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Q' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'R' ) {
        var mname_in = '7';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'S' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'T' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'U' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'V' ) {
        var mname_in = '8';
      } else if ( document.getElementById("lname").value.substring(0,1).toUpperCase() == 'W' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'X' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Y' ||
                  document.getElementById("lname").value.substring(0,1).toUpperCase() == 'Z' ) {
        var mname_in = '9';
      } 


      var doc_num = amerSoundex(document.getElementById("lname").value.toUpperCase(), true) + fname_in + '-' + bth_day + bth_mouth + bth_year + '-' + mname_in + makestr(1, digits);
    break;     
  }
  } else if ( document.getElementById("country").value == 'ARG' ) {
    var doc_num = makestr(2, digits) + "." + makestr(3, digits) + "." + makestr(3, digits);
  }

  document.getElementById("doc_number").value = doc_num;
  document.getElementById("doc_number").focus();   
}


function document_number_copy(e) {
  if( document.getElementById("doc_number").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("doc_number").focus();
    document.getElementById("doc_number").select();

    navigator.clipboard.writeText(document.getElementById("doc_number").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}

function select_doc_class( doc_class ) {
  document.getElementById("doc_class_txt").value = doc_class;
}

function clear_doc_class_text() {
  if ( document.getElementById("doc_class_txt").value == languages[active_language]['doc_class_option']  ) {
    document.getElementById("doc_class_txt").value = '';
  }
}

function veteran_click() {
  switch(veteran) {
    case 'VETERAN':
      document.getElementById("veteran_b").classList.remove('active_badge');
      veteran = '';        
    break;
    default:
      document.getElementById("veteran_b").classList.add('active_badge');
      veteran = 'VETERAN';     
    break; 
  }
}

function donor_click() {
  switch(donor) {
    case 'DONOR':
      document.getElementById("donor_b").classList.remove('active_badge');
      donor = '';        
    break;
    default:
      document.getElementById("donor_b").classList.add('active_badge');
      donor = 'DONOR';     
    break; 
  }
}

function safe_click() {
  switch(safe) {
    case 'SAFE':
      document.getElementById("safe_b").classList.remove('active_badge');
      safe = '';        
    break;
    default:
      document.getElementById("safe_b").classList.add('active_badge');
      safe = 'SAFE';     
    break; 
  }
}

function select_rest( rest ) {
  document.getElementById("restriction_txt").value = rest;
}

function clear_rest_text() {
  if ( document.getElementById("restriction_txt").value == languages[active_language]['sel_doc_rest']  ) {
    document.getElementById("restriction_txt").value = '';
  }
}

function select_endr( endr ) {
  document.getElementById("endosernent_txt").value = endr;
}

function clear_endr_text() {
  if ( document.getElementById("endosernent_txt").value == languages[active_language]['sel_doc_endr'] ) {
    document.getElementById("endosernent_txt").value = '';
  }
}

function generate_discriminator() {
  if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if( document.getElementById("country").value == 'USA' ) {   
  switch(state) {
    case 'AL':
      var discriminator = 'NONE';
    break;
    case 'AK':
      if ( document.getElementById("revision").value == '11012018' ) {
        if ( document.getElementById("idate").value.length != 10  ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
        return;       
        }

        if ( format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
          var isu_mouth = document.getElementById("idate").value.substring(3,5);
          var isu_day = document.getElementById("idate").value.substring(0,2);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(2,4);
          var isu_mouth = document.getElementById("idate").value.substring(5,7);
          var isu_day = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
          var isu_mouth = document.getElementById("idate").value.substring(0,2);
          var isu_day = document.getElementById("idate").value.substring(3,5);
        }  

        var discriminator = makestr(7, digits)+" "+ makestr(3, digits)+isu_year+isu_mouth+isu_day+"A"+makestr(2, letters)+"-0"
      } else {
        var discriminator = makestr(7, digits);
      }
    break; 
    case 'AZ':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(9,10);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(3,4);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(9,10);
      }
      var discriminator = makestr(4, digits) + makestr(2, letters) + makestr(3, digits) + document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(4, digits) + document.getElementById("fname").value.substring(0,1).toUpperCase() + bth_year;
    break;
    case 'AR':
      var discriminator = makestr(9, digits) + ' ' + makestr(4, digits);
    break;
    case 'CO':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      if ( document.getElementById("revision").value == '02282022' || document.getElementById("revision").value == '10302015' ) {
        var discriminator = makestr(7, digits);
      } else {
        var discriminator = makestr(6, digits);       
      }
    break;
    case 'CA':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      var rand_letter = makestr(1, letters);
      var discriminator = isu_mouth + '/' + isu_day + '/' + isu_year + makestr(3, digits) + makestr(2, letters) + '/' + rand_letter + rand_letter + makestr(2, letters) + '/' + exp_year;
    break;
    case 'CT':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var discriminator = isu_year + isu_mouth + isu_day + makestr(6, digits) + '01MV' + makestr(2, all_char);
    break; 
    case 'DC':
      var discriminator = makestr(8, digits);
    break;
    case 'DE':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      var discriminator = 'L' + isu_year + isu_mouth + isu_day + makestr(6, digits) + 'C';
    break;
    case 'FL':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      var discriminator = makestr(1, letters) + makestr(2, digits) + isu_year + isu_mouth + isu_day + makestr(4, digits);
    break;
    case 'GA':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      if ( document.getElementById("revision").value == '01022019' ) {
        var discriminator = makestr(11, digits) + '00' + makestr(5, digits);
      } else {  
        if ( document.getElementById("inventory").value.length != 16 ) {
          document.getElementById("error_six_row").innerHTML = languages[active_language]['error_inventory'];
          document.getElementById("error_six_row").style.display = 'block';
          document.getElementById("inventory").focus();
          setTimeout(delete_error, 3000);
          return;
        }
        var discriminator = document.getElementById("inventory").value.substring(0,14) + makestr(4, digits);
      }
    break;
    case 'HI':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var discriminator = isu_year + isu_mouth + isu_day + makestr(12, digits) + '-2CO';
    break;
    case 'ID':
      if ( document.getElementById("revision").value == '01312023' ) {
        var discriminator = makestr(15, digits);
      } else {
        if ( document.getElementById("idate").value.length != 10 ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
          return;
        } else if ( format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(2,4);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
        }
        var discriminator = '010' + isu_year + makestr(3, digits) + '01' + makestr(2, digits);         
      }    
    break; 
    case 'IL':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var discriminator = isu_year + isu_mouth + isu_day + makestr(3, digits) + document.getElementById("lname").value.substring(0,1).toUpperCase() + makestr(1, letters) + makestr(4, digits);
    break;
    case 'IN':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("in_issuecode").value.length != 3  ) { 
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("in_issuecode").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var discriminator = isu_mouth + isu_day + isu_year + document.getElementById("in_issuecode").value + '00' + makestr(3, digits);
    break;
    case 'IA':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( format_type == 'ARG') {
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_mouth = document.getElementById("edate").value.substring(3,5);
        var exp_day = document.getElementById("edate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var exp_mouth = document.getElementById("edate").value.substring(5,7);
        var exp_day = document.getElementById("edate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_mouth = document.getElementById("edate").value.substring(0,2);
        var exp_day = document.getElementById("edate").value.substring(3,5);
      }
      if ( document.getElementById("revision").value == '09152016' ) {
        var disc_rand_part = makestr(12, digits);
      } else {  
        var disc_rand_part = makestr(9, digits);
      }
      var discriminator = disc_rand_part + document.getElementById("lname").value.substring(0,1).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + makestr(4, digits) + document.getElementById("sex").value + exp_day + exp_mouth + exp_year + makestr(1, letters);
    break;
    case 'KS': 
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_day = document.getElementById("edate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,3);
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var exp_day = document.getElementById("edate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_day = document.getElementById("edate").value.substring(3,5);
      }

      var ks_top_three = makestr(3, digits);

      var discriminator = bth_year + ks_top_three + makestr(7, digits) + document.getElementById("lname").value.substring(0,1).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + isu_year + ks_top_three + document.getElementById("sex").value + exp_year + exp_day + makestr(2, letters);  
    break;
    case 'KY':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      if ( document.getElementById("revision").value == '08312018' ) {
        var discriminator = isu_year + isu_mouth + isu_day + makestr(8, digits) + ' 01111';
      } else {
        var discriminator = '44' +  makestr(13, digits) + '0';
      }
    break;
    case 'LA':
      var discriminator = 'NONE';
    break;
    case 'ME':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      if ( document.getElementById("revision").value == '01042019' ) {
        var discriminator = '00000000000000000' + makestr(8, digits);
      } else {  
        var discriminator = 'NONE';
      }  
    break;
    case 'MD':
      var discriminator = makestr(5, digits) + makestr(1, letters) + makestr(2, digits) + makestr(1, letters);
    break;    
    case 'MA':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var discriminator = isu_mouth + isu_day + isu_year + ' REV 02222016';
    break; 
    case 'MI':
      var discriminator = '00' + makestr(11, digits);
    break;
    case 'MN':
      var discriminator = '0000000' + makestr(7, digits);
    break;
    case 'MS': 
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
        document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
        document.getElementById("error_seven_row").style.display = 'block';
        document.getElementById("sex").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
        var bth_year_two = document.getElementById("bdate").value.substring(9,10);
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
        var full_isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_day = document.getElementById("edate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,3);
        var bth_year_two = document.getElementById("bdate").value.substring(3,4);
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
        var full_isu_year = document.getElementById("idate").value.substring(0,4);
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var exp_day = document.getElementById("edate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
        var bth_year_two = document.getElementById("bdate").value.substring(9,10);
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
        var full_isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_day = document.getElementById("edate").value.substring(3,5);
      }

      let issue_date_compare_ms = new Date(parseInt(full_isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      let prev_is_year_ms =  parseInt(full_isu_year) - 1;
      let compare_date_ms = new Date(prev_is_year_ms + '-12-31');
      let diffTime_ms = Math.abs(issue_date_compare_ms - compare_date_ms);
      let diffDays_ms = toD(Math.ceil(diffTime_ms / (1000 * 60 * 60 * 24)), 3); 

      var discriminator = bth_year + makestr(8, all_char) + bth_year_two + document.getElementById("lname").value.substring(0,1).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + isu_year + diffDays_ms + document.getElementById("sex").value + exp_year + exp_day + makestr(1, letters);  
    break;
    case 'MO':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var discriminator = document.getElementById("idate").value.substring(8,10) + makestr(6, digits) + '00' + makestr(2, digits);
    break;
    case 'MT':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var discriminator = isu_year + isu_mouth + isu_day + "10" + makestr(4, digits) + "70" + makestr(4, digits);
    break;
    case 'NE':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

      let birthday_date_compare_ne = new Date(parseInt(bth_year) ,  parseInt(bth_mouth) - 1, parseInt(bth_day));
      let prev_birth_year_ne =  parseInt(bth_year) - 1;
      let compare_date_ne = new Date(prev_birth_year_ne + '-12-31');
      let diffTime_ne = Math.abs(birthday_date_compare_ne - compare_date_ne);
      let diffDays_ne = toD(Math.ceil(diffTime_ne / (1000 * 60 * 60 * 24)), 3); 
      var discriminator = '0540000' + diffDays_ne + '100000';

      document.getElementById("inventory").value = discriminator;
    break;
    case 'NV':
      var discriminator = '0001' + makestr(17, digits);
    break;
    case 'NH':
      var discriminator = '0' + makestr(7, digits);

      document.getElementById("inventory").value = discriminator;
    break;   
    case 'NJ':
      if ( document.getElementById("nj_option1").value.length == 0 ) { 
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_option1'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nj_option1").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }

      let issue_date_compare_nj = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      let prev_is_year_nj =  parseInt(isu_year) - 1;
      let compare_date_nj = new Date(prev_is_year_nj + '-12-31');
      let diffTime_nj = Math.abs(issue_date_compare_nj - compare_date_nj);
      let diffDays_nj = toD(Math.ceil(diffTime_nj / (1000 * 60 * 60 * 24)), 3); 

      var discriminator = document.getElementById("nj_option1").value + isu_year + diffDays_nj + '0000' + makestr(4, digits);
    break;
    case 'NM':
      var discriminator = 'unavl';
    break;           
    case 'NY':
      var discriminator = makestr(2, letters) + makestr(1, digits) + makestr(5, letters) + makestr(2, digits);
    break;
    case 'NC':
      var discriminator = '002' + makestr(7, digits);
    break;
    case 'ND':
      if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("doc_number").value.length == 0  ) { 
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      }  else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,3);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,9);
      }   

      var discriminator = bth_year + document.getElementById("doc_number").value.replaceAll('-', '') + document.getElementById("lname").value.substring(0,1).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + makestr(5, digits) + makestr(1, letters).toLowerCase() + makestr(1, letters) + makestr(2, digits) + 'NDZ';
    break;
    case 'OH':
      var discriminator = makestr(1, letters) + makestr(8, digits);
    break;
    case 'OK':
      if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
        document.getElementById("error_first_row").style.display = 'block';
        document.getElementById("revision").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      if ( document.getElementById("revision").value == '01132020' ) {
        if ( document.getElementById("bdate").value.length != 10 ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
          document.getElementById("bdate").focus();
          setTimeout(delete_error, 3000);
          return;
        } else if ( document.getElementById("doc_number").value.length == 0  ) {
          document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
          document.getElementById("error_four_row").style.display = 'block';
          document.getElementById("doc_number").focus();
          setTimeout(delete_error, 3000);
          return;      
        } else if ( document.getElementById("idate").value.length != 10 ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
          return;
        } else if (format_type == 'ARG') {
          var bth_year = document.getElementById("bdate").value.substring(8,10);
          var isu_year = document.getElementById("idate").value.substring(8,10);
          var bth_mouth = document.getElementById("bdate").value.substring(3,5);
          var isu_mouth = document.getElementById("idate").value.substring(3,5);
          var bth_day = document.getElementById("bdate").value.substring(0,2);
          var isu_day = document.getElementById("idate").value.substring(0,2);
        } else if ( format_type == 'CAN') {
          var bth_year = document.getElementById("bdate").value.substring(2,4);
          var isu_year = document.getElementById("idate").value.substring(2,4);
          var bth_mouth = document.getElementById("bdate").value.substring(5,7);
          var isu_mouth = document.getElementById("idate").value.substring(5,7);
          var bth_day = document.getElementById("bdate").value.substring(8,10);
          var isu_day = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'USA') {
          var bth_year = document.getElementById("bdate").value.substring(8,10);
          var isu_year = document.getElementById("idate").value.substring(8,10);
          var bth_mouth = document.getElementById("bdate").value.substring(0,2);
          var isu_mouth = document.getElementById("idate").value.substring(0,2);
          var bth_day = document.getElementById("bdate").value.substring(3,5);
          var isu_day = document.getElementById("idate").value.substring(3,5);
        }

        var discriminator = document.getElementById("doc_number").value + bth_mouth + bth_day + bth_year + isu_mouth + isu_day + isu_year + "R"; 
      } else {  
        var discriminator = 'NONE';
      }  
    break;
    case 'OR':
      var discriminator =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'PA':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_year_two = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }  

      let issue_date_compare_pa = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      let prev_is_year_pa =  parseInt(isu_year) - 1;
      let compare_date_pa = new Date(prev_is_year_pa + '-12-31');
      let diffTime_pa = Math.abs(issue_date_compare_pa - compare_date_pa);
      let diffDays_pa = toD(Math.ceil(diffTime_pa / (1000 * 60 * 60 * 24)), 3); 

      var discriminator = isu_year_two + diffDays_pa + "01" + makestr(8, digits) + '00000' + makestr(5, digits);
    break;
    case 'PR':
      var discriminator = makestr(1, digits);
    break;
    case 'RI':
      var discriminator = makestr(7, digits);
    break;
    case 'SC': 
      if ( document.getElementById("edate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_mouth = document.getElementById("edate").value.substring(3,5);
      } else if ( format_type == 'CAN') {
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var exp_mouth = document.getElementById("edate").value.substring(5,7);
      } else if ( format_type == 'USA') {
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var exp_mouth = document.getElementById("edate").value.substring(0,2);
      }       
      var discriminator = '4' + makestr(1, digits) + "00" + makestr(5, digits) + "22" + makestr(8, digits); 
    break;
    case 'SD':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var discriminator = document.getElementById("doc_number").value + isu_year + isu_mouth + isu_day + makestr(6, digits) + '0';
    break;
    case 'TN':
      if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var discriminator = '991' + isu_year + isu_mouth + isu_day + "1" + makestr(5, digits) + "7";            
    break;
    case 'TX':
      var discriminator = '2' + makestr(19, digits);
    break;
    case 'UT':
      var discriminator = getRandomInt(5, 6) + makestr(7, digits);
    break;
    case 'VT':
       if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      var discriminator = isu_mouth + isu_day + isu_year + makestr(4, digits) + document.getElementById("doc_number").value;
    break;
    case 'VA':
      var discriminator = "08" + makestr(7, digits);
    break;  l
    case 'WA': 
      if ( document.getElementById("doc_number").value.length == 0 ) { 
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( audit.length == 0 ) { 
        document.getElementById("error_six_row").innerHTML = languages[active_language]['error_audit'];
        document.getElementById("error_six_row").style.display = 'block';
        document.getElementById("audit").focus();
        setTimeout(delete_error, 3000);
        return;     
      }  
      var discriminator = document.getElementById("doc_number").value + audit;
    break;
    case 'WV':
      if ( document.getElementById("edate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").setAttribute('onchange', 'birthday_date_discriminator()');
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("fname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("fname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var exp_day = document.getElementById("edate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(2,4);
        var exp_year = document.getElementById("edate").value.substring(2,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var exp_day = document.getElementById("edate").value.substring(8,10);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(8,10);
        var exp_year = document.getElementById("edate").value.substring(8,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var exp_day = document.getElementById("edate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }    

      var discriminator = bth_mouth + bth_day + bth_year + document.getElementById("lname").value.substring(0,1).toUpperCase() + document.getElementById("fname").value.substring(0,1).toUpperCase() + exp_year + exp_day;
    break;
    case 'WI':
       if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("lname").value.length == 0  ) {
        document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
        document.getElementById("error_second_row").style.display = 'block';
        document.getElementById("lname").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }

      var discriminator = "OT" + makestr(3, letters) + isu_year + isu_mouth + isu_day + makestr(8, digits);            
    break;
    case 'WY':
      var discriminator = "10000" + makestr(5, digits);            
    break;                 
  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {
    case 'AB':
      var discriminator = "0" + makestr(3, digits) + "-" +  makestr(5, digits);    
    break;
    case 'BC':
      var discriminator = "NONE";     
    break;
    case 'MB':
      var discriminator = makestr(9, digits);     
    break;  
    case 'NB':
       if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      var discriminator = "NB" + isu_year + isu_mouth + isu_day + makestr(4, digits) + bth_year + bth_mouth + bth_day;          
    break;
    case 'NL':
      var discriminator = "NL152" + makestr(10, digits);            
    break;
    case 'NS':
       if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }            
      var discriminator = "NS" + isu_year + isu_mouth + isu_day + makestr(4, digits) + bth_year + bth_mouth + bth_day;          
    break;
    case 'ON':
      var discriminator = makestr(2, letters) + makestr(7, digits);            
    break;
    case 'PE':
       if ( document.getElementById("idate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if ( document.getElementById("bdate").value.length != 10 ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;
      } else if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }           
      var discriminator = "PE" + isu_year + isu_mouth + isu_day + makestr(4, digits) + bth_year + bth_mouth + bth_day;
    break;
    case 'SK':
      var discriminator = "03" + makestr(8, digits);            
    break;
    case 'QC':
      var discriminator = "QC" + makestr(7, all_char);            
    break;                   
  }
  } else if( document.getElementById("country").value == 'ARG' ) {   
    var discriminator = makestr(4, digits);   
  }

  document.getElementById("sex").removeAttribute('onchange');
  document.getElementById("bdate").removeAttribute('onchange'); 
  document.getElementById("discriminator").value = discriminator;
  document.getElementById("discriminator").focus(); 
}


function discriminator_number_copy(e) {
  if( document.getElementById("discriminator").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = window.innerHeight  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("discriminator").focus();
    document.getElementById("discriminator").select();

    navigator.clipboard.writeText(document.getElementById("discriminator").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_inventory() {
  if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if( document.getElementById("country").value == 'USA' ) { 
  switch(state) {
    case 'AL':
      inventory = '0000000000' + makestr(8, digits) + '01';
    break;
    case 'AK':
      if ( document.getElementById("revision").value == '11012018' ) {
        inventory = '1000' + makestr(6, digits);
      } else {
        inventory = '';
      }
    break; 
    case 'AZ':
      if ( document.getElementById("revision").value == '02282023' ) {
        inventory = '48' + makestr(9, digits);
      } else {
        if ( document.getElementById("idate").value.length != 10  ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
          return;       
        } else if (format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(2,4);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(8,10);
        }
        inventory = isu_year + makestr(3, digits) + 'AZ00' + makestr(8, digits) + '301'; 
      }      
    break;
    case 'AR':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else {
        if (format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(3,5);
          var isu_day = document.getElementById("idate").value.substring(0,2);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(0,4);
          var isu_mouth = document.getElementById("idate").value.substring(5,7);
          var isu_day = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(0,2);
          var isu_day = document.getElementById("idate").value.substring(3,5);
        }
        let issue_date_compare = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
        let compare_date = new Date('2018-03-01');
        if ( issue_date_compare >= compare_date ) {
          inventory = '02101' + makestr(11, digits); 
        } else {
          inventory = '11141' + makestr(5, digits);  
        }
      }      
    break;
    case 'CO':
      inventory = 'C000' + makestr(7, digits);  
    break;
    case 'CA':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_year_two = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }

      let issue_date_compare = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      let prev_is_year =  parseInt(isu_year) - 1;
      let compare_date = new Date(prev_is_year + '-12-31');
      let diffTime = Math.abs(issue_date_compare - compare_date);
      let diffDays = toD(Math.ceil(diffTime / (1000 * 60 * 60 * 24)), 3); 
      inventory = isu_year_two + diffDays + document.getElementById("doc_number").value;
      if ( document.getElementById("revision").value == '08292017' ) {
        inventory += '0401';
      } else {
        inventory += '0901';
      }
    break;
    case 'CT':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
      inventory = document.getElementById("doc_number").value + 'CT' + makestr(4, all_char) + '01';
    break; 
    case 'DC':
      inventory = '000' + makestr(7, digits);
    break;
    case 'DE':
      inventory = '01103' +  makestr(11, digits);
    break;
    case 'FL':
      inventory = '011000' +  makestr(10, digits);
    break; 
    case 'GA':
      if ( document.getElementById("revision").value == '01022019' ) {
        inventory = '1000' +  makestr(7, digits);
      } else {
        inventory = makestr(10, digits) + '100401';
      }
    break;
    case 'HI':
      inventory = makestr(8, digits);
    break; 
    case 'ID':
      if ( document.getElementById("revision").value == '01312023' ) {
        if ( document.getElementById("doc_number").value.length == 0 ) {
          document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
          document.getElementById("error_four_row").style.display = 'block';
          document.getElementById("doc_number").focus();
          setTimeout(delete_error, 3000);
          return;   
        }
        inventory = document.getElementById("doc_number").value +  makestr(6, digits) + '001';
      } else {
        if ( document.getElementById("idate").value.length != 10  ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
          return;       
        } else if (format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(3,5);
          var isu_day = document.getElementById("idate").value.substring(0,2);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(0,4);
          var isu_mouth = document.getElementById("idate").value.substring(5,7);
          var isu_day = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(0,2);
          var isu_day = document.getElementById("idate").value.substring(3,5);
        }     
        inventory = '0002' +  makestr(6, digits);
      }
    break; 
    case 'IL':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } 

      inventory = document.getElementById("doc_number").value.replaceAll('-', '') +  'IL' + makestr(1, letters) + makestr(1, digits) + makestr(2, letters) + '01';   
      
    break;
    case 'IN':
      inventory = '03701' + makestr(11, digits);
    break;
    case 'IA':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      }
      inventory = document.getElementById("doc_number").value + isu_year + makestr(3, digits) + '0101';      
    break;
    case 'KS':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("discriminator").value.length == 0  ) {
        document.getElementById("error_six_row").innerHTML = languages[active_language]['error_disc'];
        document.getElementById("error_six_row").style.display = 'block';
        document.getElementById("discriminator").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      }

      inventory = isu_year + document.getElementById("discriminator").value.substring(1,4) + document.getElementById("doc_number").value.replaceAll('-', '') + "0101";
    break;
    case 'KY':
      inventory = '0460' + makestr(12, digits);
    break;
    case 'LA':
      inventory = '00700' + makestr(11, digits);
    break;
    case 'ME':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      }

      inventory = 'F' + isu_year + makestr(3, digits) + document.getElementById("doc_number").value  + "0101";      
    break;
    case 'MD':
      inventory = '100' + makestr(7, digits);
    break; 
    case 'MA':
       if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      }
           
      inventory = isu_year + makestr(3, digits) + document.getElementById("doc_number").value + "0601";
    break;
    case 'MI':
       if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(6,10);
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var exp_mouth = document.getElementById("edate").value.substring(3,5);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var exp_year = document.getElementById("edate").value.substring(0,4);
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var exp_mouth = document.getElementById("edate").value.substring(5,7);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var exp_year = document.getElementById("edate").value.substring(6,10);
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var exp_mouth = document.getElementById("edate").value.substring(0,2);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

      if ( document.getElementById("revision").value == '01022024' ||
           document.getElementById("revision").value == '07012012' ) {
        inventory = document.getElementById("doc_number").value.replaceAll(' ', '') + bth_year + bth_mouth + bth_day + exp_year.substring(2,4) + bth_mouth + "01";
      } else {
        inventory = document.getElementById("doc_number").value.replaceAll(' ', '') + bth_year + bth_mouth + bth_day + exp_year;
      }
    break; 
    case 'MN':
       if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var issue_date_compare_mn = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      var minus_one_year = parseInt(isu_year) - 1;
      var compare_date_mn = new Date(minus_one_year + '-12-31'); 
      var daydiffernces = dateDiffInDays(compare_date_mn, issue_date_compare_mn);

      inventory = document.getElementById("doc_number").value.replaceAll('-', '') + '01' + toD(daydiffernces,3) + '01';
    break;
    case 'MS':
      inventory = '0510' + makestr(12, digits);
    break;
    case 'MO':
       if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      } else if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_year_two = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      var issue_date_compare_mn = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      var compare_date_mn = new Date(document.getElementById("idate").value.substring(6,10) + '-01-01'); 
      var daydiffernces = dateDiffInDays(compare_date_mn, issue_date_compare_mn);

      inventory = isu_year_two + toD(daydiffernces,3) + document.getElementById("doc_number").value + '0101';
    break;  
    case 'MT':
      inventory = '110' + makestr(9, all_char) + 'MT' + makestr(3, letters) + '001';
    break;
    case 'NE':
      if ( document.getElementById("discriminator").value.length == 0  ) { 
        document.getElementById("error_six_row").innerHTML = languages[active_language]['error_disc'];
        document.getElementById("error_six_row").style.display = 'block';
        document.getElementById("discriminator").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 

      inventory = document.getElementById("discriminator").value;
      
    break;
    case 'NV':
      if ( document.getElementById("revision").value == '05242021' ) {
        inventory = '002' + makestr(8, digits) + '01';
      } else {
        inventory = '001' + makestr(8, digits) + '01';
      }
    break; 
    case 'NH':
      if ( document.getElementById("discriminator").value.length == 0  ) {
        document.getElementById("error_six_row").innerHTML = languages[active_language]['error_disc'];
        document.getElementById("error_six_row").style.display = 'block';
        document.getElementById("discriminator").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 

      inventory = document.getElementById("discriminator").value;
      
    break; 
    case 'NJ':
      if ( document.getElementById("revision").value == '01082020' ) {
        inventory = makestr(10, all_char) + "NJ" + makestr(4, all_char) + '01';
      } else {
        inventory = '036' + makestr(13, digits);  
      }    
    break;
    case 'NM':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } 

      inventory = document.getElementById("doc_number").value + '01'; 
    break;                    
    case 'NY':
      inventory = '0121' + makestr(12, digits);
    break;
    case 'NC':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      }      
      inventory = document.getElementById("doc_number").value + 'NC' + makestr(4, all_char) + '01'; 
    break;
    case 'ND':
      inventory = '03400' + makestr(11, digits);
    break;
    case 'OH':
      inventory = '';
    break;
    case 'OK':
      if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      inventory = document.getElementById("doc_number").value + 'OK' + makestr(2, letters) + 'SL01'; 
    break;
    case 'OR':
      if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if ( document.getElementById("bdate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } 

      if (format_type == 'ARG') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(3,5);
        var bth_day = document.getElementById("bdate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var bth_year = document.getElementById("bdate").value.substring(0,4);
        var bth_mouth = document.getElementById("bdate").value.substring(5,7);
        var bth_day = document.getElementById("bdate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var bth_year = document.getElementById("bdate").value.substring(6,10);
        var bth_mouth = document.getElementById("bdate").value.substring(0,2);
        var bth_day = document.getElementById("bdate").value.substring(3,5);
      }

      inventory = document.getElementById("doc_number").value + bth_mouth + bth_day + bth_year; 
    break;
    case 'PA':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
      }     
      inventory = '02500' + makestr(6, digits) + isu_year + makestr(3, digits);
    break;
    case 'PR':
      inventory = '000000000' + makestr(7, digits);
    break; 
    case 'RI':
      if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      inventory = 'O' + document.getElementById("doc_number").value + 'RI' + makestr(2, letters) + 'TL01'; 
    break;
    case 'SC':
      inventory = '101' + makestr(5, digits) + '000' + makestr(5, digits);
    break;
    case 'SD':
      inventory = '042000' + makestr(10, digits);
    break;
    case 'TN':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
         var isu_year_two = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_year_two = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }
      let issue_date_compare_tn = new Date(parseInt(isu_year) ,  parseInt(isu_mouth) - 1, parseInt(isu_day));
      let prev_is_year_tn =  parseInt(isu_year) - 1;
      let compare_date_tn = new Date(prev_is_year_tn + '-12-31');
      let diffTime_tn = Math.abs(issue_date_compare_tn - compare_date_tn);
      let diffDays_tn = toD(Math.ceil(diffTime_tn / (1000 * 60 * 60 * 24)), 3); 
      inventory = isu_year_two + diffDays_tn + "0" + makestr(8, digits) + '0101';
    break;
    case 'TX':
      if ( document.getElementById("revision").value == '02232020' || document.getElementById("revision").value == '07162021' ) {
        inventory = '1000' +  makestr(7, digits);
      } else {
        if ( document.getElementById("doc_number").value.length == 0  ) {
          document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
          document.getElementById("error_four_row").style.display = 'block';
          document.getElementById("doc_number").focus();
          setTimeout(delete_error, 3000);
          return;      
        } else if ( document.getElementById("idate").value.length != 10  ) {
          document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
          document.getElementById("error_third_row").style.display = 'block';
          document.getElementById("idate").focus();
          setTimeout(delete_error, 3000);
          return;       
        }

        if (format_type == 'ARG') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(3,5);
          var isu_day = document.getElementById("idate").value.substring(0,2);
        } else if ( format_type == 'CAN') {
          var isu_year = document.getElementById("idate").value.substring(0,4);
          var isu_mouth = document.getElementById("idate").value.substring(5,7);
          var isu_day = document.getElementById("idate").value.substring(8,10);
        } else if ( format_type == 'USA') {
          var isu_year = document.getElementById("idate").value.substring(6,10);
          var isu_mouth = document.getElementById("idate").value.substring(0,2);
          var isu_day = document.getElementById("idate").value.substring(3,5);
        }

        inventory = document.getElementById("doc_number").value + '  ' + isu_year

        if ( isu_mouth == '02' ) {
          if( isu_day == '28' ) {
            inventory += '0301';
          } else {
            inventory += '02' + toD( ( parseInt(isu_day) + 1 ), 2 );
          }
        } else if ( isu_mouth == '01'|| isu_mouth == '03' || isu_mouth == '05' || isu_mouth == '07' || isu_mouth == '08' || isu_mouth == '10' || isu_mouth == '12'  ) {
          if( isu_day == '31' ) {
            if ( isu_mouth == '12' ) {
              inventory = document.getElementById("doc_number").value + '  ' + ( parseInt(isu_year) + 1 ).toString + '0101';
            } else {
              inventory += toD( ( parseInt(isu_mouth) + 1 ), 2 ) + '01';
            } 
          } else {
            inventory += isu_mouth + toD( ( parseInt(isu_day) + 1 ), 2 );
          }
        } else {
          if( isu_day == '30' ) {
            inventory += toD( ( parseInt(isu_mouth) + 1 ), 2 ) + '01';
          } else {
            inventory += isu_mouth + toD( ( parseInt(isu_day) + 1 ), 2 );       
          }
        }
      }
    break;
    case 'UT':
      if ( document.getElementById("doc_number").value.length == 0  ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 
      inventory = document.getElementById("doc_number").value + 'UT' + makestr(4, all_char) + '01'; 
    break;
    case 'VT':
      inventory = '00' + makestr(15, digits);
    break;
    case 'VA':
      if ( document.getElementById("doc_type").value == languages[active_language]['select_type']  ) {
        document.getElementById("error_first_row").innerHTML = languages[active_language]['error_type'];
        document.getElementById("error_first_row").style.display = 'block'; 
        document.getElementById("doc_type").focus();
        setTimeout(delete_error, 3000);
        return;      
      } 

      if ( document.getElementById("doc_type").value == 'DL' ) {
        inventory = '00601'
      } else {
        inventory = '00605'
      }
      inventory += "0" + makestr(10, digits);
    break; 
    case 'WA':
      inventory = makestr(16, digits);
    break;
    case 'WV':
      if ( document.getElementById("doc_number").value.length == 0 ) {
        document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
        document.getElementById("error_four_row").style.display = 'block';
        document.getElementById("doc_number").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
      inventory = document.getElementById("doc_number").value + 'WV' + makestr(4, all_char) + '01';
    break; 
    case 'WI':
      if ( document.getElementById("revision").value == '06012023' ) {
        inventory = '1' +  makestr(18, digits);
      } else {
        inventory = '0130100' + makestr(9, digits);
      }
    break;
    case 'WY':
      inventory = '00000' +  makestr(4, digits); 
    break;        
  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {
    case 'AB':
      inventory = '0022' + makestr(2, digits) + "000" + makestr(8, digits);
    break;
    case 'BC':
      inventory = makestr(1, letters) + "0" + makestr(7, digits);
    break;
    case 'MB':
      inventory = '4' + makestr(8, digits);
    break;
    case 'NB':
      inventory = '00000000' + makestr(8, digits);
    break;
    case 'NL':
      inventory = '00000000' + makestr(8, digits);
    break; 
    case 'NS':
      inventory = '00000000' + makestr(8, digits);
    break;
    case 'ON':
      inventory = '*' + makestr(7, digits) + '*';
    break;
    case 'PE':
      inventory = '00000000' + makestr(8, digits);
    break;
    case 'SK':
      inventory = 'F' + makestr(8, digits);
    break;
    case 'QC':
      inventory = '';
    break;              
  }
  } else if( document.getElementById("country").value == 'ARG' ) { 
    inventory = '000000' + makestr(5, digits);
  }

  if( document.getElementById("inventory_selector") != null ) {
     document.getElementById("inventory").value = inventory;
     document.getElementById("inventory").focus(); 
  }

}


function inventory_number_copy(e) {
  if( document.getElementById("inventory").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = window.innerHeight  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("inventory").focus();
    document.getElementById("inventory").select();

    navigator.clipboard.writeText(document.getElementById("inventory").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_audit() {
  if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("country").value == 'USA' ) {
  switch(state) {
    case 'AL': 
      audit = '';
    break;
    case 'AK':
      audit = '';
    break; 
    case 'AZ':
      audit =  ''; 
    break;
    case 'AR':
      audit =  '';     
    break;
    case 'CO':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }    
      var plus_one_day = parseInt(isu_day) + 1;
      var end_inv_date = isu_mouth + toD(plus_one_day,2) + isu_year;
      audit = 'CODL_0_' + end_inv_date + '_' + makestr(5, digits);
    break;
    case 'CA':
      audit =  '';
    break;
    case 'CT':
      audit =  '';
    break; 
    case 'DC':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      audit = isu_year + isu_mouth + isu_day + '_0' + makestr(5, digits) + '_' + makestr(1, digits) + '_' + makestr(3, digits);
    break;
    case 'DE':
      audit = '';  
    break;
    case 'FL':
      audit = '';
    break; 
    case 'GA':
      audit =  '';     
    break;
    case 'HI':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(0,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(6,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }     
      audit = isu_year + isu_mouth + isu_day + '_053001_2_93' + makestr(1, digits);
    break;
    case 'ID':
      audit =  '';     
    break;
    case 'IL':
      audit =  '';     
    break;
    case 'IN':
      audit =  '';     
    break;      
    case 'IA':
      audit =  '';     
    break;
    case 'KS':
      audit = '';
    break;
    case 'KY':
      audit = '';
    break;  
    case 'LA':
      audit = makestr(4, digits);
    break;
    case 'ME':
      audit = '';
    break;
    case 'MD':
      audit = '';
    break;
    case 'MA':
      audit = '';
    break;
    case 'MI':
      audit = '';
    break;
    case 'MN':
      audit = '';
    break;
    case 'MS':
      audit = '';
    break;
    case 'MO':
      audit = '';
    break;
    case 'MT':
      audit = '';
    break;
    case 'NE':
      audit = '';
    break;
    case 'NV':
      audit = '';
    break;
    case 'NH':
      audit = '';
    break;
    case 'NJ':
      audit = '';
    break;
    case 'NM':
      audit = '';
    break;         
    case 'NY':
      audit = '';
    break;
    case 'NC':
      audit = '';
    break;
    case 'ND':
      audit = '';
    break;
    case 'OH':
      audit = '';
    break;
    case 'OK':
      audit = '';
    break;
    case 'OR':
      audit = '';
    break;
    case 'PA':
      audit = '';
    break;
    case 'PR':
      audit = '';
    break;
    case 'RI':
      audit = '';
    break;
    case 'SC':
      audit = '';
    break;
    case 'SD':
      audit = '';
    break;
    case 'TN':
      audit = '';
    break;
    case 'TX':
      audit = '';
    break;
    case 'UT':
      audit = '';
    break;
    case 'VT':
      audit = '';
    break;
    case 'VA':
      audit = '';
    break;
    case 'WA':
      if ( document.getElementById("idate").value.length != 10  ) {
        document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
        document.getElementById("error_third_row").style.display = 'block';
        document.getElementById("idate").focus();
        setTimeout(delete_error, 3000);
        return;       
      } else if (format_type == 'ARG') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(3,5);
        var isu_day = document.getElementById("idate").value.substring(0,2);
      } else if ( format_type == 'CAN') {
        var isu_year = document.getElementById("idate").value.substring(2,4);
        var isu_mouth = document.getElementById("idate").value.substring(5,7);
        var isu_day = document.getElementById("idate").value.substring(8,10);
      } else if ( format_type == 'USA') {
        var isu_year = document.getElementById("idate").value.substring(8,10);
        var isu_mouth = document.getElementById("idate").value.substring(0,2);
        var isu_day = document.getElementById("idate").value.substring(3,5);
      }      
      audit = makestr(1, letters) + isu_mouth + isu_day + isu_year + makestr(6, digits);
    break; 
    case 'WV':
      audit = '';
    break;
    case 'WI':
      audit = '';
    break;
    case 'WY': 
      audit = 'WY' + makestr(20, digits);
    break;

  }
  } else if ( document.getElementById("country").value == 'CAN' ) {
  switch(state) {
    case 'AB':
      audit = '';
    break;
    case 'BC':
      audit = '';
    break;
    case 'MB':
      audit = '';
    break;
    case 'NB':
      audit = '';
    break;
    case 'NL':
      audit = '';
    break;
    case 'NS':
      audit = '';
    break;
    case 'ON':
      audit = '';
    break;
    case 'PE':
      audit = '';
    break;
    case 'QC':
      audit = '';
    break;      
  }
  }

  if( document.getElementById("audit_selector") != null ) {
    document.getElementById("audit").value = audit;
    document.getElementById("audit").focus(); 
  }


}


function audit_number_copy(e) {
  if( document.getElementById("audit").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = window.innerHeight  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("audit").focus();
    document.getElementById("audit").select();

    navigator.clipboard.writeText(document.getElementById("audit").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function retry_again(tries, final_line) {
  if( tries > 3 ) {
    alert(languages[active_language]['tries']);

  } else {
    console.log('New try');
    var send_http = new XMLHttpRequest();
    var params = 'user_form='+user_form+'&params='+final_line;

        send_http.open('POST', generate_link, true);
        send_http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        send_http.onreadystatechange = function() {
        if(send_http.readyState == 4 && send_http.status == 200) {
          var result_data = JSON.parse(send_http.responseText);
          switch (result_data.type) {
            case 1:
              if( result_data.status == 0 ) {
                var http_for_minus_generations = new XMLHttpRequest();
                var params_for_minus_generations = 'user_form='+user_form;

                    http_for_minus_generations.open('POST', 'https://pdf417mrz.xyz/minus_generation', true);
                    http_for_minus_generations.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                    http_for_minus_generations.onreadystatechange = function() { 
                      if(http_for_minus_generations.readyState == 4 && http_for_minus_generations.status == 200) {
                        document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
                      }
                    };
                    http_for_minus_generations.send(params_for_minus_generations);  
              } else {
                document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
              }       
            break;
            default:
              document.getElementById("final_button").innerHTML = result_data.type + ' - ' +languages[active_language]['error']; 
            break;
          }

        } else if (send_http.readyState == 4 && send_http.status == 500) {
          var new_try = tries + 1;
          setTimeout(retry_again(new_try, final_line), 5000);

        }
        };

        send_http.send(params);  
  }

}

function reset_form() {
  
  document.getElementById("true_good_form").reset();
  document.getElementById("inv_html").innerHTML = '';
  document.getElementById("aud_html").innerHTML = '';
  document.getElementById("adds_row").innerHTML = '';
  if ( document.getElementById("final_button").disabled ) {
    document.getElementById("final_button").classList.add('generate_button');
    document.getElementById("final_button").classList.remove('stopped_button');
    document.getElementById("final_button").disabled = false;
    document.getElementById("final_button").innerHTML = languages[active_language]['generate']; 
  }
  document.getElementById("lang").value = active_language;

}

function generate(generation_type) {
  if ( document.getElementById("country").value == languages[active_language]['select_country']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);
    return;  
  }

  if ( document.getElementById("state").value == languages[active_language]['select_state']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_state'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("state").focus();
    setTimeout(delete_error, 3000);
    return;      
  } 

  if ( document.getElementById("doc_type").value == languages[active_language]['select_type']  ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_type'];
    document.getElementById("error_first_row").style.display = 'block'; 
    document.getElementById("doc_type").focus();
    setTimeout(delete_error, 3000);
    return;      
  } 

  if ( document.getElementById("revision").value == languages[active_language]['sel_revision'] ) {
    document.getElementById("error_first_row").innerHTML = languages[active_language]['error_revision'];
    document.getElementById("error_first_row").style.display = 'block';
    document.getElementById("revision").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("lname").value.length == 0  ) {
    document.getElementById("error_second_row").innerHTML = languages[active_language]['error_lastname'];
    document.getElementById("error_second_row").style.display = 'block';
    document.getElementById("lname").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("fname").value.length == 0  ) {
    document.getElementById("error_second_row").innerHTML = languages[active_language]['error_first_name'];
    document.getElementById("error_second_row").style.display = 'block';
    document.getElementById("fname").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("truncation").value.length != 1  ) {
    document.getElementById("error_second_row").innerHTML = languages[active_language]['error_truncation'];
    document.getElementById("error_second_row").style.display = 'block';
    document.getElementById("truncation").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("bdate").value.length != 10  ) {
    document.getElementById("error_third_row").innerHTML = languages[active_language]['error_birthday'];
    document.getElementById("error_third_row").style.display = 'block';
    document.getElementById("bdate").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("idate").value.length != 10  ) {
    document.getElementById("error_third_row").innerHTML = languages[active_language]['error_issue'];
    document.getElementById("error_third_row").style.display = 'block';
    document.getElementById("idate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } 

  if ( document.getElementById("edate").value.length != 10  ) { 
    document.getElementById("error_third_row").innerHTML = languages[active_language]['error_expiry'];
    document.getElementById("error_third_row").style.display = 'block';
    document.getElementById("edate").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("doc_number").value.length == 0  ) {
    document.getElementById("error_four_row").innerHTML = languages[active_language]['error_docnumber'];
    document.getElementById("error_four_row").style.display = 'block';
    document.getElementById("doc_number").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("doc_class_txt").value == languages[active_language]['doc_class_option']  ) {
    document.getElementById("error_four_row").innerHTML = languages[active_language]['error_class'];
    document.getElementById("error_four_row").style.display = 'block';
    document.getElementById("doc_class_txt").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("restriction_txt").value == languages[active_language]['sel_doc_rest']  ) {
    document.getElementById("error_five_row").innerHTML = languages[active_language]['error_rest'];
    document.getElementById("error_five_row").style.display = 'block';
    document.getElementById("restriction_txt").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("endosernent_txt").value == languages[active_language]['sel_doc_endr'] ) {
    document.getElementById("error_five_row").innerHTML = languages[active_language]['error_endr'];
    document.getElementById("error_five_row").style.display = 'block';
    document.getElementById("endosernent_txt").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("discriminator").value.length == 0  ) {
    document.getElementById("error_six_row").innerHTML = languages[active_language]['error_disc'];
    document.getElementById("error_six_row").style.display = 'block';
    document.getElementById("discriminator").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("inventory") != null ) {
      if ( document.getElementById("inventory").value.length == 0 &&
           document.getElementById("state").value != 'OH' &&
           document.getElementById("country").value == 'USA' ) { 
             document.getElementById("error_six_row").innerHTML = languages[active_language]['error_inventory'];
             document.getElementById("error_six_row").style.display = 'block';
             document.getElementById("inventory").focus();
             setTimeout(delete_error, 3000);
             return;    
      } else if ( document.getElementById("inventory").value.length == 0 &&
           document.getElementById("state").value != 'QC' &&
           document.getElementById("country").value == 'CAN' ) {
             document.getElementById("error_six_row").innerHTML = languages[active_language]['error_inventory'];
             document.getElementById("error_six_row").style.display = 'block';
             document.getElementById("inventory").focus();
             setTimeout(delete_error, 3000);
             return;    
      } else if ( document.getElementById("inventory").value.length == 0 &&
              document.getElementById("country").value == 'ARG' ) {
           document.getElementById("error_six_row").innerHTML = languages[active_language]['error_inventory'];
           document.getElementById("error_six_row").style.display = 'block';
           document.getElementById("inventory").focus();
           setTimeout(delete_error, 3000);
           return;    
      }
  }

  if ( document.getElementById("audit") != null ) {
      if ( document.getElementById("audit").value.length == 0 &&
           document.getElementById("state").value != 'AL' && 
           document.getElementById("state").value != 'AK' &&
           document.getElementById("state").value != 'AZ' &&
           document.getElementById("state").value != 'AR' &&
           document.getElementById("state").value != 'CA' &&
           document.getElementById("state").value != 'CT' &&
           document.getElementById("state").value != 'DE' &&
           document.getElementById("state").value != 'FL' && 
           document.getElementById("state").value != 'GA' && 
           document.getElementById("state").value != 'ID' && 
           document.getElementById("state").value != 'IL' && 
           document.getElementById("state").value != 'IN' && 
           document.getElementById("state").value != 'IA' && 
           document.getElementById("state").value != 'KS' && 
           document.getElementById("state").value != 'KY' && 
           document.getElementById("state").value != 'ME' && 
           document.getElementById("state").value != 'MD' && 
           document.getElementById("state").value != 'MA' && 
           document.getElementById("state").value != 'MI' && 
           document.getElementById("state").value != 'MN' && 
           document.getElementById("state").value != 'MS' && 
           document.getElementById("state").value != 'MO' && 
           document.getElementById("state").value != 'MT' && 
           document.getElementById("state").value != 'NE' && 
           document.getElementById("state").value != 'NV' && 
           document.getElementById("state").value != 'NH' && 
           document.getElementById("state").value != 'NJ' && 
           document.getElementById("state").value != 'NM' && 
           document.getElementById("state").value != 'NY' && 
           document.getElementById("state").value != 'NC' && 
           document.getElementById("state").value != 'ND' && 
           document.getElementById("state").value != 'OH' && 
           document.getElementById("state").value != 'OK' && 
           document.getElementById("state").value != 'OR' && 
           document.getElementById("state").value != 'PA' && 
           document.getElementById("state").value != 'RI' && 
           document.getElementById("state").value != 'SC' && 
           document.getElementById("state").value != 'SD' && 
           document.getElementById("state").value != 'TN' && 
           document.getElementById("state").value != 'TX' && 
           document.getElementById("state").value != 'UT' && 
           document.getElementById("state").value != 'VT' && 
           document.getElementById("state").value != 'VA' && 
           document.getElementById("state").value != 'WV' && 
           document.getElementById("state").value != 'WI' && 
           document.getElementById("country").value == 'USA' ) {
              document.getElementById("error_six_row").innerHTML = languages[active_language]['error_audit'];
              document.getElementById("error_six_row").style.display = 'block';
              document.getElementById("audit").focus();

              setTimeout(delete_error, 3000);

              return;     
           }
  }

  if ( document.getElementById("sex").value == languages[active_language]['sel_sex']  ) {
    document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_sex'];
    document.getElementById("error_seven_row").style.display = 'block';
    document.getElementById("sex").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("hair").value == languages[active_language]['sel_hair']  ) {
    document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_hair'];
    document.getElementById("error_seven_row").style.display = 'block';
    document.getElementById("hair").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("eyes").value == languages[active_language]['sel_eyes']  ) {
    document.getElementById("error_seven_row").innerHTML = languages[active_language]['error_eyes'];
    document.getElementById("error_seven_row").style.display = 'block';
    document.getElementById("eyes").focus(); 
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("height_one").value.length == 0 ) {
    document.getElementById("error_eight_row").innerHTML = languages[active_language]['error_height'];
    document.getElementById("error_eight_row").style.display = 'block';
    document.getElementById("height_one").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("height_two").value.length == 0 ) {
    document.getElementById("error_eight_row").innerHTML = languages[active_language]['error_height'];
    document.getElementById("error_eight_row").style.display = 'block';
    document.getElementById("height_two").focus();
    setTimeout(delete_error, 3000);
    return;           
  }

  if ( document.getElementById("weight").value.length == 0 ) {
    document.getElementById("error_eight_row").innerHTML = languages[active_language]['error_weight'];
    document.getElementById("error_eight_row").style.display = 'block';
    document.getElementById("weight").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("address").value.length == 0 ) {
    document.getElementById("error_nine_row").innerHTML = languages[active_language]['error_address'];
    document.getElementById("error_nine_row").style.display = 'block';
    document.getElementById("address").focus();
    setTimeout(delete_error, 3000);
    return;      
  } 

  if ( document.getElementById("city").value.length == 0 ) {
    document.getElementById("error_nine_row").innerHTML = languages[active_language]['error_city'];
    document.getElementById("error_nine_row").style.display = 'block';
    document.getElementById("city").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( document.getElementById("zipcode").value.length == 0 ) {
    document.getElementById("error_nine_row").innerHTML = languages[active_language]['error_zip'];
    document.getElementById("error_nine_row").style.display = 'block';
    document.getElementById("zipcode").focus();
    setTimeout(delete_error, 3000);
    return;      
  }

  if ( state == 'CT' &&  document.getElementById("ct_name_sufix").value.length == 0 ) {   
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ct_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'GA' && document.getElementById("country_ge").value.length == 0 ) {
    document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_region'];
    document.getElementById("error_ten_row").style.display = 'block';
    document.getElementById("country_ge").focus();
    setTimeout(delete_error, 3000);
    return;   
  }

  if ( state == 'IN' && document.getElementById("in_issuecode").value.length != 3 ) {
    document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
    document.getElementById("error_ten_row").style.display = 'block';
    document.getElementById("in_issuecode").focus();
    setTimeout(delete_error, 3000);
    return;   
  }

  if ( state == 'IN' && document.getElementById("in_name_sufix").value.length == 0 ) {   
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("in_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'LA' && document.getElementById("la_issueoffice").value.length != 3 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("la_issueoffice").focus();
        setTimeout(delete_error, 3000); 
        return;
  }

  if ( state == 'LA' &&  document.getElementById("la_parish").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_parish'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("la_parish").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'LA' &&  document.getElementById("la_address2").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_address2'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("la_address2").focus();
        setTimeout(delete_error, 3000);
        return;
  }


  if ( state == 'ME' &&  document.getElementById("me_name_sufix").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("me_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'MA' &&  document.getElementById("ma_address2").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_address2'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ma_address2").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'MI' &&  document.getElementById("mi_address2").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_address2'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("mi_address2").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NE' &&  document.getElementById("ne_name_sufix").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ne_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NH' &&  document.getElementById("nh_address2").value.length == 0 ) { 
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_address2'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nh_address2").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NJ' &&  document.getElementById("nj_option1").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_option1'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nj_option1").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NJ' &&  document.getElementById("nj_option2").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_option2'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nj_option2").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NJ' &&  document.getElementById("nj_option3").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_option3'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nj_option3").focus(); 
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'ND' &&  document.getElementById("nd_option_1").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nd_option_1").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'NV' && document.getElementById("nv_name_sufix").value.length == 0 ) {   
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("nv_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }


  if ( state == 'OH' &&  document.getElementById("oh_name_sufix").value.length == 0 ) {   
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("oh_name_sufix").focus();
        setTimeout(delete_error, 3000);
        return;
  }

  if ( state == 'OH' &&  document.getElementById("oh_state_birth").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_birthstate'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("oh_state_birth").focus();
        setTimeout(delete_error, 3000); 
        return;    
  }

  if ( state == 'PA' &&  document.getElementById("pa_dups").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_dups'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("pa_dups").focus();
        setTimeout(delete_error, 3000); 
        return;
  }

  if ( state == 'PA' &&  document.getElementById("pa_is_office").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("pa_is_office").focus();
        setTimeout(delete_error, 3000); 
        return; 
  }

  if ( state == 'TX' &&  document.getElementById("tx_name_sufix").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("tx_name_sufix").focus();
        setTimeout(delete_error, 3000); 
        return;
  }

  if ( state == 'ON' &&  document.getElementById("on_vnumber").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_on_vehicle_number'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("on_vnumber").focus();
        setTimeout(delete_error, 3000); 
        return;
  }

  if ( state == 'OK' &&  document.getElementById("ok_name_sufix").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_region'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ok_name_sufix").focus();
        setTimeout(delete_error, 3000); 
        return;
  }


  if ( state == 'OK' &&  document.getElementById("ok_state_birth").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_birthstate'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ok_state_birth").focus();
        setTimeout(delete_error, 3000); 
        return;    
  }

  if ( state == 'OK' &&  document.getElementById("ok_additional").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_additional'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ok_additional").focus();
        setTimeout(delete_error, 3000); 
        return;    
  }

  if ( state == 'OR' &&  document.getElementById("or_name_sufix").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_sufix'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("or_name_sufix").focus();
        setTimeout(delete_error, 3000); 
        return;
  }

  if ( state == 'UT' &&  document.getElementById("ut_is_office").value.length == 0 ) {
        document.getElementById("error_ten_row").innerHTML = languages[active_language]['error_issue_office'];
        document.getElementById("error_ten_row").style.display = 'block';
        document.getElementById("ut_is_office").focus();
        setTimeout(delete_error, 3000); 
        return; 
  }


  var country_ed = document.getElementById("country").value;
  var state_ed = document.getElementById("state").value; 
  var doc_type_ed = document.getElementById("doc_type").value;
  var lname_ed = document.getElementById("lname").value;
  var fname_ed = document.getElementById("fname").value;
  var mname_ed = document.getElementById("mname").value;
  if (format_type == 'ARG') {
    var bdate_ed = document.getElementById("bdate").value.substring(3,5) + "/" + document.getElementById("bdate").value.substring(0,2) + "/" + document.getElementById("bdate").value.substring(6,10);
    var idate_ed = document.getElementById("idate").value.substring(3,5) + "/" + document.getElementById("idate").value.substring(0,2) + "/" + document.getElementById("idate").value.substring(6,10);
    var edate_ed = document.getElementById("edate").value.substring(3,5) + "/" + document.getElementById("edate").value.substring(0,2) + "/" + document.getElementById("edate").value.substring(6,10);
  } else if ( format_type == 'CAN') {
    var bdate_ed = document.getElementById("bdate").value.substring(5,7) + "/" + document.getElementById("bdate").value.substring(8,10) + "/" + document.getElementById("bdate").value.substring(0,4);
    var idate_ed = document.getElementById("idate").value.substring(5,7) + "/" + document.getElementById("idate").value.substring(8,10) + "/" + document.getElementById("idate").value.substring(0,4);
    var edate_ed = document.getElementById("edate").value.substring(5,7) + "/" + document.getElementById("edate").value.substring(8,10) + "/" + document.getElementById("edate").value.substring(0,4);
  } else if ( format_type == 'USA') {
    var bdate_ed = document.getElementById("bdate").value.substring(0,2) + "/" + document.getElementById("bdate").value.substring(3,5) + "/" + document.getElementById("bdate").value.substring(6,10);
    var idate_ed = document.getElementById("idate").value.substring(0,2) + "/" + document.getElementById("idate").value.substring(3,5) + "/" + document.getElementById("idate").value.substring(6,10);
    var edate_ed = document.getElementById("edate").value.substring(0,2) + "/" + document.getElementById("edate").value.substring(3,5) + "/" + document.getElementById("edate").value.substring(6,10);
  } 
  
  var sex_ed = document.getElementById("sex").value;
  var hair_ed = document.getElementById("hair").value;
  var eyes_ed = document.getElementById("eyes").value;

  if ( document.getElementById("height_one").value == languages[active_language]['doesnotrequired'] && document.getElementById("height_two").value == languages[active_language]['doesnotrequired']  ) {
    var height_ed = "5'5\"";
  } else {
    var height_ed = document.getElementById("height_one").value.replaceAll('0', '') + "'" + document.getElementById("height_two").value + '"';
  }
  

  if ( document.getElementById("weight").value == languages[active_language]['doesnotrequired'] ) {
    var weight_ed = "0";
  } else {
    var weight_ed = document.getElementById("weight").value;
  }
  
  var street_ed = document.getElementById("address").value;
  var city_ed = document.getElementById("city").value;
  var zip_ed = document.getElementById("zipcode").value;

  if ( document.getElementById("zipcode").value == languages[active_language]['doesnotrequired']  ) {
    var zip_ed = "000000000";
  } else {
    if ( country_ed == 'USA' ) {
      var zip_ed = afterD(document.getElementById("zipcode").value, 9);
    } else {
      var zip_ed = document.getElementById("zipcode").value;
    }
  }

  var doc_class_ed = document.getElementById("doc_class_txt").value;
  var comp_ed = document.getElementById("doc_comp").value;
  var arrays_with_adds = [];
  if ( veteran == 'VETERAN' ) {
        arrays_with_adds.push("VETERAN");
  }
  if ( donor == 'DONOR' ) {
        arrays_with_adds.push("DONOR");
  }    
  if ( safe == 'SAFE' ) {
        arrays_with_adds.push("SAFE");
  } 
  var badges_ed = arrays_with_adds.join(',');
  var doc_num_ed = document.getElementById("doc_number").value;
  var rest_ed = document.getElementById("restriction_txt").value;
  var endr_ed = document.getElementById("endosernent_txt").value;
  var disc_ed = document.getElementById("discriminator").value;
  if ( document.getElementById("inventory") != null ) {
    var inv_ed = document.getElementById("inventory").value;
  } else {
    var inv_ed = '';
  }
  if ( document.getElementById("audit") != null ) {
    var audit_ed = document.getElementById("audit").value;
  } else {
    var audit_ed = '';
  }
  
  var skin_ed = document.getElementById("scin_color").value;
    
  var rev_ed = document.getElementById("revision").value;
  var truncation_ed = document.getElementById("truncation").value;

  var final_line = country_ed + ';' + state_ed + ';' + doc_type_ed + ';' + lname_ed + ';' + fname_ed + ';' + mname_ed + ';' + bdate_ed + ';' + idate_ed + ';' + edate_ed + ';' + sex_ed + ';' + hair_ed + ';' + eyes_ed + ';' + height_ed + ';' + weight_ed + ';' + street_ed + ';' + city_ed + ';' + zip_ed + ';' + doc_class_ed + ';' + comp_ed + ';' + badges_ed + ';' + doc_num_ed + ';' + rest_ed + ';' + endr_ed + ';' + disc_ed + ';' + inv_ed + ';' + audit_ed + ';' + skin_ed + ';' + rev_ed + ';' + truncation_ed;
  if ( state == 'CT' ) {
    final_line += ';NONE;' + document.getElementById("ct_name_sufix").value.toUpperCase();
  }
  if ( state == 'DE' ) {
    final_line += ';' + document.getElementById("de_address2").value.toUpperCase();
  }
  if ( state == 'GA' ) {
    final_line += ';NONE;NONE;NONE;' + document.getElementById("country_ge").value.toUpperCase();
  }
  if ( state == 'HI' ) {
    final_line += ';' + document.getElementById("hi_address2").value.toUpperCase();
  }
  if ( state == 'IN' ) {
    final_line += ';NONE;' + document.getElementById("in_name_sufix").value.toUpperCase() + ';' + document.getElementById("in_issuecode").value;
  } 
  if ( state == 'LA' ) {
    final_line += ';' + document.getElementById("la_address2").value + ';NONE;' + document.getElementById("la_issueoffice").value + ';NONE;NONE;' + document.getElementById("la_parish").value;
  }  
  if ( state == 'ME' ) {
    final_line += ';NONE;' + document.getElementById("me_name_sufix").value;
  } 
  if ( state == 'MA' ) {
    final_line += ';' + document.getElementById("ma_address2").value;
  }
  if ( state == 'MI' ) {
    final_line += ';' + document.getElementById("mi_address2").value;
  }
  if ( state == 'NE' ) {
    final_line += ';NONE;' + document.getElementById("ne_name_sufix").value;
  }   
  if ( state == 'NH' ) {
    final_line += ';' + document.getElementById("nh_address2").value;
  } 
  if ( state == 'NJ' ) {
    final_line += ';NONE;NONE;NONE;NONE;NONE;NONE;' + document.getElementById("nj_option3").value + ';' + document.getElementById("nj_option1").value + ';' + document.getElementById("nj_option2").value;
  }       
  if ( state == 'ND' ) {
    final_line += ';NONE;NONE;' + document.getElementById("nd_option_1").value;
  }  
  if ( state == 'NV' ) {
    final_line += ';' + document.getElementById("nv_address2").value + ';' + document.getElementById("nv_name_sufix").value.toUpperCase();
  }    
  if ( state == 'OH' ) {
    final_line += ';' + document.getElementById("oh_address2").value + ';' + document.getElementById("oh_name_sufix").value + ';NONE;NONE;' + document.getElementById("oh_state_birth").value.toUpperCase();
  }
  if ( state == 'OK' ) {
    final_line += ';NONE;' + document.getElementById("ok_name_sufix").value  + ';NONE;' + document.getElementById("ok_state_birth").value.toUpperCase() + ';NONE;NONE;' + document.getElementById("ok_additional").value;
  }  
  if ( state == 'OR' ) {
    final_line += ';' + document.getElementById("or_address2").value +  ';' + document.getElementById("or_name_sufix").value;;
  }    
  if ( state == 'PA' ) {
    final_line += ';NONE;NONE;' + document.getElementById("pa_is_office").value + ';NONE;NONE;' + document.getElementById("pa_dups").value;
  }
  if ( state == 'TN' ) {
    final_line += ';' + document.getElementById("tn_address2").value;
  }
  if ( state == 'TX' ) {
    final_line += ';NONE;' + document.getElementById("tx_name_sufix").value;
  }
  if ( state == 'UT' ) {
    final_line += ';NONE;NONE;' + document.getElementById("ut_is_office").value;
  }
  if ( state == 'BC' ) {
    final_line += ';NONE;NONE;NONE;NONE;NONE;NONE;NONE;NONE;NONE;' + document.getElementById("bc_phn").value;
  }
  if ( state == 'ON' ) {
    final_line += ';NONE;NONE;NONE;NONE;NONE;NONE;NONE;NONE;NONE;NONE;' + document.getElementById("on_vnumber").value;
  }
  if ( state == 'SK' ) {
    final_line += ';' + document.getElementById("sk_address_2").value;
  }

  if ( generation_type == 1 ) {

    var send_http = new XMLHttpRequest();
    var params = 'user_form='+user_form+'&params='+final_line;

        send_http.open('POST', generate_link, true);
        send_http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        send_http.onreadystatechange = function() {
        if(send_http.readyState == 4 && send_http.status == 200) {

          var result_data = JSON.parse(send_http.responseText);
               
          switch (result_data.type) {
          case 1:
            if( result_data.status == 0 ) {
              var http_for_minus_generations = new XMLHttpRequest();
              var params_for_minus_generations = 'user_form='+user_form;

                  http_for_minus_generations.open('POST', 'https://pdf417mrz.xyz/minus_generation', true);
                  http_for_minus_generations.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                  http_for_minus_generations.onreadystatechange = function() { 
                    if(http_for_minus_generations.readyState == 4 && http_for_minus_generations.status == 200) {
                      document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
                    }
                  };
                  http_for_minus_generations.send(params_for_minus_generations);  
            } else {
              document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
            }          
          break;
          default:
            document.getElementById("final_button").innerHTML = result_data.type + ' - ' +languages[active_language]['error']; 
          break;
          }

        } else if (send_http.readyState == 4 && send_http.status == 500) {
          setTimeout(retry_again(1, final_line), 5000);
        }
        };

        send_http.send(params);  
   
    
    document.getElementById("final_button").classList.add('stopped_button');
    document.getElementById("final_button").classList.remove('generate_button');

    document.getElementById("final_button").disabled = true;
    document.getElementById("final_button").innerHTML = languages[active_language]['loading']; 
  } else {
    window.location.href = "https://t.me/pdf417mrz_bot";
  }
}const all_char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
const digits = '1234567890';
const languages = {'en': 
                    { 'auto': 'Auto',
                      'additonal_data': 'Additional data',
                      'additonal_data_more': 'Additional data 2',
                      'error_country': 'Please, select the country of the document',
                      'error_vtype': 'Please, provide type of the ID ( Not more than 2 symbols )',
                      'error_nationality': 'Please, provide the country of birthday of the client',
                      'error_last_name': 'Please, provide the last name of the client',
                      'error_first_name': 'Please, provide the first name of the client',
                      'error_sex': 'Please, select the sex of the client',
                      'error_first_date': 'Please, provide the birthday date of the client',
                      'error_second_date': 'Please, provide the expiry date of the document',
                      'error_document_number': 'Please, provide the document number of the document',
                      'error_additonal_data': 'Please, provide the additonal data for the document',
                      'error_additonal_data_more': 'Please, provide the additonal data 2 for the document',
                      'generate': 'Generate!',
                      'generated_b': 'Generated! Сheck telegram bot.',
                      'loading': 'Loading...',
                      'error': 'Unexpected error',
                      'format': 'Format',
                      'buy_label': 'Buy',
                      'text_buy_label': '<b>Attention!</b> You are generating barcodes for the template of the document showed above. Please, make sure that your have a right template or TEMPLATE_NAME from us.',
                      'light': ' Light',
                      'dark': '  Dark',
                      'new_generation': 'New generation!'
                    }, 
                   'cn': 
                    { 'auto': ' 汽车 ',
                      'additonal_data': '附加数据',
                      'additonal_data_more': '附加数据2',                      
                      'error_country': '请选择文件的国家',
                      'error_vtype': '请提供 ID 类型（最多 2 个字符）',
                      'error_nationality': '请提供客户的生日国家',
                      'error_last_name': '请提供客户的姓氏',
                      'error_first_name': '请提供客户的名字',
                      'error_sex': '请选择客户的性别',
                      'error_first_date': '请提供客户的生日日期',
                      'error_second_date': '请提供文件的到期日期',
                      'error_document_number': '请提供文件的文件编号',
                      'error_additonal_data': '请提供文档的附加数据',
                      'error_additonal_data_more': '请提供补充数据2',
                      'generate': '产生!',
                      'generated_b': '已生成! 请检查电报机器人',
                      'loading': '正在加载...',
                      'error': '意外的错误',
                      'format': '格式',
                      'buy_label': '购买',
                      'text_buy_label': '<b>注意！</b>您正在为所显示文档的模板生成条形码。请确保您拥有正确的模板或从我们这里TEMPLATE_NAME。',
                      'light': '     光',
                      'dark': '   黑暗的',
                      'new_generation': '新一代!'
                   },
                   'hi': 
                    { 'auto': 'ऑटो',
                      'additonal_data': 'अतिरिक्त डेटा',
                      'additonal_data_more': 'अतिरिक्त डेटा 2',
                      'error_country': 'कृपया, दस्तावेज़ का देश चुनें',
                      'error_vtype': 'कृपया एक आईडी प्रकार प्रदान करें (अधिकतम 2 अक्षर)',
                      'error_nationality': 'कृपया, ग्राहक के जन्मदिन का देश प्रदान करें',
                      'error_last_name': 'कृपया, ग्राहक का अंतिम नाम प्रदान करें',
                      'error_first_name': 'कृपया, क्लाइंट का पहला नाम प्रदान करें',
                      'error_sex': 'कृपया, ग्राहक के लिंग का चयन करें',
                      'error_first_date': 'कृपया, ग्राहक की जन्म तिथि प्रदान करें',
                      'error_second_date': 'कृपया, दस्तावेज़ की समाप्ति तिथि प्रदान करें',
                      'error_document_number': 'कृपया, दस्तावेज़ की दस्तावेज़ संख्या प्रदान करें',
                      'error_additonal_data': 'कृपया दस्तावेज़ के लिए अतिरिक्त डेटा प्रदान करें',
                      'error_additonal_data_more': 'कृपया अतिरिक्त डेटा प्रदान करें 2',
                      'generate': 'उत्पन्न!',
                      'generated_b': 'उत्पन्न! कृपया, टेलीग्राम बॉट की जाँच करें।',
                      'loading': 'लोड हो रहा है...',
                      'error': 'अप्रत्याशित त्रुटि',
                      'format': 'प्रारूप',
                      'buy_label': 'खरीदें',
                      'text_buy_label': '<b>ध्यान दें!</b> आप दिखाए गए दस्तावेज़ के टेम्पलेट के लिए बारकोड बना रहे हैं। कृपया, सुनिश्चित करें कि आपके पास सही टेम्पलेट है या हमसे TEMPLATE_NAME।',
                      'light': '   रोशनी',
                      'dark': '   अँधेरा',
                      'new_generation': 'नई पीढ़ी!'
                   },
                   'ru': 
                    { 'auto': 'Авто',
                      'additonal_data': 'Дополнительные данные',
                      'additonal_data_more': 'Дополнительные данные 2',
                      'error_country': 'Пожалуйста, выберите страну документа',
                      'error_vtype': 'Пожалуйста, предоставьте тип ID ( не больше 2 символов )',
                      'error_nationality': 'Пожалуйста, предоставьте страну рождения клиента',
                      'error_last_name': 'Пожалуйста, предоставьте фамилию клиента',
                      'error_first_name': 'Пожалуйста, предоставьте имя клиента',
                      'error_sex': 'Пожалуйста, выберите пол клиента',
                      'error_first_date': 'Пожалуйста, предоставьте дату рождения клиента',
                      'error_second_date': 'Пожалуйста, предоставьте дату окончания действительности документа',
                      'error_document_number': 'Пожалуйста, предоставьте номер документа',
                      'error_additonal_data': 'Пожалуйста, предоставьте дополнительные данные для документа',
                      'error_additonal_data_more': 'Пожалуйста, предоставьте дополнительные данные 2 для документа',
                      'generate': 'Сгенирировать!',
                      'generated_b': 'Сгенерировано! Проверьте телеграмм бота.',
                      'loading': 'Загрузка',
                      'error': 'Неожиданная ошибка',
                      'format': 'Формат',
                      'buy_label': 'Купить',
                      'text_buy_label': '<b>Внимание!</b> Вы генерируете штрихкоды для шаблона документа, показанного выше. Пожалуйста, убедитесь, что у вас правильный шаблон или TEMPLATE_NAME у нас.',
                      'light': 'Светлая',
                      'dark': 'Тёмная',
                      'new_generation': 'Новая генерация!'
                   },
                   'ua':
                    { 'auto': 'Авто',
                      'additonal_data': 'Додаткові дані',
                      'additonal_data_more': 'Додаткові дані 2',                      
                      'error_country': 'Оберіть, будь ласка, країну документу',
                      'error_vtype': 'Надайте, будь ласка, тип ID ( не більше 2 символів )',
                      'error_nationality': 'Надайте, будь ласка, країну народження клієнта',
                      'error_last_name': 'Надайте, будь ласка, призвище клієнта',
                      'error_first_name': 'Надайте, будь ласка, ім\'я клієнта',
                      'error_sex': 'Оберіть, будь ласка, стать клієнта',
                      'error_first_date': 'Надайте, будь ласка, дату народження клієнта',
                      'error_second_date': 'Надайте, будь ласка, термін придатності документу',
                      'error_document_number': 'Надайте, будь ласка, номер документу',
                      'error_additonal_data': 'Будь ласка, надайте додаткові дані для документа',
                      'error_additonal_data_more': 'Будь ласка, надайте додаткові дані 2 для документа',
                      'generate': 'Згенерувати!',
                      'generated_b': 'Згенеровано! Перевірте телеграм-бот.',
                      'loading': 'Завантаження...',
                      'error': 'Неочікувана помилка',
                      'format': 'Формат',
                      'buy_label': 'Купити',
                      'text_buy_label': '<b>Увага!</b> Ви генеруєте штрих-коди для шаблону документа, що показоно вище. Будь ласка, переконайтеся, що у вас є правильний шаблон, або TEMPLATE_NAME у нас.',
                      'light': 'Світла',
                      'dark': ' Темна',
                      'new_generation': 'Нова генерація!'
                    },
                  }


var country = '';

function new_toggleThemeColor() {
  var body = document.getElementById("body");
  if ( body.className == 'dark-mode') {
    body.className = "dark-mode"  == "light-mode" ? "dark-mode" : "light-mode";
  } else {
    body.className = "light-mode"  == "light-mode" ? "dark-mode" : "dark-mode";
  }
}

function toggleLight() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "dark-mode" ? "light-mode" : "light-mode";
}

function toggleDark() {
  var body = document.getElementById("body");
  var currentClass = body.className;
  body.className = currentClass == "light-mode" ? "dark-mode" : "dark-mode";
}

$(".ld-mode > .btn").click(function(){
  $(".ld-mode > .btn").removeClass("active");
  $(this).addClass("active");
});

function makestr(length, what) {
    let result = '';
    const charactersLength = what.length;
    let counter = 0;
    while (counter < length) {
      result += what.charAt(Math.floor(Math.random() * charactersLength));
      counter += 1;
    }
    return result;
}

function delete_error() {
  for (var i = 0; i < document.getElementsByClassName('form_error').length; i++) {
    document.getElementsByClassName('form_error')[i].style.display = 'none';
  }
}

function change_lan(language) {
  active_language = language;
  switch(language) {  
    case 'en': 
      document.getElementById("div_with_copy").innerHTML = 'Copied!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Light';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Dark';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Please, pay attention that this is test form. For getting barcodes you required to have active subscription. You can <a href="https://t.me/pdf417mrz_bot">buy subscription</a> directly in bot.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Select Language';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Language';
      }
      document.getElementById("country_selector").innerHTML = 'Country';
      document.getElementById("country_option").innerHTML = 'Select country';
      document.getElementById("vtype_label").innerHTML = 'ID type';
      document.getElementById("nationality_selector").innerHTML = 'Nationality';
      document.getElementById("lname_label").innerHTML = 'Last name';
      document.getElementById("fname_label").innerHTML = 'First name';
      document.getElementById("mname_label").innerHTML = 'Middle name';
      document.getElementById("sex_selector").innerHTML = 'Sex';
      document.getElementById("sex_option").innerHTML = 'Select sex';
      document.getElementById("u_option").innerHTML = 'Unknown';
      document.getElementById("m_option").innerHTML = 'Male';
      document.getElementById("f_option").innerHTML = 'Female';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Format: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Birthday date';
      document.getElementById("expiry_selector").innerHTML = 'Expiry date';
      document.getElementById("number_selector").innerHTML = 'Document number';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Auto';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Clear form!';
      }
      document.getElementById("final_button").innerHTML = 'Generate!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Additional data';
      }
      if( document.getElementById("additional_selector_more") != null ) {
        document.getElementById("additional_selector_more").innerHTML = 'Additional data 2';
      }
    break;
    case 'cn':
      document.getElementById("div_with_copy").innerHTML = '复制了!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = '光';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = '黑暗的';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = '请注意，这是测试表格。 要获取条形码，您需要有效订阅。 您可以直接在机器人中<a href="https://t.me/pdf417mrz_bot">购买订阅</a>。';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = '选择语言';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = '语言';
      }
      document.getElementById("country_selector").innerHTML = '国家';
      document.getElementById("country_option").innerHTML = '选择国家';
      document.getElementById("vtype_label").innerHTML = '身份证类型';
      document.getElementById("nationality_selector").innerHTML = '国籍';
      document.getElementById("lname_label").innerHTML = '姓';
      document.getElementById("fname_label").innerHTML = '名';
      document.getElementById("mname_label").innerHTML = '中间名字';
      document.getElementById("sex_selector").innerHTML = '性别';
      document.getElementById("sex_option").innerHTML = '选择性别';
      document.getElementById("u_option").innerHTML = '未知';
      document.getElementById("m_option").innerHTML = '男性';
      document.getElementById("f_option").innerHTML = '女性';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = '格式: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = '生日日期';
      document.getElementById("expiry_selector").innerHTML = '到期日';
      document.getElementById("number_selector").innerHTML = '文件号码';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = ' 汽车 ';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = '表格清晰!';
      }
      document.getElementById("final_button").innerHTML = '产生';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = '附加数据';
      }
      if( document.getElementById("additional_selector_more") != null ) {
        document.getElementById("additional_selector_more").innerHTML = '附加数据2';
      }
    break;
    case 'hi':
      document.getElementById("div_with_copy").innerHTML = 'नकल की गई!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'रोशनी';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'अँधेरा';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'कृपया ध्यान दें कि यह परीक्षण प्रपत्र है। बारकोड प्राप्त करने के लिए आपके पास सक्रिय सदस्यता होना आवश्यक है। आप सीधे बॉट में <a href="https://t.me/pdf417mrz_bot">सदस्यता खरीद सकते हैं</a>।';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'भाषा चुने';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'भाषा';
      }
      document.getElementById("country_selector").innerHTML = 'देश'; 
      document.getElementById("country_option").innerHTML = 'देश चुनें';
      document.getElementById("vtype_label").innerHTML = 'आईडी का प्रकार';
      document.getElementById("nationality_selector").innerHTML = 'राष्ट्रीयता';
      document.getElementById("lname_label").innerHTML = 'उपनाम';
      document.getElementById("fname_label").innerHTML = 'पहला नाम';
      document.getElementById("mname_label").innerHTML = 'मध्य नाम';
      document.getElementById("sex_selector").innerHTML = 'लिंग';
      document.getElementById("sex_option").innerHTML = 'लिंग का चयन करें';
      document.getElementById("u_option").innerHTML = 'अज्ञात';
      document.getElementById("m_option").innerHTML = 'नर';
      document.getElementById("f_option").innerHTML = 'महिला';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'प्रारूप: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'जन्मदिन की तारीख';
      document.getElementById("expiry_selector").innerHTML = 'समाप्ति तिथि';
      document.getElementById("number_selector").innerHTML = 'दस्तावेज़ संख्या';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'ऑटो';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'स्पष्ट प्रपत्र!';
      } 
      document.getElementById("final_button").innerHTML = 'बनाना!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'अतिरिक्त डेटा';
      }
      if( document.getElementById("additional_selector_more") != null ) {
        document.getElementById("additional_selector_more").innerHTML = 'अतिरिक्त डेटा 2';
      }
    break;     
    case 'ru':
      document.getElementById("div_with_copy").innerHTML = 'Скопировано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Светлая';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Тёмная';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Обратите внимание, что это тестовая форма. Для получения штрих-кодов необходима активная подписка. Вы можете <a href="https://t.me/pdf417mrz_bot">купить подписку</a> прямо в боте.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Выбрать язык';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Язык';
      }
      document.getElementById("country_selector").innerHTML = 'Страна';
      document.getElementById("country_option").innerHTML = 'Выбрать страну';
      document.getElementById("vtype_label").innerHTML = 'Тип ID';
      document.getElementById("nationality_selector").innerHTML = 'Национальность';
      document.getElementById("lname_label").innerHTML = 'Фамилия';
      document.getElementById("fname_label").innerHTML = 'Имя';
      document.getElementById("mname_label").innerHTML = 'Отчество'; 
      document.getElementById("sex_selector").innerHTML = 'Пол';
      document.getElementById("sex_option").innerHTML = 'Выбрать пол';
      document.getElementById("u_option").innerHTML = 'Неизвестно';
      document.getElementById("m_option").innerHTML = 'Мужчина';
      document.getElementById("f_option").innerHTML = 'Женщина';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата рождения';
      document.getElementById("expiry_selector").innerHTML = 'Дата истечения срока действия';
      document.getElementById("number_selector").innerHTML = 'Номер документа';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистить форму!';
      }  
      document.getElementById("final_button").innerHTML = 'Сгенерировать!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Дополнительные данные';
      }
      if( document.getElementById("additional_selector_more") != null ) {
        document.getElementById("additional_selector_more").innerHTML = 'Дополнительные данные 2';
      }
    break;
    case 'ua':
      document.getElementById("div_with_copy").innerHTML = 'Скопійовано!';
      if( document.getElementById("light") != null ) {
        document.getElementById("light").innerHTML = 'Світла';
      }
      if( document.getElementById("dark") != null ) {
        document.getElementById("dark").innerHTML = 'Темна';
      }
      if( document.getElementById("test_mode") != null ) {
        document.getElementById("test_mode").innerHTML = 'Зверніть увагу, що це тестова форма. Для отримання штрих-кодів вам потрібна активна підписка. Ви можете <a href="https://t.me/pdf417mrz_bot">купити підписку</a> безпосередньо в боті.';
      }
      if( document.getElementById("lang_option") != null ) {
        document.getElementById("lang_option").innerHTML = 'Обрати мову';
      }
      if( document.getElementById("lang_desc") != null ) {
        document.getElementById("lang_desc").innerHTML = 'Мова';
      }
      document.getElementById("country_selector").innerHTML = 'Країна';
      document.getElementById("country_option").innerHTML = 'Обрати країну';
      document.getElementById("vtype_label").innerHTML = 'Тип ID';
      document.getElementById("nationality_selector").innerHTML = 'Національність';
      document.getElementById("lname_label").innerHTML = 'Призвище';
      document.getElementById("fname_label").innerHTML = 'Ім\'я';
      document.getElementById("mname_label").innerHTML = 'По-батькові';
      document.getElementById("sex_selector").innerHTML = 'Стать';
      document.getElementById("sex_option").innerHTML = 'Обрати стать';
      document.getElementById("u_option").innerHTML = 'Невідомо';
      document.getElementById("m_option").innerHTML = 'Чоловік';
      document.getElementById("f_option").innerHTML = 'Жінка';
      for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
        document.getElementsByClassName('gen_button_new')[i].innerHTML = 'Формат: '+format_type;
      }
      document.getElementById("birthday_selector").innerHTML = 'Дата народження';
      document.getElementById("expiry_selector").innerHTML = 'Термін придатності';
      document.getElementById("number_selector").innerHTML = 'Номер документу';
      for (var i = 0; i < document.getElementsByClassName('gen_button').length; i++) {
        document.getElementsByClassName('gen_button')[i].innerHTML = 'Авто';
      }
      if( document.getElementById("reset_button") != null ) {
        document.getElementById("reset_button").innerHTML = 'Очистити форму!';
      }  
      document.getElementById("final_button").innerHTML = 'Згенерувати!';
      if( document.getElementById("additional_selector") != null ) {
        document.getElementById("additional_selector").innerHTML = 'Додаткові дані';
      }
      if( document.getElementById("additional_selector_more") != null ) {
        document.getElementById("additional_selector_more").innerHTML = 'Додаткові дані 2';
      }
    break;   
  }

  var all_objects = document.getElementsByClassName('current_link');
  for (let z = 0; z < all_objects.length; z++) {
    all_objects[z].classList.remove("current_link");
  }

  if ( !generate_link.includes(" AND ") ) {
    document.getElementById("lang_"+language).classList.add("current_link");
  }

}

var generate_link = document.getElementById("act_generate").innerHTML;
var user_form = document.getElementById("user_form").innerHTML;

var active_language = document.getElementById("act_lang").innerHTML;
    change_lan(active_language);
    if( document.getElementById("lang") != null ) {
      document.getElementById("lang").value = active_language;
    }


function nationality_keyup( nationality_country ) {
  var length = nationality_country.length;
  if( length > 3 ) {
    document.getElementById("nationality").value = nationality_country.substring(0,3).toUpperCase(); 
  } else {
    var last_letter = nationality_country.substring(length - 1, length);
     if ( last_letter.match(/[a-z]/i) ) {    
       document.getElementById("nationality").value = nationality_country.substring(0,length - 1) + last_letter.toUpperCase();
     }  
  }
}

function bd_onkeyup(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 1 && last_char != 1  && last_char != 0) {
      document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value + '/';
    } else if ( elem_length == 2 ) {
      var elem_month = parseInt(elem.value.substring(0,2));
      if ( elem_month >= 0 && elem_month <= 12) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = '';
      }
    } else if ( elem_length == 5 ) {
      var elem_day = parseInt(elem.value.substring(3,5));
      var elem_month = parseInt(elem.value.substring(0,2));

      if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '/';
        }
      } else {
        document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3);
      }

    } else if ( elem_length == 10 ) {
      document.getElementById('edate').focus();
    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 5 && e.which == 191  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,3) + '0' + document.getElementById(elem.id).value.substring(3,4) + '/';
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } 
 
}

function bd_onkeyup_eur(elem, e) {
  var elem_length = elem.value.length;
  var prev_value = elem.value.substring(0,elem_length - 1); 
  var last_char = parseInt(elem.value.substring(elem_length - 1, elem_length)); 
  if (last_char >= 0 && last_char <= 9) {
    if ( elem_length == 2 ) {
      var elem_day = parseInt(elem.value.substring(0,2));
      if ( elem_day > 31 ) {
        document.getElementById(elem.id).value = prev_value;
      }
    } else if ( elem_length == 3 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 5 ) {

      var elem_day = parseInt(elem.value.substring(0,2));
      var elem_month = parseInt(elem.value.substring(3,5));

      if ( elem_month > 12 || elem_month < 1 ) {
        document.getElementById(elem.id).value = prev_value;
      } else if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
        var day_in_month = 30;
      } else if ( elem_month == 2 ) {
        var day_in_month = 29;       
      } else {
        var day_in_month = 31;             
      }

      if ( elem_day >= 0 && elem_day <= day_in_month) {
        if ( e.which != 8  ) {
          document.getElementById(elem.id).value = document.getElementById(elem.id).value + '.';
        }
      } else {
        document.getElementById(elem.id).value = prev_value;
      }

    } else if ( elem_length == 6 ) {
      document.getElementById(elem.id).value = prev_value;
    } else if ( elem_length == 10 ) {

      document.getElementById('edate').focus();

    } else if ( elem_length > 10 ) {
      document.getElementById(elem.id).value = prev_value;
    }

  } else if ( elem_length == 2 && e.which == 190  ) {
    document.getElementById(elem.id).value = '0' + document.getElementById(elem.id).value.substring(0,1) + '.';
  } else if ( elem_length == 3 && e.which == 190 ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value;
  } else if ( elem_length == 5 && e.which == 190  ) {
    document.getElementById(elem.id).value = document.getElementById(elem.id).value.substring(0,2) + '.0' + document.getElementById(elem.id).value.substring(3,4) + '.';
    
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( elem_length == 6 && e.which == 190 ) {
    var month_cur_change =  document.getElementById(elem.id).value.substring(3,5);
      var day_cur_change = parseInt(document.getElementById(elem.id).value.substring(0,2));
    if( month_cur_change == '02' ) {
      if ( day_cur_change > 29 ) {
        document.getElementById(elem.id).value = '28.' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '01' || month_cur_change == '03' || month_cur_change == '05' || month_cur_change == '07' || month_cur_change == '08' || month_cur_change == '10' || month_cur_change == '12' ) {
      if ( day_cur_change > 31 ) {
        document.getElementById(elem.id).value = '31.0' + month_cur_change + '.';
      }
    } else if ( month_cur_change == '04' || month_cur_change == '06' || month_cur_change == '09' || month_cur_change == '11' ) {
      if ( day_cur_change > 30 ) {
        document.getElementById(elem.id).value = '30.0' + month_cur_change + '.';
      }
    } else {
      document.getElementById(elem.id).value = prev_value;
    }
  } else if ( e.which != 8 ) {
    document.getElementById(elem.id).value = prev_value;
  } else if ( elem_length == 10 ) {
    document.getElementById('edate').focus();
  } else if ( elem_length > 10 ) {
    document.getElementById(elem.id).value = '';
  }
 
}

function change_date_format() {

  if ( format_type == 'USA' ) {
    format_type = 'EUR';
    document.getElementById('bdate').placeholder='DD.MM.YYYY';
    document.getElementById('edate').placeholder='DD.MM.YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event)');
  } else {
    format_type = 'USA'; 
    document.getElementById('bdate').placeholder='MM/DD/YYYY';
    document.getElementById('edate').placeholder='MM/DD/YYYY';
    document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event)');
    document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event)');
  }

  for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
    document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
  }

  if ( document.getElementById('bdate').value.length != 10 ) {
    document.getElementById('bdate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('bdate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('bdate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "/" + document.getElementById('bdate').value.substring(0,2)  + "/" + document.getElementById('bdate').value.substring(6,10);
      } else {
        document.getElementById('bdate').value = document.getElementById('bdate').value.substring(3,5) + "." + document.getElementById('bdate').value.substring(0,2)  + "." + document.getElementById('bdate').value.substring(6,10);
      }
    } else {
      document.getElementById('bdate').value = '';
    }

  }

  if ( document.getElementById('edate').value.length != 10 ) {
    document.getElementById('edate').value = '';
  } else {

    if (format_type == 'USA') {
      var elem_day = parseInt(document.getElementById('edate').value.substring(0,2));
      var elem_month = parseInt(document.getElementById('edate').value.substring(3,5));
    } else {
      var elem_day = parseInt(document.getElementById('edate').value.substring(3,5));
      var elem_month = parseInt(document.getElementById('edate').value.substring(0,2));
    }

    if ( elem_month == 4 || elem_month == 6 || elem_month == 9 || elem_month == 11  ) {
      var day_in_month = 30;
    } else if ( elem_month == 2 ) {
      var day_in_month = 29;       
    } else {
      var day_in_month = 31;             
    }

    if ( elem_day > 0 && elem_day <= day_in_month) {
      if (format_type == 'USA') {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "/" + document.getElementById('edate').value.substring(0,2)  + "/" + document.getElementById('edate').value.substring(6,10);
      } else {
        document.getElementById('edate').value = document.getElementById('edate').value.substring(3,5) + "." + document.getElementById('edate').value.substring(0,2)  + "." + document.getElementById('edate').value.substring(6,10);
      }
    } else {
      document.getElementById('edate').value = '';
    }

  }

}

var format_type = document.getElementById("date_format_u").innerHTML;

if ( format_type == 'USA' ) {
  document.getElementById('bdate').onclick ='MM/DD/YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup(this, event);');
  document.getElementById('edate').placeholder='MM/DD/YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup(this, event);');

} else {
  document.getElementById('bdate').placeholder='DD.MM.YYYY';
  document.getElementById('bdate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
  document.getElementById('edate').placeholder='DD.MM.YYYY';
  document.getElementById('edate').setAttribute('onkeyup','bd_onkeyup_eur(this, event);');
}

for (var i = 0; i < document.getElementsByClassName('gen_button_new').length; i++) {
  document.getElementsByClassName('gen_button_new')[i].innerHTML = languages[active_language]['format'] + ': ' +format_type;
}

function randomDate(start, end) {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

function addYears(date, years) {
  date.setFullYear(date.getFullYear() + years);

  return date;
}


function generate_bdate() {
  var bd = randomDate(new Date(1945, 0, 1), new Date(2006, 0, 1));

  var bgenday = String(bd.getDate());
  if (bgenday.length == 1 ) {
    bgenday = "0" + bgenday;
  }

  var bgenmonth = String(bd.getMonth() + 1);
  if (bgenmonth.length == 1 ) {
    bgenmonth = "0" + bgenmonth;
  }

  var bgenyear = String(bd.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('bdate').value= bgenmonth + '/' + bgenday + '/' + bgenyear;
  } else {
    document.getElementById('bdate').value= bgenday + '.' + bgenmonth + '.' + bgenyear;
  }

}

function generate_edate() {
  var enddate = addYears(new Date(), 4);
  var ed = randomDate(new Date(), enddate);

  var egenday = String(ed.getDate());
  if (egenday.length == 1 ) {
    egenday = "0" + egenday;
  }

  var egenmonth = String(ed.getMonth() + 1);
  if (egenmonth.length == 1 ) {
    egenmonth = "0" + egenmonth;
  }

  var egenyear = String(ed.getFullYear());

  if ( format_type == 'USA' ) {
    document.getElementById('edate').value= egenmonth + '/' + egenday + '/' + egenyear;
  } else {
    document.getElementById('edate').value= egenday + '.' + egenmonth + '.' + egenyear;
  }

}

function idtype_keyup(what_type) {
  if ( country == 'CZE' ) {
    if ( what_type == 'IR' ) {
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html_more").innerHTML = '';
    }
  } else if ( country == 'EST' ) {
    if ( what_type != 'IR' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }
  } else if ( country == 'IRL' ) {
    if ( what_type == 'IR' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }
  } else if ( country == 'LVA' ) { 
    if ( what_type != 'IR' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }   
  } else if ( country == 'POL' ) {
    if ( what_type == 'I' ) {
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html_more").innerHTML = '';
    }  
  } else if ( country == 'PRT' ) {
    if ( what_type == 'I' || what_type == 'ID' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }
  } else if ( country == 'USA' ) {
    if ( what_type == 'IP' ) {
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html_more").innerHTML = '';
    }  
  } else if ( country == 'SVN' ) {
    if ( what_type == 'I' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }
  } else if ( country == 'CHE' ) {
    if ( what_type != 'ID' ) {
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
    } else {
      document.getElementById("add_data_html").innerHTML = '';
    }
  } 
    
}

if (  generate_link.includes(" AND ") ) {
  var country_selection = generate_link.split(' AND ')[0];
  document.getElementById("country").value = country_selection;
  select_country(country_selection);
  document.getElementById("country").disabled = true;
} 


function select_country(selection) {
  document.getElementById("nationality").value = selection;
  country = selection;
  switch (selection) {
    case 'ARM':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'AUT':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2010';
    break;
    case 'ARG':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'BEL':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '2015';
    break;
    case 'BGR':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'CAN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      var revision = '';
    break;
    case 'HRV':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'CYP':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'CZE':
      document.getElementById("add_data_html").innerHTML = '';
      if ( document.getElementById("vtype").value == 'IR' ) {
        document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html_more").innerHTML = '';
      }
      var revision = '';
    break;
    case 'DNK':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'EST':
      if ( document.getElementById("vtype").value != 'IR' ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }      
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2018';
    break;
    case 'FIN':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'FRA':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'DEU':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2010';
    break;
    case 'GRC':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'HUN':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'IRL':
      if ( document.getElementById("vtype").value == 'IR' ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'ITA':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2016';
    break;
    case 'KAZ':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'KGZ':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'LVA':
      if ( document.getElementById("vtype").value != 'IR' ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2012';
    break;
    case 'LTU':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'LUX':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'MLT':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'MDA':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'NLD':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2014';
    break;
    case 'NOR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'POL':
      document.getElementById("add_data_html").innerHTML = '';
      if ( document.getElementById("vtype").value == 'I' ) {
        document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html_more").innerHTML = '';
      }
      var revision = '2015';
    break;
    case 'PRT':
      if ( document.getElementById("vtype").value == 'I' ||
           document.getElementById("vtype").value == 'ID' ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'ROU':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';   
    break;
    case 'UKR':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2016';
    break;
    case 'ARE':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'GBR':
      document.getElementById("add_data_html").innerHTML = '';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'USA':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      if ( document.getElementById("vtype").value == 'IP' ) {
        document.getElementById("add_data_html_more").innerHTML = '<div class="label_pdf" id="additional_selector_more">'+languages[active_language]['additonal_data_more']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data_more" onclick="additional_more_number_copy(event)"></label><button type="button" id="add_data_more_gen_b" class="gen_button" onclick="generate_additional_more();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html_more").innerHTML = '';
      }
      var revision = '';
    break;
    case 'SVK':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'SVN':
      if ( document.getElementById("vtype").value == 'I' ) {
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML = '';
      }
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'ESP':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '2020';
    break;
    case 'SWE':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'CHE':
      if ( document.getElementById("vtype").value != 'ID' ) {   
        document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      } else {
        document.getElementById("add_data_html").innerHTML =  '';
      }
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
    case 'SEN':
      document.getElementById("add_data_html").innerHTML = '<div class="label_pdf" id="additional_selector">'+languages[active_language]['additonal_data']+'</div><div class="inp_height"><label class="new_label"><input class="inputer_with_auto inputer" type="text" id="additonal_data" onclick="additional_number_copy(event)"></label><button type="button" id="add_data_gen_b" class="gen_button" onclick="generate_additional();">'+languages[active_language]['auto']+'</button></div>';
      document.getElementById("add_data_html_more").innerHTML = '';
      var revision = '';
    break;
  }

  selected_revision( country, revision );
}

function selected_revision( sel_country, sel_revision ) {

  var revision_in_public_format = sel_revision;

  if ( revision_in_public_format == '' ) {
    revision_in_public_format = '2000'
  }

     
  var send_http_for_template = new XMLHttpRequest();
  var params_for_template = 'country='+sel_country+'&state=XX&revision='+revision_in_public_format+'&type=ID Card';

         send_http_for_template.open('POST', 'https://pdf417mrz.xyz/api/find-template', true);
         send_http_for_template.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
         send_http_for_template.onreadystatechange = function() {
         if(send_http_for_template.readyState == 4 && send_http_for_template.status == 200) {

          var result_data_for_template = JSON.parse(send_http_for_template.responseText);
               
          switch (result_data_for_template.type) {
          case 1:
            var link_for_template = "https://pdf417mrz.xyz/";

            switch(active_language) {
             case 'cn':
              link_for_template += active_language+'/';
              var seo_link_name = '购买 '+result_data_for_template.title;
              break;
             case 'hi':
              link_for_template += active_language+'/';
              var seo_link_name = result_data_for_template.title+' खरीदें';
              break;
             case 'ru':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купить '+result_data_for_template.title;
              break;
             case 'ua':
              link_for_template += active_language+'/';
              var seo_link_name = 'Купити '+result_data_for_template.title;
              break;
             default:
              var seo_link_name = 'Buy '+result_data_for_template.title;
              break;
            }

            link_for_template += 'psd-templates/'+result_data_for_template.handle;

            document.getElementById('left_column_result').innerHTML = '<div class="col-sm-6 col-md-3 col-lg-3"><div class="shop-item"><div class="shop-item-image"><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.front+'" alt="'+result_data_for_template.title+' - Front Side"/><img class="two_img_inside_item" src="/static/img/templates/'+result_data_for_template.back+'" alt="'+result_data_for_template.title+' - Back Side"/><div class="shop-item-detail"><a href="'+link_for_template+'" target="_blank" class="btn btn-round btn-b"><span class="icon-basket">'+languages[active_language]['buy_label']+'</span></a></div></div><h4 class="shop-item-title font-alt"><a href="'+link_for_template+'">'+result_data_for_template.title+' - '+result_data_for_template.price+'$</a></h4>'+languages[active_language]['text_buy_label'].replace('TEMPLATE_NAME','<a target="_blank" href="'+link_for_template+'">'+seo_link_name+'</a>' )+'</div></div>';
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button><button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
            }
          break;
          default:
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">'+languages[active_language]['generate']+'</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">'+languages[active_language]['new_generation']+'</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">'+languages[active_language]['generate']+'</button>';
            }
          break;
          }

         } else if (send_http_for_template.readyState == 4 && send_http_for_template.status == 404) {
            if (  generate_link.includes(" AND ") ) {
              document.getElementById('left_column_result').innerHTML = '';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
            } else {
              document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
              document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
            }
         }
        };

        send_http_for_template.send(params_for_template);      
}


function generate_document() {

  switch (country) {
    case 'ARM':
      document.getElementById("doc_number").value = '000' + makestr(6, digits);
    break;
    case 'AUT':
      document.getElementById("doc_number").value = 'X' + makestr(7, digits);
    break;
    case 'ARG':
      document.getElementById("doc_number").value =  makestr(2, digits) + '.' + makestr(3, digits) + '.' + makestr(3, digits);
    break;
    case 'BEL':
      document.getElementById("doc_number").value =  makestr(3, digits) + '-' + makestr(7, digits) + '-' + makestr(2, digits);
    break;
    case 'BGR':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'CAN':
      document.getElementById("doc_number").value =  'P' + makestr(1, letters) + makestr(7, digits);
    break;
    case 'HRV':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'CYP':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'CZE':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'DNK':
      document.getElementById("doc_number").value =  'DK' + makestr(7, digits);
    break;
    case 'EST':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'FIN':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'FRA':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(1, digits) + makestr(6, letters) + makestr(1, digits);
    break;
    case 'DEU':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(1, digits) + makestr(2, letters) + makestr(2, digits) + makestr(3, letters);
    break;
    case 'GRC':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'HUN':
      document.getElementById("doc_number").value =  makestr(6, digits) + makestr(2, letters);
    break;
    case 'IRL':
      document.getElementById("doc_number").value =  makestr(1, letters) + makestr(8, digits);
    break;
    case 'ITA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(5, digits) + makestr(2, letters);
    break;
    case 'KAZ':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'KGZ':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'LVA':
      document.getElementById("doc_number").value =  makestr(2, letters) + makestr(7, digits);
    break;
    case 'LTU':
      document.getElementById("doc_number").value =  makestr(8, digits);
    break;
    case 'LUX':
      document.getElementById("doc_number").value =  makestr(3, letters) + makestr(2, digits) + makestr(4, letters);
    break;
    case 'MLT':
      document.getElementById("doc_number").value =  makestr(9, digits);
    break;
    case 'MDA':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(8, digits);
    break;
    case 'NLD':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(1, digits) + makestr(2, letters) + makestr(4, digits);
    break;
    case 'NOR':
      document.getElementById("doc_number").value = makestr(3, letters) + makestr(6, digits);
    break;
    case 'POL':
      document.getElementById("doc_number").value = makestr(3, letters) + makestr(6, digits);
    break;
    case 'PRT':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'ROU':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(7, digits);
    break;
    case 'UKR':
      document.getElementById("doc_number").value = '00' + makestr(7, digits);
    break;
    case 'ARE':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'GBR':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    case 'USA':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(8, digits);
    break;
    case 'SVK':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(6, digits);
    break;
    case 'SVN':
      document.getElementById("doc_number").value = makestr(2, letters) + makestr(7, digits);
    break;
    case 'ESP':
      document.getElementById("doc_number").value = makestr(3, letters) + makestr(6, digits);
    break;
    case 'SWE':
      document.getElementById("doc_number").value = makestr(8, digits);
    break;
    case 'CHE':
      document.getElementById("doc_number").value = makestr(1, letters) + makestr(1, digits) + makestr(1, letters) + makestr(2, digits) + makestr(1, letters) + makestr(2, digits);
    break;
    case 'SEN':
      document.getElementById("doc_number").value = makestr(9, digits);
    break;
    default:
      document.getElementById("doc_number").value = makestr(9, digits);
    break;     
  } 
}


function document_number_copy(e) {
  if( document.getElementById("doc_number").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("doc_number").focus();
    document.getElementById("doc_number").select();

    navigator.clipboard.writeText(document.getElementById("doc_number").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_additional() {
  switch (country) {
    case 'CAN':
      document.getElementById("additonal_data").value = makestr(8, digits);
    break;
    case 'HRV':
      document.getElementById("additonal_data").value = makestr(11, digits);
    break;
    case 'EST':
      if ( document.getElementById("vtype").value != 'IR'  ) {
        document.getElementById("additonal_data").value = makestr(11, digits);
      }
    break;
    case 'IRL':
      if ( document.getElementById("vtype").value == 'IR'  ) {
        document.getElementById("additonal_data").value = makestr(6, digits);
      }
    break;
    case 'IRL':
      if ( document.getElementById("vtype").value == 'IR'  ) {
        document.getElementById("additonal_data").value = makestr(6, digits);
      }
    break;
    case 'KAZ':
      document.getElementById("additonal_data").value = makestr(12, digits);
    break;
    case 'KGZ':
      document.getElementById("additonal_data").value = makestr(15, digits);
    break;
    case 'LVA':
      if ( document.getElementById("vtype").value != 'IR'  ) {
        document.getElementById("additonal_data").value = makestr(6, digits) + '-' + makestr(5, digits);
      }
    break;
    case 'LTU':
      document.getElementById("additonal_data").value = makestr(11, digits);
    break;
    case 'LUX':
      if ( document.getElementById("edate").value.length != 10  ) {
        document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("edate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var exp_day = document.getElementById('bdate').value.substring(3,5);
        var exp_moth = document.getElementById('bdate').value.substring(0,2);
      } else {
        var exp_day = document.getElementById('bdate').value.substring(0,2);
        var exp_moth = document.getElementById('bdate').value.substring(3,5);
      } 
      var exp_year = document.getElementById("edate").value.substring(8,10);
      document.getElementById("additonal_data").value = exp_year + exp_moth + exp_day;
    break;
    case 'MLT':
      document.getElementById("additonal_data").value = makestr(8, digits) + makestr(1, letters);
    break;
    case 'MDA':
      document.getElementById("additonal_data").value = makestr(13, digits);
    break;
    case 'NOR':
      if ( document.getElementById("bdate").value.length != 10  ) {     
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var bth_day = document.getElementById('bdate').value.substring(3,5);
        var bth_moth = document.getElementById('bdate').value.substring(0,2);
      } else {
        var bth_day = document.getElementById('bdate').value.substring(0,2);
        var bth_moth = document.getElementById('bdate').value.substring(3,5);
      } 

      var bth_year = document.getElementById("bdate").value.substring(8,10);

      document.getElementById("additonal_data").value = bth_day + bth_moth + bth_year + '-' + makestr(5, digits);
    break;
    case 'PRT':
      if ( document.getElementById("vtype").value == 'I' || document.getElementById("vtype").value == 'ID'  ) {
        document.getElementById("additonal_data").value = makestr(1, digits) + '-' + makestr(3, all_char);
      }
    break;
    case 'ROU':
      document.getElementById("additonal_data").value = makestr(3, digits);
    break;
    case 'UKR':
      if ( document.getElementById("bdate").value.length != 10  ) {     
        document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
        document.getElementById("error_three").style.display = 'block';
        document.getElementById("bdate").focus();
        setTimeout(delete_error, 3000);
        return;      
      } else if (format_type == 'USA') {
        var bth_day = document.getElementById('bdate').value.substring(3,5);
        var bth_moth = document.getElementById('bdate').value.substring(0,2);
      } else {
        var bth_day = document.getElementById('bdate').value.substring(0,2);
        var bth_moth = document.getElementById('bdate').value.substring(3,5);
      }
      var bth_year = document.getElementById("bdate").value.substring(6,10);

      document.getElementById("additonal_data").value = bth_year + bth_moth + bth_day + '-' + makestr(5, digits);
    break;
    case 'ARE':
      document.getElementById("additonal_data").value = makestr(15, digits);
    break;
    case 'USA':
      if ( document.getElementById("vtype").value == 'IP'  ) {
        document.getElementById("additonal_data").value = "0" + makestr(1, digits) + "-" +  makestr(2, digits) + "-" + makestr(1, letters) + makestr(2, digits) + "-" + makestr(3, digits);
      } else {
        if ( document.getElementById("doc_number").value.length <= 0  ) { 
          document.getElementById("error_four").innerHTML = languages[active_language]['error_document_number'];
          document.getElementById("error_four").style.display = 'block';
          document.getElementById("doc_number").focus();
          setTimeout(delete_error, 3000);
          return;      
        }

        document.getElementById("additonal_data").value = makestr(3, letters) + "0" + document.getElementById("doc_number").value;         
      }
    break;
    case 'SVK':
      document.getElementById("additonal_data").value = makestr(10, digits);
    break;
    case 'SVN':
      if ( document.getElementById("vtype").value == 'I'  ) {
        document.getElementById("additonal_data").value = makestr(13, digits);
      } 
    break;   
    case 'ESP':
      if ( document.getElementById("vtype").value == 'IR'  ) {
        document.getElementById("additonal_data").value = makestr(1, letters) + makestr(7, digits) +  makestr(1, letters);
      } else {
        document.getElementById("additonal_data").value = makestr(8, digits) +  makestr(1, letters);
      }
    break;
    case 'SWE':
      document.getElementById("additonal_data").value = makestr(6, digits) + '-' + makestr(4, digits);
    break;
    case 'CHE':
      if ( document.getElementById("vtype").value != 'ID'  ) {
        document.getElementById("additonal_data").value = makestr(10, digits);
      }
    break;
    case 'SEN':
      document.getElementById("additonal_data").value = makestr(9, digits);
    break;
  }
}


function additional_number_copy(e) {
  if( document.getElementById("additonal_data").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("additonal_data").focus();
    document.getElementById("additonal_data").select();

    navigator.clipboard.writeText(document.getElementById("additonal_data").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function generate_additional_more() {
  switch (country) {
    case 'BEL':
      document.getElementById("additonal_data_more").value = makestr(11, digits);
    break;
    case 'BGR':
      document.getElementById("additonal_data_more").value = makestr(10, digits);
    break;
    case 'CAN':
      document.getElementById("additonal_data_more").value = makestr(6, digits) + "-" + makestr(2, digits); 
    break;
    case 'CZE':
      if ( document.getElementById("vtype").value == 'IR'  ) {
        document.getElementById("additonal_data_more").value = makestr(6, digits) + "/" + makestr(4, digits);
      }
    break;
    case 'POL':
      if ( document.getElementById("vtype").value == 'I'  ) {
        if ( document.getElementById("bdate").value.length != 10  ) {
          document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
          document.getElementById("error_three").style.display = 'block';
          document.getElementById("bdate").focus();
          setTimeout(delete_error, 3000);
          return;      
        } else if (format_type == 'USA') {
          var bth_day = document.getElementById('bdate').value.substring(3,5);
          var bth_moth = document.getElementById('bdate').value.substring(0,2);
        } else {
          var bth_day = document.getElementById('bdate').value.substring(0,2);
          var bth_moth = document.getElementById('bdate').value.substring(3,5);
        }

        var bth_year = document.getElementById("bdate").value.substring(8,10);

        document.getElementById("additonal_data_more").value = bth_year + bth_moth + bth_day  + makestr(5, digits);
      }
    break; 
    case 'USA':
      if ( document.getElementById("vtype").value == 'IP'  ) {
        document.getElementById("additonal_data_more").value = makestr(9, digits);
      } 
    break; 
  }
}


function additional_more_number_copy(e) {
  if( document.getElementById("additonal_data_more").value.length > 0 ) {

    var left  = e.clientX  + "px";
    var top  = e.clientY  + "px";

    document.getElementById("div_with_copy").style.left = left;
    document.getElementById("div_with_copy").style.top = top;

    document.getElementById("additonal_data_more").focus();
    document.getElementById("additonal_data_more").select();

    navigator.clipboard.writeText(document.getElementById("additonal_data_more").value);

    document.getElementById("div_with_copy").style.display = 'block';
    setTimeout(() => { 
      document.getElementById("div_with_copy").style.display = 'none';
    }, "1000");

  }
}


function reset_form() {

  if (  generate_link.includes(" AND ") ) {
    document.getElementById('left_column_result').innerHTML = '';
    document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(2);">Generate!</button>';
  } else {
    document.getElementById('left_column_result').innerHTML = '<button id="reset_button" type="button" class="generate_button_clear" onclick="reset_form();">Clear form!</button>';
    document.getElementById('right_column_result').innerHTML = '<button id="final_button" type="button" class="generate_button" onclick="generate(1);">Generate!</button>';
  }

  document.getElementById("true_good_form").reset();
  document.getElementById("add_data_html").innerHTML = '';
  document.getElementById("add_data_html_more").innerHTML = '';
  if ( document.getElementById("final_button").disabled ) {
    document.getElementById("final_button").classList.add('generate_button');
    document.getElementById("final_button").classList.remove('stopped_button');
    document.getElementById("final_button").disabled = false;
    document.getElementById("final_button").innerHTML = languages[active_language]['generate']; 
  }
  document.getElementById("lang").value = active_language;
}


function generate(generation_type) {
  if ( document.getElementById("country").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_country'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("country").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("vtype").value.length <= 0 || document.getElementById("vtype").value.length > 2  ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_vtype'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("vtype").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("nationality").value.length != 3 ) {
    document.getElementById("error_one").innerHTML = languages[active_language]['error_nationality'];
    document.getElementById("error_one").style.display = 'block';
    document.getElementById("nationality").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("lname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_last_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("lname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("fname").value.length <= 0 ) {
    document.getElementById("error_two").innerHTML = languages[active_language]['error_first_name'];
    document.getElementById("error_two").style.display = 'block';
    document.getElementById("fname").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("sex").value.length != 1 ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_sex'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("sex").focus();
    setTimeout(delete_error, 3000);   
    return;
  } else if ( document.getElementById("bdate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_first_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("bdate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("edate").value.length != 10  ) {
    document.getElementById("error_three").innerHTML = languages[active_language]['error_second_date'];
    document.getElementById("error_three").style.display = 'block';
    document.getElementById("edate").focus();
    setTimeout(delete_error, 3000);
    return;      
  } else if ( document.getElementById("doc_number").value.length <= 0  ) {
    document.getElementById("error_four").innerHTML = languages[active_language]['error_document_number'];
    document.getElementById("error_four").style.display = 'block';
    document.getElementById("doc_number").focus();
    setTimeout(delete_error, 3000);
    return;      
  } 
  
  if ( country == 'CAN' || country == 'HRV' || country == 'KAZ' || country == 'KGZ' ||
       country == 'LTU' || country == 'LUX' || country == 'MLT' || country == 'MDA' ||
       country == 'NOR' || country == 'ROU' || country == 'UKR' || country == 'ARE' ||
       country == 'USA' || country == 'SVK' || country == 'ESP' || country == 'SEN' ||
       country == 'SWE'  ) {
    if ( document.getElementById("additonal_data").value.length <= 0  ) { 
      document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
      document.getElementById("error_four").style.display = 'block';
      document.getElementById("additonal_data").focus();
      setTimeout(delete_error, 3000);
      return;  
    }  
  } else if ( country == 'EST' || country == 'LVA'  ) {
    if ( document.getElementById("vtype").value != 'IR' ) {
      if ( document.getElementById("additonal_data").value.length <= 0  ) {    
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
    }
  } else if ( country == 'IRL' ) {
    if ( document.getElementById("vtype").value == 'IR' ) {
      if ( document.getElementById("additonal_data").value.length <= 0  ) {    
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
    }
  } else if ( country == 'PRT' ) {
    if ( document.getElementById("vtype").value == 'I' || document.getElementById("vtype").value == 'ID' ) {
      if ( document.getElementById("additonal_data").value.length <= 0  ) {    
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
    }
  } else if ( country == 'SVN' ) {
    if ( document.getElementById("vtype").value == 'I' ) {
      if ( document.getElementById("additonal_data").value.length <= 0  ) {    
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
    }
  } else if ( country == 'CHE' ) {
    if ( document.getElementById("vtype").value != 'ID' ) {
      if ( document.getElementById("additonal_data").value.length <= 0  ) {    
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data").focus();
        setTimeout(delete_error, 3000);
        return;   
      }
    }
  }

  if ( country == 'BEL' || country == 'BGR' || country == 'CAN' ) {
    if ( document.getElementById("additonal_data_more").value.length <= 0 ) {   
      document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data_more'];
      document.getElementById("error_four").style.display = 'block';
      document.getElementById("additonal_data_more").focus();
      setTimeout(delete_error, 3000);
      return;      
    }
  } else if ( country == 'CZE' ) {
    if ( document.getElementById("vtype").value == 'IR' ) {
      if ( document.getElementById("additonal_data_more").value.length <= 0 ) { 
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data_more'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data_more").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
    }
  } else if ( country == 'POL' ) {
    if ( document.getElementById("vtype").value == 'I' ) {
      if ( document.getElementById("additonal_data_more").value.length <= 0 ) { 
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data_more'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data_more").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
    }
  } else if ( country == 'USA' ) {
    if ( document.getElementById("vtype").value == 'IP' ) {
      if ( document.getElementById("additonal_data_more").value.length <= 0 ) { 
        document.getElementById("error_four").innerHTML = languages[active_language]['error_additonal_data_more'];
        document.getElementById("error_four").style.display = 'block';
        document.getElementById("additonal_data_more").focus();
        setTimeout(delete_error, 3000);
        return;      
      }
    }
  }

  var country_ed = document.getElementById("country").value;
  var id_type_ed = document.getElementById("vtype").value;
  var lname_ed = document.getElementById("lname").value.toUpperCase().replaceAll(' ', '');
  var name = document.getElementById("fname").value.toUpperCase().replaceAll(' ', '');
    if ( document.getElementById("mname").value.length > 0 ) {
      name += ' '+document.getElementById("mname").value.toUpperCase().replaceAll(' ', '');
    }
  var doc_num_ed = document.getElementById("doc_number").value;
  var nationality_ed = document.getElementById("nationality").value;
  if ( format_type == 'USA' ) {
    var bdate_ed = document.getElementById("bdate").value;
  } else {
    var bdate_ed = document.getElementById("bdate").value.substring(3,5) + '/' + document.getElementById("bdate").value.substring(0,2) + '/' + document.getElementById("bdate").value.substring(6,10);
  }
  var sex_ed = document.getElementById("sex").value;
  if ( format_type == 'USA' ) {
    var edate_ed = document.getElementById("edate").value;
  } else {
    var edate_ed = document.getElementById("edate").value.substring(3,5) + '/' + document.getElementById("edate").value.substring(0,2) + '/' + document.getElementById("edate").value.substring(6,10);
  }  

  var final_line = country_ed + ';' + id_type_ed + ';' + lname_ed + ';' + name + ';' + doc_num_ed + ';' + nationality_ed + ';' + bdate_ed + ';' + sex_ed + ';' + edate_ed;

  if ( country == 'CAN' || country == 'HRV' || country == 'EST' && id_type_ed != 'IR' ||
       country == 'IRL' && id_type_ed == 'IR' || country == 'KAZ' || country == 'KGZ' ||
       country == 'LVA' && id_type_ed != 'IR' || country == 'LTU' || country == 'LUX' ||
       country == 'MLT' || country == 'MDA'   || country == 'NOR' || country == 'SEN' ||
      country == 'PRT' && id_type_ed == 'I' || country == 'PRT' && id_type_ed == 'ID' ||
       country == 'ROU' || country == 'UKR'   || country == 'ARE' || country == 'USA' ||
       country == 'SVK' ||  country == 'SVN' && id_type_ed == 'I' || country == 'ESP' ||
       country == 'CHE' && id_type_ed != 'ID' || country == 'SWE' ) {
    var ad_data_ed = document.getElementById("additonal_data").value;
    final_line += ';' + ad_data_ed;
  }

  if ( country == 'BEL' || country == 'CZE' && id_type_ed == 'IR' ||
       country == 'BGR' || country == 'POL' && id_type_ed ==  'I'  ) {
    var ad_data_more_ed = document.getElementById("additonal_data_more").value;
    final_line += ';_;' + ad_data_more_ed;
  }

  if ( country == 'CAN' || country == 'USA' && id_type_ed == 'IP' ) {
    var ad_data_more_ed = document.getElementById("additonal_data_more").value;
    final_line += ';' + ad_data_more_ed;
  }

  final_line += ';' + format_type;

  if ( generation_type == 1 ) {

    var send_http = new XMLHttpRequest();
    var params = 'user_form='+user_form+'&params='+final_line;

        send_http.open('POST', generate_link, true);
        send_http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        send_http.onreadystatechange = function() {
        if(send_http.readyState == 4 && send_http.status == 200) {
          
          var result_data = JSON.parse(send_http.responseText);
               
          switch (result_data.type) {
          case 1:
            document.getElementById("final_button").innerHTML = languages[active_language]['generated_b'];
          break;
          default:
            document.getElementById("final_button").innerHTML = result_data.type + ' - ' +languages[active_language]['error']; 
          break;
          }

        }
        };

        send_http.send(params);  
   
    
        document.getElementById("final_button").classList.add('stopped_button');
        document.getElementById("final_button").classList.remove('generate_button');

        document.getElementById("final_button").disabled = true;
        document.getElementById("final_button").innerHTML = languages[active_language]['loading']; 

    } else {
      window.location.href = "https://t.me/pdf417mrz_bot";
    }
  
}